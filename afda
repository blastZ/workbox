[33mcommit c25733bd41b6812501767156bdc47a723efafcac[m
Author: blastz <touchzh1996@outlook.com>
Date:   Mon Oct 10 20:10:32 2016 +0800

    First commit

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..c6cbe56[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m*.iml[m
[32m+[m[32m.gradle[m
[32m+[m[32m/local.properties[m
[32m+[m[32m/.idea/workspace.xml[m
[32m+[m[32m/.idea/libraries[m
[32m+[m[32m.DS_Store[m
[32m+[m[32m/build[m
[32m+[m[32m/captures[m
[1mdiff --git a/.idea/.name b/.idea/.name[m
[1mnew file mode 100644[m
[1mindex 0000000..bfd6685[m
[1m--- /dev/null[m
[1m+++ b/.idea/.name[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mWorkBox[m
\ No newline at end of file[m
[1mdiff --git a/.idea/compiler.xml b/.idea/compiler.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..96cc43e[m
[1m--- /dev/null[m
[1m+++ b/.idea/compiler.xml[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="CompilerConfiguration">[m
[32m+[m[32m    <resourceExtensions />[m
[32m+[m[32m    <wildcardResourcePatterns>[m
[32m+[m[32m      <entry name="!?*.java" />[m
[32m+[m[32m      <entry name="!?*.form" />[m
[32m+[m[32m      <entry name="!?*.class" />[m
[32m+[m[32m      <entry name="!?*.groovy" />[m
[32m+[m[32m      <entry name="!?*.scala" />[m
[32m+[m[32m      <entry name="!?*.flex" />[m
[32m+[m[32m      <entry name="!?*.kt" />[m
[32m+[m[32m      <entry name="!?*.clj" />[m
[32m+[m[32m      <entry name="!?*.aj" />[m
[32m+[m[32m    </wildcardResourcePatterns>[m
[32m+[m[32m    <annotationProcessing>[m
[32m+[m[32m      <profile default="true" name="Default" enabled="false">[m
[32m+[m[32m        <processorPath useClasspath="true" />[m
[32m+[m[32m      </profile>[m
[32m+[m[32m    </annotationProcessing>[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/copyright/profiles_settings.xml b/.idea/copyright/profiles_settings.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..e7bedf3[m
[1m--- /dev/null[m
[1m+++ b/.idea/copyright/profiles_settings.xml[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32m<component name="CopyrightManager">[m
[32m+[m[32m  <settings default="" />[m
[32m+[m[32m</component>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/encodings.xml b/.idea/encodings.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..97626ba[m
[1m--- /dev/null[m
[1m+++ b/.idea/encodings.xml[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="Encoding">[m
[32m+[m[32m    <file url="PROJECT" charset="UTF-8" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/gradle.xml b/.idea/gradle.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..86c860c[m
[1m--- /dev/null[m
[1m+++ b/.idea/gradle.xml[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="GradleSettings">[m
[32m+[m[32m    <option name="linkedExternalProjectsSettings">[m
[32m+[m[32m      <GradleProjectSettings>[m
[32m+[m[32m        <option name="distributionType" value="LOCAL" />[m
[32m+[m[32m        <option name="externalProjectPath" value="$PROJECT_DIR$" />[m
[32m+[m[32m        <option name="gradleHome" value="D:\android-studio-ide-141.2456560-windows\android-studio\gradle\gradle-2.8" />[m
[32m+[m[32m        <option name="gradleJvm" value="1.8" />[m
[32m+[m[32m        <option name="modules">[m
[32m+[m[32m          <set>[m
[32m+[m[32m            <option value="$PROJECT_DIR$" />[m
[32m+[m[32m            <option value="$PROJECT_DIR$/app" />[m
[32m+[m[32m          </set>[m
[32m+[m[32m        </option>[m
[32m+[m[32m      </GradleProjectSettings>[m
[32m+[m[32m    </option>[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/misc.xml b/.idea/misc.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..b78652a[m
[1m--- /dev/null[m
[1m+++ b/.idea/misc.xml[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="ProjectLevelVcsManager" settingsEditedManually="false">[m
[32m+[m[32m    <OptionsSetting value="true" id="Add" />[m
[32m+[m[32m    <OptionsSetting value="true" id="Remove" />[m
[32m+[m[32m    <OptionsSetting value="true" id="Checkout" />[m
[32m+[m[32m    <OptionsSetting value="true" id="Update" />[m
[32m+[m[32m    <OptionsSetting value="true" id="Status" />[m
[32m+[m[32m    <OptionsSetting value="true" id="Edit" />[m
[32m+[m[32m    <ConfirmationsSetting value="0" id="Add" />[m
[32m+[m[32m    <ConfirmationsSetting value="0" id="Remove" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">[m
[32m+[m[32m    <output url="file://$PROJECT_DIR$/build/classes" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m  <component name="ProjectType">[m
[32m+[m[32m    <option name="id" value="Android" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/modules.xml b/.idea/modules.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..3a125bc[m
[1m--- /dev/null[m
[1m+++ b/.idea/modules.xml[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="ProjectModuleManager">[m
[32m+[m[32m    <modules>[m
[32m+[m[32m      <module fileurl="file://$PROJECT_DIR$/WorkBox.iml" filepath="$PROJECT_DIR$/WorkBox.iml" />[m
[32m+[m[32m      <module fileurl="file://$PROJECT_DIR$/app/app.iml" filepath="$PROJECT_DIR$/app/app.iml" />[m
[32m+[m[32m    </modules>[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/runConfigurations.xml b/.idea/runConfigurations.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..7f68460[m
[1m--- /dev/null[m
[1m+++ b/.idea/runConfigurations.xml[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="RunConfigurationProducerService">[m
[32m+[m[32m    <option name="ignoredProducers">[m
[32m+[m[32m      <set>[m
[32m+[m[32m        <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />[m
[32m+[m[32m        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />[m
[32m+[m[32m        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />[m
[32m+[m[32m      </set>[m
[32m+[m[32m    </option>[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/vcs.xml b/.idea/vcs.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..6564d52[m
[1m--- /dev/null[m
[1m+++ b/.idea/vcs.xml[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="VcsDirectoryMappings">[m
[32m+[m[32m    <mapping directory="" vcs="" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/app/.gitignore b/app/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..796b96d[m
[1m--- /dev/null[m
[1m+++ b/app/.gitignore[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m/build[m
[1mdiff --git a/app/build.gradle b/app/build.gradle[m
[1mnew file mode 100644[m
[1mindex 0000000..d3b86b5[m
[1m--- /dev/null[m
[1m+++ b/app/build.gradle[m
[36m@@ -0,0 +1,48 @@[m
[32m+[m[32mapply plugin: 'com.android.application'[m
[32m+[m
[32m+[m[32mandroid {[m
[32m+[m[32m    signingConfigs {[m
[32m+[m[32m        config {[m
[32m+[m[32m            storeFile file('D:/keystore/key.jks')[m
[32m+[m[32m            keyAlias 'key'[m
[32m+[m[32m            keyPassword 'zhouhuan521'[m
[32m+[m[32m            storePassword 'zhouhuan521'[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    compileSdkVersion 23[m
[32m+[m[32m    buildToolsVersion "23.0.3"[m
[32m+[m[32m    defaultConfig {[m
[32m+[m[32m        applicationId "com.z.blast.workbox"[m
[32m+[m[32m        minSdkVersion 18[m
[32m+[m[32m        targetSdkVersion 23[m
[32m+[m[32m        versionCode 1[m
[32m+[m[32m        versionName "1.0"[m
[32m+[m[32m        signingConfig signingConfigs.config[m
[32m+[m[32m    }[m
[32m+[m[32m    buildTypes {[m
[32m+[m[32m        release {[m
[32m+[m[32m            minifyEnabled false[m
[32m+[m[32m            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'[m
[32m+[m[32m        }[m
[32m+[m[32m        debug {[m
[32m+[m[32m            signingConfig signingConfigs.config[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    productFlavors {[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mdependencies {[m
[32m+[m[32m    compile fileTree(include: ['*.jar'], dir: 'libs')[m
[32m+[m[32m    testCompile 'junit:junit:4.12'[m
[32m+[m[32m    compile 'com.android.support:appcompat-v7:23.3.0'[m
[32m+[m[32m    compile files('libs/baidumapapi_base_v3_7_3.jar')[m
[32m+[m[32m    compile files('libs/baidumapapi_cloud_v3_7_3.jar')[m
[32m+[m[32m    compile files('libs/baidumapapi_map_v3_7_3.jar')[m
[32m+[m[32m    compile files('libs/baidumapapi_radar_v3_7_3.jar')[m
[32m+[m[32m    compile files('libs/baidumapapi_search_v3_7_3.jar')[m
[32m+[m[32m    compile files('libs/baidumapapi_util_v3_7_3.jar')[m
[32m+[m[32m    compile files('libs/BaiduLBS_Android.jar')[m
[32m+[m[32m    compile files('libs/arity-2.1.2.jar')[m
[32m+[m[32m    compile 'com.google.guava:guava:16.0.1'[m
[32m+[m[32m}[m
[1mdiff --git a/app/libs/BaiduLBS_Android.jar b/app/libs/BaiduLBS_Android.jar[m
[1mnew file mode 100644[m
[1mindex 0000000..c2bffbf[m
Binary files /dev/null and b/app/libs/BaiduLBS_Android.jar differ
[1mdiff --git a/app/libs/arity-2.1.2.jar b/app/libs/arity-2.1.2.jar[m
[1mnew file mode 100644[m
[1mindex 0000000..54c4a98[m
Binary files /dev/null and b/app/libs/arity-2.1.2.jar differ
[1mdiff --git a/app/libs/baidumapapi_base_v3_7_3.jar b/app/libs/baidumapapi_base_v3_7_3.jar[m
[1mnew file mode 100644[m
[1mindex 0000000..6313cc1[m
Binary files /dev/null and b/app/libs/baidumapapi_base_v3_7_3.jar differ
[1mdiff --git a/app/libs/baidumapapi_cloud_v3_7_3.jar b/app/libs/baidumapapi_cloud_v3_7_3.jar[m
[1mnew file mode 100644[m
[1mindex 0000000..05125c2[m
Binary files /dev/null and b/app/libs/baidumapapi_cloud_v3_7_3.jar differ
[1mdiff --git a/app/libs/baidumapapi_map_v3_7_3.jar b/app/libs/baidumapapi_map_v3_7_3.jar[m
[1mnew file mode 100644[m
[1mindex 0000000..9773726[m
Binary files /dev/null and b/app/libs/baidumapapi_map_v3_7_3.jar differ
[1mdiff --git a/app/libs/baidumapapi_radar_v3_7_3.jar b/app/libs/baidumapapi_radar_v3_7_3.jar[m
[1mnew file mode 100644[m
[1mindex 0000000..9fbf73f[m
Binary files /dev/null and b/app/libs/baidumapapi_radar_v3_7_3.jar differ
[1mdiff --git a/app/libs/baidumapapi_search_v3_7_3.jar b/app/libs/baidumapapi_search_v3_7_3.jar[m
[1mnew file mode 100644[m
[1mindex 0000000..1886397[m
Binary files /dev/null and b/app/libs/baidumapapi_search_v3_7_3.jar differ
[1mdiff --git a/app/libs/baidumapapi_util_v3_7_3.jar b/app/libs/baidumapapi_util_v3_7_3.jar[m
[1mnew file mode 100644[m
[1mindex 0000000..7f4be91[m
Binary files /dev/null and b/app/libs/baidumapapi_util_v3_7_3.jar differ
[1mdiff --git a/app/proguard-rules.pro b/app/proguard-rules.pro[m
[1mnew file mode 100644[m
[1mindex 0000000..b3fc5c0[m
[1m--- /dev/null[m
[1m+++ b/app/proguard-rules.pro[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m# Add project specific ProGuard rules here.[m
[32m+[m[32m# By default, the flags in this file are appended to flags specified[m
[32m+[m[32m# in D:\android-sdk_r24.4.1-windows\android-sdk-windows/tools/proguard/proguard-android.txt[m
[32m+[m[32m# You can edit the include path and order by changing the proguardFiles[m
[32m+[m[32m# directive in build.gradle.[m
[32m+[m[32m#[m
[32m+[m[32m# For more details, see[m
[32m+[m[32m#   http://developer.android.com/guide/developing/tools/proguard.html[m
[32m+[m
[32m+[m[32m# Add any project specific keep options here:[m
[32m+[m
[32m+[m[32m# If your project uses WebView with JS, uncomment the following[m
[32m+[m[32m# and specify the fully qualified class name to the JavaScript interface[m
[32m+[m[32m# class:[m
[32m+[m[32m#-keepclassmembers class fqcn.of.javascript.interface.for.webview {[m
[32m+[m[32m#   public *;[m
[32m+[m[32m#}[m
[1mdiff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..025b64d[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/AndroidManifest.xml[m
[36m@@ -0,0 +1,86 @@[m
[32m+[m[32m<manifest xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    package="com.z.blast.workbox">[m
[32m+[m
[32m+[m[32m    <uses-permission android:name="android.permission.FLASHLIGHT"/>[m
[32m+[m[32m    <uses-permission android:name="android.permission.CAMERA"/>[m
[32m+[m[32m    <uses-feature android:name="android.hardware.camera"/>[m
[32m+[m
[32m+[m[32m    <uses-permission android:name="android.permission.WAKE_LOCK" />[m
[32m+[m[32m    <uses-permission android:name="android.permission.VIBRATE" />[m
[32m+[m[32m    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />[m
[32m+[m[32m    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>[m
[32m+[m[32m    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>[m
[32m+[m
[32m+[m[32m    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>[m
[32m+[m[32m    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>[m
[32m+[m[32m    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>[m
[32m+[m[32m    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>[m
[32m+[m[32m    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>[m
[32m+[m[32m    <uses-permission android:name="android.permission.INTERNET"/>[m
[32m+[m[32m    <uses-permission android:name="com.android.launcher.permission.READ_SETTINGS" />[m
[32m+[m[32m    <uses-permission android:name="android.permission.WAKE_LOCK"/>[m
[32m+[m[32m    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />[m
[32m+[m[32m    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />[m
[32m+[m[32m    <uses-permission android:name="android.permission.GET_TASKS" />[m
[32m+[m[32m    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>[m
[32m+[m[32m    <uses-permission android:name="android.permission.WRITE_SETTINGS" />[m
[32m+[m[32m    <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>[m
[32m+[m[32m    <uses-permission android:name="android.permission.READ_LOGS"/>[m
[32m+[m
[32m+[m[32m    <uses-permission android:name="android.permission.VIBRATE"/>[m
[32m+[m
[32m+[m[32m    <application[m
[32m+[m[32m        android:allowBackup="true"[m
[32m+[m[32m        android:icon="@drawable/toolbox_72"[m
[32m+[m[32m        android:label="WorkBox"[m
[32m+[m[32m        android:supportsRtl="true"[m
[32m+[m[32m        android:theme="@android:style/Theme.NoTitleBar">[m
[32m+[m[32m        <activity[m
[32m+[m[32m            android:name=".MainActivity"[m
[32m+[m[32m            android:label="@string/app_name"[m
[32m+[m[32m            android:theme="@android:style/Theme.NoTitleBar">[m
[32m+[m[32m            <intent-filter>[m
[32m+[m[32m                <action android:name="android.intent.action.MAIN" />[m
[32m+[m[32m                <category android:name="android.intent.category.LAUNCHER" />[m
[32m+[m[32m            </intent-filter>[m
[32m+[m[32m        </activity>[m
[32m+[m[32m        <activity android:name=".FlashLightActivity"/>[m
[32m+[m[32m        <activity android:name=".RulerActivity"[m
[32m+[m[32m            android:theme="@android:style/Theme.NoTitleBar.Fullscreen"[m
[32m+[m[32m            android:screenOrientation="landscape"/>[m
[32m+[m[32m        <activity android:name=".MapActivity"/>[m
[32m+[m[32m        <activity android:name=".CompassActivity"/>[m
[32m+[m[32m        <activity android:name=".Calculator"/>[m
[32m+[m[32m        <activity android:name=".GradienterActivity"/>[m
[32m+[m[32m        <activity android:name=".AlarmActivity"[m
[32m+[m[32m            android:theme="@style/Theme.AppCompat.Light.DarkActionBar"/>[m
[32m+[m[32m        <activity android:name=".preferences.AlarmPreferencesActivity"[m
[32m+[m[32m            android:theme="@style/Theme.AppCompat.Light.DarkActionBar"/>[m
[32m+[m[32m        <activity android:name=".alert.AlarmAlertActivity"[m
[32m+[m[32m            android:theme="@style/Theme.AppCompat.Light.DarkActionBar"/>[m
[32m+[m[32m        <activity android:name=".WeatherActivity"/>[m
[32m+[m[32m        <activity android:name=".noteActivity"/>[m
[32m+[m[32m        <activity android:name=".CalendarActivity"/>[m
[32m+[m[32m        <service[m
[32m+[m[32m            android:process="com.z.blast.workbox.serviceProcess"[m
[32m+[m[32m            android:name=".service.AlarmService">[m
[32m+[m[32m        </service>[m
[32m+[m[32m        <receiver android:name=".service.AlarmServiceBroadcastReciever">[m
[32m+[m[32m            <intent-filter>[m
[32m+[m[32m                <action android:name="android.intent.action.BOOT_COMPLETED" />[m
[32m+[m[32m            </intent-filter>[m
[32m+[m[32m        </receiver>[m
[32m+[m[32m        <receiver android:name=".alert.AlarmAlertBroadcastReciever"/>[m
[32m+[m[32m        <receiver android:name=".telephony.PhoneStateChangedBroadcastReciever">[m
[32m+[m[32m            <intent-filter>[m
[32m+[m[32m                <action android:name="android.intent.action.PHONE_STATE"/>[m
[32m+[m[32m            </intent-filter>[m
[32m+[m[32m        </receiver>[m
[32m+[m
[32m+[m[32m        <meta-data[m
[32m+[m[32m            android:name="com.baidu.lbsapi.API_KEY"[m
[32m+[m[32m            android:value="nYtOkZlZnI0BGHD6RhFoZLY6Q5mhWLWY" />[m
[32m+[m
[32m+[m[32m    </application>[m
[32m+[m
[32m+[m[32m</manifest>[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/Alarm.java b/app/src/main/java/com/z/blast/workbox/Alarm.java[m
[1mnew file mode 100644[m
[1mindex 0000000..29980a7[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/Alarm.java[m
[36m@@ -0,0 +1,345 @@[m
[32m+[m[32mpackage com.z.blast.workbox;/* Copyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m * http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mimport android.app.AlarmManager;[m
[32m+[m[32mimport android.app.PendingIntent;[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.content.Intent;[m
[32m+[m[32mimport android.media.RingtoneManager;[m
[32m+[m
[32m+[m[32mimport com.z.blast.workbox.alert.AlarmAlertBroadcastReciever;[m
[32m+[m
[32m+[m[32mimport java.io.Serializable;[m
[32m+[m[32mimport java.util.Arrays;[m
[32m+[m[32mimport java.util.Calendar;[m
[32m+[m[32mimport java.util.Comparator;[m
[32m+[m[32mimport java.util.LinkedList;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mpublic class Alarm implements Serializable {[m
[32m+[m
[32m+[m	[32mpublic enum Difficulty{[m
[32m+[m		[32mEASY,[m
[32m+[m		[32mMEDIUM,[m
[32m+[m		[32mHARD;[m
[32m+[m[41m		[m
[32m+[m		[32m@Override[m
[32m+[m		[32mpublic String toString() {[m
[32m+[m			[32mswitch(this.ordinal()){[m
[32m+[m				[32mcase 0:[m
[32m+[m					[32mreturn "Easy";[m
[32m+[m				[32mcase 1:[m
[32m+[m					[32mreturn "Medium";[m
[32m+[m				[32mcase 2:[m
[32m+[m					[32mreturn "Hard";[m
[32m+[m			[32m}[m
[32m+[m			[32mreturn super.toString();[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic enum Day{[m
[32m+[m		[32mSUNDAY,[m
[32m+[m		[32mMONDAY,[m
[32m+[m		[32mTUESDAY,[m
[32m+[m		[32mWEDNESDAY,[m
[32m+[m		[32mTHURSDAY,[m
[32m+[m		[32mFRIDAY,[m
[32m+[m		[32mSATURDAY;[m
[32m+[m
[32m+[m		[32m@Override[m
[32m+[m		[32mpublic String toString() {[m
[32m+[m			[32mswitch(this.ordinal()){[m
[32m+[m				[32mcase 0:[m
[32m+[m					[32mreturn "Sunday";[m
[32m+[m				[32mcase 1:[m
[32m+[m					[32mreturn "Monday";[m
[32m+[m				[32mcase 2:[m
[32m+[m					[32mreturn "Tuesday";[m
[32m+[m				[32mcase 3:[m
[32m+[m					[32mreturn "Wednesday";[m
[32m+[m				[32mcase 4:[m
[32m+[m					[32mreturn "Thursday";[m
[32m+[m				[32mcase 5:[m
[32m+[m					[32mreturn "Friday";[m
[32m+[m				[32mcase 6:[m
[32m+[m					[32mreturn "Saturday";[m
[32m+[m			[32m}[m
[32m+[m			[32mreturn super.toString();[m
[32m+[m		[32m}[m
[32m+[m[41m		[m
[32m+[m	[32m}[m
[32m+[m	[32mprivate static final long serialVersionUID = 8699489847426803789L;[m
[32m+[m	[32mprivate int id;[m
[32m+[m	[32mprivate Boolean alarmActive = true;[m
[32m+[m	[32mprivate Calendar alarmTime = Calendar.getInstance();[m
[32m+[m	[32mprivate Day[] days = {Day.MONDAY, Day.TUESDAY, Day.WEDNESDAY, Day.THURSDAY, Day.FRIDAY, Day.SATURDAY, Day.SUNDAY};[m
[32m+[m	[32mprivate String alarmTonePath = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_ALARM).toString();[m
[32m+[m	[32mprivate Boolean vibrate = true;[m
[32m+[m	[32mprivate String alarmName = "com.z.blast.workbox.Alarm Clock";[m
[32m+[m	[32mprivate Difficulty difficulty = Difficulty.EASY;[m
[32m+[m[41m	[m
[32m+[m	[32mpublic Alarm() {[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m//	private void writeObject(java.io.ObjectOutputStream out) throws IOException {[m
[32m+[m[32m//		out.defaultWriteObject();[m
[32m+[m[32m//		out.writeObject(getAlarmToneUri().getEncodedPath());[m
[32m+[m[32m//	}[m
[32m+[m
[32m+[m[32m//	private void readObject(java.io.ObjectInputStream in) throws IOException {[m
[32m+[m[32m//		try {[m
[32m+[m[32m//			in.defaultReadObject();[m
[32m+[m[32m//			this.setAlarmToneUri(Uri.parse(in.readObject().toString()));[m
[32m+[m[32m//		} catch (ClassNotFoundException e) {[m
[32m+[m[32m//			// TODO Auto-generated catch block[m
[32m+[m[32m//			e.printStackTrace();[m
[32m+[m[32m//		}[m[41m		[m
[32m+[m[32m//	}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @return the alarmActive[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic Boolean getAlarmActive() {[m
[32m+[m		[32mreturn alarmActive;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @param alarmActive[m
[32m+[m	[32m *            the alarmActive to set[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic void setAlarmActive(Boolean alarmActive) {[m
[32m+[m		[32mthis.alarmActive = alarmActive;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @return the alarmTime[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic Calendar getAlarmTime() {[m
[32m+[m		[32mif (alarmTime.before(Calendar.getInstance()))[m
[32m+[m			[32malarmTime.add(Calendar.DAY_OF_MONTH, 1);[m
[32m+[m		[32mwhile(!Arrays.asList(getDays()).contains(Day.values()[alarmTime.get(Calendar.DAY_OF_WEEK)-1])){[m
[32m+[m			[32malarmTime.add(Calendar.DAY_OF_MONTH, 1);[m[41m			[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn alarmTime;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @return the alarmTime[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic String getAlarmTimeString() {[m
[32m+[m
[32m+[m		[32mString time = "";[m
[32m+[m		[32mif (alarmTime.get(Calendar.HOUR_OF_DAY) <= 9)[m
[32m+[m			[32mtime += "0";[m
[32m+[m		[32mtime += String.valueOf(alarmTime.get(Calendar.HOUR_OF_DAY));[m
[32m+[m		[32mtime += ":";[m
[32m+[m
[32m+[m		[32mif (alarmTime.get(Calendar.MINUTE) <= 9)[m
[32m+[m			[32mtime += "0";[m
[32m+[m		[32mtime += String.valueOf(alarmTime.get(Calendar.MINUTE));[m
[32m+[m
[32m+[m		[32mreturn time;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @param alarmTime[m
[32m+[m	[32m *            the alarmTime to set[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic void setAlarmTime(Calendar alarmTime) {[m
[32m+[m		[32mthis.alarmTime = alarmTime;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @param alarmTime[m
[32m+[m	[32m *            the alarmTime to set[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic void setAlarmTime(String alarmTime) {[m
[32m+[m
[32m+[m		[32mString[] timePieces = alarmTime.split(":");[m
[32m+[m
[32m+[m		[32mCalendar newAlarmTime = Calendar.getInstance();[m
[32m+[m		[32mnewAlarmTime.set(Calendar.HOUR_OF_DAY,[m
[32m+[m				[32mInteger.parseInt(timePieces[0]));[m
[32m+[m		[32mnewAlarmTime.set(Calendar.MINUTE, Integer.parseInt(timePieces[1]));[m
[32m+[m		[32mnewAlarmTime.set(Calendar.SECOND, 0);[m
[32m+[m		[32msetAlarmTime(newAlarmTime);[m[41m		[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @return the repeatDays[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic Day[] getDays() {[m
[32m+[m		[32mreturn days;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @param set[m
[32m+[m	[32m *            the repeatDays to set[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic void setDays(Day[] days) {[m
[32m+[m		[32mthis.days = days;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void addDay(Day day){[m
[32m+[m		[32mboolean contains = false;[m
[32m+[m		[32mfor(Day d : getDays())[m
[32m+[m			[32mif(d.equals(day))[m
[32m+[m				[32mcontains = true;[m
[32m+[m		[32mif(!contains){[m
[32m+[m			[32mList<Day> result = new LinkedList<Day>();[m
[32m+[m			[32mfor(Day d : getDays())[m
[32m+[m				[32mresult.add(d);[m
[32m+[m			[32mresult.add(day);[m
[32m+[m			[32msetDays(result.toArray(new Day[result.size()]));[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic void removeDay(Day day) {[m
[32m+[m[41m	    [m
[32m+[m		[32mList<Day> result = new LinkedList<Day>();[m
[32m+[m	[32m    for(Day d : getDays())[m
[32m+[m	[32m        if(!d.equals(day))[m
[32m+[m	[32m            result.add(d);[m
[32m+[m	[32m    setDays(result.toArray(new Day[result.size()]));[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @return the alarmTonePath[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic String getAlarmTonePath() {[m
[32m+[m		[32mreturn alarmTonePath;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @param alarmTonePath the alarmTonePath to set[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic void setAlarmTonePath(String alarmTonePath) {[m
[32m+[m		[32mthis.alarmTonePath = alarmTonePath;[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @return the vibrate[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic Boolean getVibrate() {[m
[32m+[m		[32mreturn vibrate;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @param vibrate[m
[32m+[m	[32m *            the vibrate to set[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic void setVibrate(Boolean vibrate) {[m
[32m+[m		[32mthis.vibrate = vibrate;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @return the alarmName[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic String getAlarmName() {[m
[32m+[m		[32mreturn alarmName;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @param alarmName[m
[32m+[m	[32m *            the alarmName to set[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic void setAlarmName(String alarmName) {[m
[32m+[m		[32mthis.alarmName = alarmName;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic Difficulty getDifficulty() {[m
[32m+[m		[32mreturn difficulty;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setDifficulty(Difficulty difficulty) {[m
[32m+[m		[32mthis.difficulty = difficulty;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic int getId() {[m
[32m+[m		[32mreturn id;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setId(int id) {[m
[32m+[m		[32mthis.id = id;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic String getRepeatDaysString() {[m
[32m+[m		[32mStringBuilder daysStringBuilder = new StringBuilder();[m
[32m+[m		[32mif(getDays().length == Day.values().length){[m
[32m+[m			[32mdaysStringBuilder.append("Every Day");[m[41m		[m
[32m+[m		[32m}else{[m
[32m+[m			[32mArrays.sort(getDays(), new Comparator<Day>() {[m
[32m+[m				[32m@Override[m
[32m+[m				[32mpublic int compare(Day lhs, Day rhs) {[m
[32m+[m[41m					[m
[32m+[m					[32mreturn lhs.ordinal() - rhs.ordinal();[m
[32m+[m				[32m}[m
[32m+[m			[32m});[m
[32m+[m			[32mfor(Day d : getDays()){[m
[32m+[m				[32mswitch(d){[m
[32m+[m				[32mcase TUESDAY:[m
[32m+[m				[32mcase THURSDAY:[m
[32m+[m[32m//					daysStringBuilder.append(d.toString().substring(0, 4));[m
[32m+[m[32m//					break;[m
[32m+[m					[32mdefault:[m
[32m+[m						[32mdaysStringBuilder.append(d.toString().substring(0, 3));[m[41m		[m
[32m+[m						[32mbreak;[m
[32m+[m				[32m}[m[41m				[m
[32m+[m				[32mdaysStringBuilder.append(',');[m
[32m+[m			[32m}[m
[32m+[m			[32mdaysStringBuilder.setLength(daysStringBuilder.length()-1);[m
[32m+[m		[32m}[m
[32m+[m[41m			[m
[32m+[m		[32mreturn daysStringBuilder.toString();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void schedule(Context context) {[m
[32m+[m		[32msetAlarmActive(true);[m
[32m+[m[41m		[m
[32m+[m		[32mIntent myIntent = new Intent(context, AlarmAlertBroadcastReciever.class);[m
[32m+[m		[32mmyIntent.putExtra("alarm", this);[m
[32m+[m
[32m+[m		[32mPendingIntent pendingIntent = PendingIntent.getBroadcast(context, 0, myIntent,PendingIntent.FLAG_CANCEL_CURRENT);[m
[32m+[m
[32m+[m		[32mAlarmManager alarmManager = (AlarmManager)context.getSystemService(Context.ALARM_SERVICE);[m
[32m+[m
[32m+[m		[32malarmManager.set(AlarmManager.RTC_WAKEUP, getAlarmTime().getTimeInMillis(), pendingIntent);[m[41m					[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic String getTimeUntilNextAlarmMessage(){[m
[32m+[m		[32mlong timeDifference = getAlarmTime().getTimeInMillis() - System.currentTimeMillis();[m
[32m+[m		[32mlong days = timeDifference / (1000 * 60 * 60 * 24);[m
[32m+[m		[32mlong hours = timeDifference / (1000 * 60 * 60) - (days * 24);[m
[32m+[m		[32mlong minutes = timeDifference / (1000 * 60) - (days * 24 * 60) - (hours * 60);[m
[32m+[m		[32mlong seconds = timeDifference / (1000) - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60);[m
[32m+[m		[32mString alert = "com.z.blast.workbox.Alarm will sound in ";[m
[32m+[m		[32mif (days > 0) {[m
[32m+[m			[32malert += String.format([m
[32m+[m					[32m"%d days, %d hours, %d minutes and %d seconds", days,[m
[32m+[m					[32mhours, minutes, seconds);[m
[32m+[m		[32m} else {[m
[32m+[m			[32mif (hours > 0) {[m
[32m+[m				[32malert += String.format("%d hours, %d minutes and %d seconds",[m
[32m+[m						[32mhours, minutes, seconds);[m
[32m+[m			[32m} else {[m
[32m+[m				[32mif (minutes > 0) {[m
[32m+[m					[32malert += String.format("%d minutes, %d seconds", minutes,[m
[32m+[m							[32mseconds);[m
[32m+[m				[32m} else {[m
[32m+[m					[32malert += String.format("%d seconds", seconds);[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn alert;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/AlarmActivity.java b/app/src/main/java/com/z/blast/workbox/AlarmActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..5087656[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/AlarmActivity.java[m
[36m@@ -0,0 +1,156 @@[m
[32m+[m[32mpackage com.z.blast.workbox;/* Copyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m * http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mimport android.app.AlertDialog.Builder;[m
[32m+[m[32mimport android.content.DialogInterface;[m
[32m+[m[32mimport android.content.DialogInterface.OnClickListener;[m
[32m+[m[32mimport android.content.Intent;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.view.HapticFeedbackConstants;[m
[32m+[m[32mimport android.view.Menu;[m
[32m+[m[32mimport android.view.MenuInflater;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.widget.AdapterView;[m
[32m+[m[32mimport android.widget.AdapterView.OnItemClickListener;[m
[32m+[m[32mimport android.widget.AdapterView.OnItemLongClickListener;[m
[32m+[m[32mimport android.widget.CheckBox;[m
[32m+[m[32mimport android.widget.ImageButton;[m
[32m+[m[32mimport android.widget.ListView;[m
[32m+[m[32mimport android.widget.Toast;[m
[32m+[m
[32m+[m[32mimport com.z.blast.workbox.database.Database;[m
[32m+[m[32mimport com.z.blast.workbox.preferences.AlarmPreferencesActivity;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mpublic class AlarmActivity extends BaseActivity {[m
[32m+[m
[32m+[m	[32mImageButton newButton;[m
[32m+[m	[32mListView mathAlarmListView;[m
[32m+[m	[32mAlarmListAdapter alarmListAdapter;[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void onCreate(Bundle savedInstanceState) {[m
[32m+[m		[32msuper.onCreate(savedInstanceState);[m
[32m+[m		[32m// requestWindowFeature(Window.FEATURE_NO_TITLE);[m
[32m+[m		[32msetContentView(R.layout.alarm_activity);[m
[32m+[m
[32m+[m		[32mmathAlarmListView = (ListView) findViewById(android.R.id.list);[m
[32m+[m		[32mmathAlarmListView.setLongClickable(true);[m
[32m+[m		[32mmathAlarmListView.setOnItemLongClickListener(new OnItemLongClickListener() {[m
[32m+[m			[32m@Override[m
[32m+[m			[32mpublic boolean onItemLongClick(AdapterView<?> adapterView, View view, int position, long id) {[m
[32m+[m				[32mview.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);//如果手机开启了触感反馈 就申请一次长按的触感反馈[m
[32m+[m				[32mfinal Alarm alarm = (Alarm) alarmListAdapter.getItem(position);[m
[32m+[m				[32mBuilder dialog = new Builder(AlarmActivity.this);[m
[32m+[m				[32mdialog.setTitle("Delete");[m
[32m+[m				[32mdialog.setMessage("Delete this alarm?");[m
[32m+[m				[32mdialog.setPositiveButton("Ok", new OnClickListener() {[m
[32m+[m					[32m@Override[m
[32m+[m					[32mpublic void onClick(DialogInterface dialog, int which) {[m
[32m+[m
[32m+[m						[32mDatabase.init(AlarmActivity.this);[m
[32m+[m						[32mDatabase.deleteEntry(alarm);[m
[32m+[m						[32mAlarmActivity.this.callMathAlarmScheduleService();[m
[32m+[m[41m						[m
[32m+[m						[32mupdateAlarmList();[m
[32m+[m					[32m}[m
[32m+[m				[32m});[m
[32m+[m				[32mdialog.setNegativeButton("Cancel", new OnClickListener() {[m
[32m+[m					[32m@Override[m
[32m+[m					[32mpublic void onClick(DialogInterface dialog, int which) {[m
[32m+[m						[32mdialog.dismiss();[m
[32m+[m					[32m}[m
[32m+[m				[32m});[m
[32m+[m
[32m+[m				[32mdialog.show();[m
[32m+[m
[32m+[m				[32mreturn true;[m
[32m+[m			[32m}[m
[32m+[m		[32m});[m
[32m+[m
[32m+[m		[32mcallMathAlarmScheduleService();[m
[32m+[m
[32m+[m		[32malarmListAdapter = new AlarmListAdapter(this);[m
[32m+[m		[32mthis.mathAlarmListView.setAdapter(alarmListAdapter);[m
[32m+[m		[32mmathAlarmListView.setOnItemClickListener(new OnItemClickListener() {[m
[32m+[m
[32m+[m			[32m@Override[m
[32m+[m			[32mpublic void onItemClick(AdapterView<?> arg0, View v, int position, long id) {[m
[32m+[m				[32mv.performHapticFeedback(HapticFeedbackConstants.VIRTUAL_KEY);[m
[32m+[m				[32mAlarm alarm = (Alarm) alarmListAdapter.getItem(position);[m
[32m+[m				[32mIntent intent = new Intent(AlarmActivity.this, AlarmPreferencesActivity.class);[m
[32m+[m				[32mintent.putExtra("alarm", alarm);[m
[32m+[m				[32mstartActivity(intent);[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m		[32m});[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic boolean onCreateOptionsMenu(Menu menu) {[m
[32m+[m		[32mboolean result = super.onCreateOptionsMenu(menu);[m
[32m+[m		[32mmenu.clear();[m
[32m+[m		[32mMenuInflater inflater=getMenuInflater();[m
[32m+[m		[32minflater.inflate(R.menu.alarmmenu,menu);[m
[32m+[m		[32mmenu.findItem(R.id.menu_item_save).setVisible(false);[m
[32m+[m		[32mmenu.findItem(R.id.menu_item_delete).setVisible(false);[m
[32m+[m	[32m    return result;[m
[32m+[m	[32m}[m
[32m+[m[41m		[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void onPause() {[m
[32m+[m		[32m// setListAdapter(null);[m
[32m+[m		[32mDatabase.deactivate();[m
[32m+[m		[32msuper.onPause();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void onResume() {[m
[32m+[m		[32msuper.onResume();[m
[32m+[m		[32mupdateAlarmList();[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic void updateAlarmList(){[m
[32m+[m		[32mDatabase.init(AlarmActivity.this);[m
[32m+[m		[32mfinal List<Alarm> alarms = Database.getAll();[m
[32m+[m		[32malarmListAdapter.setMathAlarms(alarms);[m
[32m+[m[41m		[m
[32m+[m		[32mrunOnUiThread(new Runnable() {[m
[32m+[m			[32mpublic void run() {[m
[32m+[m				[32m// reload content[m[41m			[m
[32m+[m				[32mAlarmActivity.this.alarmListAdapter.notifyDataSetChanged();[m[41m				[m
[32m+[m				[32mif(alarms.size() > 0){[m
[32m+[m					[32mfindViewById(android.R.id.empty).setVisibility(View.INVISIBLE);[m
[32m+[m				[32m}else{[m
[32m+[m					[32mfindViewById(android.R.id.empty).setVisibility(View.VISIBLE);[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m		[32m});[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void onClick(View v) {[m
[32m+[m		[32mif (v.getId() == R.id.checkBox_alarm_active) {[m
[32m+[m			[32mCheckBox checkBox = (CheckBox) v;[m
[32m+[m			[32mAlarm alarm = (Alarm) alarmListAdapter.getItem((Integer) checkBox.getTag());[m
[32m+[m			[32malarm.setAlarmActive(checkBox.isChecked());[m
[32m+[m			[32mDatabase.update(alarm);[m
[32m+[m			[32mAlarmActivity.this.callMathAlarmScheduleService();[m
[32m+[m			[32mif (checkBox.isChecked()) {[m
[32m+[m				[32mToast.makeText(AlarmActivity.this, alarm.getTimeUntilNextAlarmMessage(), Toast.LENGTH_LONG).show();[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/AlarmListAdapter.java b/app/src/main/java/com/z/blast/workbox/AlarmListAdapter.java[m
[1mnew file mode 100644[m
[1mindex 0000000..d662b90[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/AlarmListAdapter.java[m
[36m@@ -0,0 +1,86 @@[m
[32m+[m[32mpackage com.z.blast.workbox;/* Copyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m * http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mimport android.view.LayoutInflater;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.view.ViewGroup;[m
[32m+[m[32mimport android.widget.BaseAdapter;[m
[32m+[m[32mimport android.widget.CheckBox;[m
[32m+[m[32mimport android.widget.TextView;[m
[32m+[m
[32m+[m[32mimport com.z.blast.workbox.database.Database;[m
[32m+[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mpublic class AlarmListAdapter extends BaseAdapter {[m
[32m+[m
[32m+[m	[32mprivate AlarmActivity alarmActivity;[m
[32m+[m	[32mprivate List<Alarm> alarms = new ArrayList<Alarm>();[m
[32m+[m
[32m+[m	[32mpublic static final String ALARM_FIELDS[] = { Database.COLUMN_ALARM_ACTIVE,[m
[32m+[m			[32mDatabase.COLUMN_ALARM_TIME, Database.COLUMN_ALARM_DAYS };[m
[32m+[m
[32m+[m	[32mpublic AlarmListAdapter(AlarmActivity alarmActivity) {[m
[32m+[m		[32mthis.alarmActivity = alarmActivity;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic int getCount() {[m
[32m+[m		[32mreturn alarms.size();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic Object getItem(int position) {[m
[32m+[m		[32mreturn alarms.get(position);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic long getItemId(int position) {[m
[32m+[m		[32mreturn position;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic View getView(int position, View view, ViewGroup viewGroup) {[m
[32m+[m		[32mif (null == view)[m
[32m+[m			[32mview = LayoutInflater.from(alarmActivity).inflate([m
[32m+[m					[32mR.layout.alarm_list_element, null);[m
[32m+[m
[32m+[m		[32mAlarm alarm = (Alarm) getItem(position);[m
[32m+[m
[32m+[m		[32m CheckBox checkBox = (CheckBox) view.findViewById(R.id.checkBox_alarm_active);[m
[32m+[m		[32m checkBox.setChecked(alarm.getAlarmActive());[m
[32m+[m		[32m checkBox.setTag(position);[m
[32m+[m		[32m checkBox.setOnClickListener(alarmActivity);[m
[32m+[m[41m		 [m
[32m+[m		[32mTextView alarmTimeView = (TextView) view[m
[32m+[m				[32m.findViewById(R.id.textView_alarm_time);[m
[32m+[m		[32malarmTimeView.setText(alarm.getAlarmTimeString());[m
[32m+[m
[32m+[m[41m		[m
[32m+[m			[32mTextView alarmDaysView = (TextView) view[m
[32m+[m					[32m.findViewById(R.id.textView_alarm_days);[m
[32m+[m			[32malarmDaysView.setText(alarm.getRepeatDaysString());[m
[32m+[m[41m		[m
[32m+[m
[32m+[m		[32mreturn view;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic List<Alarm> getMathAlarms() {[m
[32m+[m		[32mreturn alarms;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setMathAlarms(List<Alarm> alarms) {[m
[32m+[m		[32mthis.alarms = alarms;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/BaseActivity.java b/app/src/main/java/com/z/blast/workbox/BaseActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..dfdb996[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/BaseActivity.java[m
[36m@@ -0,0 +1,70 @@[m
[32m+[m[32mpackage com.z.blast.workbox;/* Copyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m * http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mimport android.content.Intent;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.support.v7.app.ActionBarActivity;[m
[32m+[m[32mimport android.view.Menu;[m
[32m+[m[32mimport android.view.MenuInflater;[m
[32m+[m[32mimport android.view.MenuItem;[m
[32m+[m[32mimport android.view.ViewConfiguration;[m
[32m+[m
[32m+[m[32mimport com.z.blast.workbox.preferences.AlarmPreferencesActivity;[m
[32m+[m[32mimport com.z.blast.workbox.service.AlarmServiceBroadcastReciever;[m
[32m+[m
[32m+[m[32mimport java.lang.reflect.Field;[m
[32m+[m
[32m+[m[32mpublic abstract class BaseActivity  extends ActionBarActivity implements android.view.View.OnClickListener{[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void onCreate(Bundle savedInstanceState) {[m
[32m+[m		[32msuper.onCreate(savedInstanceState);[m
[32m+[m[41m		[m
[32m+[m		[32mtry {[m
[32m+[m	[32m        ViewConfiguration config = ViewConfiguration.get(this);[m[41m	        [m
[32m+[m	[32m        Field menuKeyField = ViewConfiguration.class.getDeclaredField("sHasPermanentMenuKey");[m
[32m+[m	[32m        if(menuKeyField != null) {[m
[32m+[m	[32m            menuKeyField.setAccessible(true);[m
[32m+[m	[32m            menuKeyField.setBoolean(config, false);[m
[32m+[m	[32m        }[m
[32m+[m	[32m    } catch (Exception ex) {[m
[32m+[m	[32m        // Ignore[m
[32m+[m	[32m    }[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic boolean onCreateOptionsMenu(Menu menu) {[m[41m		[m
[32m+[m		[32m// Inflate the menu items for use in the action bar[m
[32m+[m	[32m    MenuInflater inflater = getMenuInflater();[m
[32m+[m	[32m    inflater.inflate(R.menu.menu, menu);[m
[32m+[m	[32m    return super.onCreateOptionsMenu(menu);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic boolean onOptionsItemSelected(MenuItem item) {[m
[32m+[m		[32mString url = null;[m
[32m+[m		[32mIntent intent = null;[m
[32m+[m		[32mswitch (item.getItemId()) {[m
[32m+[m		[32mcase R.id.menu_item_new:[m
[32m+[m			[32mIntent newAlarmIntent = new Intent(this, AlarmPreferencesActivity.class);[m
[32m+[m			[32mstartActivity(newAlarmIntent);[m
[32m+[m			[32mbreak;[m
[32m+[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn super.onOptionsItemSelected(item);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprotected void callMathAlarmScheduleService() {[m
[32m+[m		[32mIntent mathAlarmServiceIntent = new Intent(this, AlarmServiceBroadcastReciever.class);[m
[32m+[m		[32msendBroadcast(mathAlarmServiceIntent, null);[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/Calculator.java b/app/src/main/java/com/z/blast/workbox/Calculator.java[m
[1mnew file mode 100644[m
[1mindex 0000000..3ca5d74[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/Calculator.java[m
[36m@@ -0,0 +1,341 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright (C) 2008 The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *      http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.app.Activity;[m
[32m+[m[32mimport android.content.res.Resources;[m
[32m+[m[32mimport android.content.res.TypedArray;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.os.Parcelable;[m
[32m+[m[32mimport android.support.v4.view.PagerAdapter;[m
[32m+[m[32mimport android.support.v4.view.ViewPager;[m
[32m+[m[32mimport android.util.Log;[m
[32m+[m[32mimport android.view.KeyEvent;[m
[32m+[m[32mimport android.view.LayoutInflater;[m
[32m+[m[32mimport android.view.Menu;[m
[32m+[m[32mimport android.view.MenuInflater;[m
[32m+[m[32mimport android.view.MenuItem;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.view.View.OnClickListener;[m
[32m+[m[32mimport android.view.ViewConfiguration;[m
[32m+[m[32mimport android.view.ViewGroup;[m
[32m+[m[32mimport android.view.WindowManager;[m
[32m+[m[32mimport android.widget.PopupMenu;[m
[32m+[m[32mimport android.widget.PopupMenu.OnMenuItemClickListener;[m
[32m+[m
[32m+[m[32mpublic class Calculator extends Activity implements PanelSwitcher.Listener, Logic.Listener,[m
[32m+[m[32m        OnClickListener, OnMenuItemClickListener {[m
[32m+[m[32m    EventListener mListener = new EventListener();[m
[32m+[m[32m    private CalculatorDisplay mDisplay;[m
[32m+[m[32m    private Persist mPersist;[m
[32m+[m[32m    private History mHistory;[m
[32m+[m[32m    private Logic mLogic;[m
[32m+[m[32m    private ViewPager mPager;[m
[32m+[m[32m    private View mClearButton;[m
[32m+[m[32m    private View mBackspaceButton;[m
[32m+[m[32m    private View mOverflowMenuButton;[m
[32m+[m
[32m+[m[32m    static final int BASIC_PANEL    = 0;[m
[32m+[m[32m    static final int ADVANCED_PANEL = 1;[m
[32m+[m
[32m+[m[32m    private static final String LOG_TAG = "Calculator";[m
[32m+[m[32m    private static final boolean DEBUG  = false;[m
[32m+[m[32m    private static final boolean LOG_ENABLED = false;[m
[32m+[m[32m    private static final String STATE_CURRENT_VIEW = "state-current-view";[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onCreate(Bundle state) {[m
[32m+[m[32m        super.onCreate(state);[m
[32m+[m
[32m+[m[32m        // Disable IME for this application[m
[32m+[m[32m        getWindow().setFlags(WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM,[m
[32m+[m[32m                WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM);[m
[32m+[m
[32m+[m[32m        setContentView(R.layout.calculator_main);[m
[32m+[m[32m        mPager = (ViewPager) findViewById(R.id.panelswitch);[m
[32m+[m[32m        if (mPager != null) {[m
[32m+[m[32m            mPager.setAdapter(new PageAdapter(mPager));[m
[32m+[m[32m        } else {[m
[32m+[m[32m            // Single page UI[m
[32m+[m[32m            final TypedArray buttons = getResources().obtainTypedArray(R.array.buttons);[m
[32m+[m[32m            for (int i = 0; i < buttons.length(); i++) {[m
[32m+[m[32m                setOnClickListener(null, buttons.getResourceId(i, 0));[m
[32m+[m[32m            }[m
[32m+[m[32m            buttons.recycle();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (mClearButton == null) {[m
[32m+[m[32m            mClearButton = findViewById(R.id.clear);[m
[32m+[m[32m            mClearButton.setOnClickListener(mListener);[m
[32m+[m[32m            mClearButton.setOnLongClickListener(mListener);[m
[32m+[m[32m        }[m
[32m+[m[32m        if (mBackspaceButton == null) {[m
[32m+[m[32m            mBackspaceButton = findViewById(R.id.del);[m
[32m+[m[32m            mBackspaceButton.setOnClickListener(mListener);[m
[32m+[m[32m            mBackspaceButton.setOnLongClickListener(mListener);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        mPersist = new Persist(this);[m
[32m+[m[32m        mPersist.load();[m
[32m+[m
[32m+[m[32m        mHistory = mPersist.history;[m
[32m+[m
[32m+[m[32m        mDisplay = (CalculatorDisplay) findViewById(R.id.display);[m
[32m+[m
[32m+[m[32m        mLogic = new Logic(this, mHistory, mDisplay);[m
[32m+[m[32m        mLogic.setListener(this);[m
[32m+[m
[32m+[m[32m        mLogic.setDeleteMode(mPersist.getDeleteMode());[m
[32m+[m[32m        mLogic.setLineLength(mDisplay.getMaxDigits());[m
[32m+[m
[32m+[m[32m        HistoryAdapter historyAdapter = new HistoryAdapter(this, mHistory, mLogic);[m
[32m+[m[32m        mHistory.setObserver(historyAdapter);[m
[32m+[m
[32m+[m[32m        if (mPager != null) {[m
[32m+[m[32m            mPager.setCurrentItem(state == null ? 0 : state.getInt(STATE_CURRENT_VIEW, 0));[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        mListener.setHandler(mLogic, mPager);[m
[32m+[m[32m        mDisplay.setOnKeyListener(mListener);[m
[32m+[m
[32m+[m[32m        if (!ViewConfiguration.get(this).hasPermanentMenuKey()) {[m
[32m+[m[32m            createFakeMenu();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        mLogic.resumeWithHistory();[m
[32m+[m[32m        updateDeleteMode();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void updateDeleteMode() {[m
[32m+[m[32m        if (mLogic.getDeleteMode() == Logic.DELETE_MODE_BACKSPACE) {[m
[32m+[m[32m            mClearButton.setVisibility(View.GONE);[m
[32m+[m[32m            mBackspaceButton.setVisibility(View.VISIBLE);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            mClearButton.setVisibility(View.VISIBLE);[m
[32m+[m[32m            mBackspaceButton.setVisibility(View.GONE);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void setOnClickListener(View root, int id) {[m
[32m+[m[32m        final View target = root != null ? root.findViewById(id) : findViewById(id);[m
[32m+[m[32m        target.setOnClickListener(mListener);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean onCreateOptionsMenu(Menu menu) {[m
[32m+[m[32m        super.onCreateOptionsMenu(menu);[m
[32m+[m[32m        getMenuInflater().inflate(R.menu.menu, menu);[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean onPrepareOptionsMenu(Menu menu) {[m
[32m+[m[32m        super.onPrepareOptionsMenu(menu);[m
[32m+[m[32m        menu.clear();[m
[32m+[m[32m        MenuInflater inflater=getMenuInflater();[m
[32m+[m[32m        inflater.inflate(R.menu.menu,menu);[m
[32m+[m[32m        menu.findItem(R.id.basic).setVisible(!getBasicVisibility());[m
[32m+[m[32m        menu.findItem(R.id.advanced).setVisible(!getAdvancedVisibility());[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m    private void createFakeMenu() {[m
[32m+[m[32m        mOverflowMenuButton = findViewById(R.id.overflow_menu);[m
[32m+[m[32m        if (mOverflowMenuButton != null) {[m
[32m+[m[32m            mOverflowMenuButton.setVisibility(View.VISIBLE);[m
[32m+[m[32m            mOverflowMenuButton.setOnClickListener(this);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onClick(View v) {[m
[32m+[m[32m      /*  switch (v.getId()) {[m
[32m+[m[32m            case R.id.overflow_menu:[m
[32m+[m[32m                PopupMenu menu = constructPopupMenu();[m
[32m+[m[32m                if (menu != null) {[m
[32m+[m[32m                    menu.show();[m
[32m+[m[32m                }[m
[32m+[m[32m                break;[m
[32m+[m[32m        }*/[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /*private PopupMenu constructPopupMenu() {[m
[32m+[m[32m        final PopupMenu popupMenu = new PopupMenu(this, mOverflowMenuButton);[m
[32m+[m[32m        mOverflowMenuButton.setOnTouchListener(popupMenu.getDragToOpenListener());[m
[32m+[m[32m        final Menu menu = popupMenu.getMenu();[m
[32m+[m[32m        popupMenu.inflate(R.menu.menu);[m
[32m+[m[32m        popupMenu.setOnMenuItemClickListener(this);[m
[32m+[m[32m        onPrepareOptionsMenu(menu);[m
[32m+[m[32m        return popupMenu;[m
[32m+[m[32m    }*/[m
[32m+[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean onMenuItemClick(MenuItem item) {[m
[32m+[m[32m        return onOptionsItemSelected(item);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private boolean getBasicVisibility() {[m
[32m+[m[32m        return mPager != null && mPager.getCurrentItem() == BASIC_PANEL;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private boolean getAdvancedVisibility() {[m
[32m+[m[32m        return mPager != null && mPager.getCurrentItem() == ADVANCED_PANEL;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean onOptionsItemSelected(MenuItem item) {[m
[32m+[m[32m        switch (item.getItemId()) {[m
[32m+[m[32m            case R.id.clear_history:[m
[32m+[m[32m                mHistory.clear();[m
[32m+[m[32m                mLogic.onClear();[m
[32m+[m[32m                break;[m
[32m+[m
[32m+[m[32m            case R.id.basic:[m
[32m+[m[32m                if (!getBasicVisibility() && mPager != null) {[m
[32m+[m[32m                    mPager.setCurrentItem(BASIC_PANEL, true);[m
[32m+[m[32m                }[m
[32m+[m[32m                break;[m
[32m+[m
[32m+[m[32m            case R.id.advanced:[m
[32m+[m[32m                if (!getAdvancedVisibility() && mPager != null) {[m
[32m+[m[32m                    mPager.setCurrentItem(ADVANCED_PANEL, true);[m
[32m+[m[32m                }[m
[32m+[m[32m                break;[m
[32m+[m[32m        }[m
[32m+[m[32m        return super.onOptionsItemSelected(item);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    protected void onSaveInstanceState(Bundle state) {[m
[32m+[m[32m        super.onSaveInstanceState(state);[m
[32m+[m[32m        if (mPager != null) {[m
[32m+[m[32m            state.putInt(STATE_CURRENT_VIEW, mPager.getCurrentItem());[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onPause() {[m
[32m+[m[32m        super.onPause();[m
[32m+[m[32m        mLogic.updateHistory();[m
[32m+[m[32m        mPersist.setDeleteMode(mLogic.getDeleteMode());[m
[32m+[m[32m        mPersist.save();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean onKeyDown(int keyCode, KeyEvent keyEvent) {[m
[32m+[m[32m        if (keyCode == KeyEvent.KEYCODE_BACK && getAdvancedVisibility()[m
[32m+[m[32m                && mPager != null) {[m
[32m+[m[32m            mPager.setCurrentItem(BASIC_PANEL);[m
[32m+[m[32m            return true;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            return super.onKeyDown(keyCode, keyEvent);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    static void log(String message) {[m
[32m+[m[32m        if (LOG_ENABLED) {[m
[32m+[m[32m            Log.v(LOG_TAG, message);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onChange() {[m
[32m+[m[32m        invalidateOptionsMenu();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onDeleteModeChange() {[m
[32m+[m[32m        updateDeleteMode();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    class PageAdapter extends PagerAdapter {[m
[32m+[m[32m        private View mSimplePage;[m
[32m+[m[32m        private View mAdvancedPage;[m
[32m+[m
[32m+[m[32m        public PageAdapter(ViewPager parent) {[m
[32m+[m[32m            final LayoutInflater inflater = LayoutInflater.from(parent.getContext());[m
[32m+[m[32m            final View simplePage = inflater.inflate(R.layout.simple_pad, parent, false);[m
[32m+[m[32m            final View advancedPage = inflater.inflate(R.layout.advanced_pad, parent, false);[m
[32m+[m[32m            mSimplePage = simplePage;[m
[32m+[m[32m            mAdvancedPage = advancedPage;[m
[32m+[m
[32m+[m[32m            final Resources res = getResources();[m
[32m+[m[32m            final TypedArray simpleButtons = res.obtainTypedArray(R.array.simple_buttons);[m
[32m+[m[32m            for (int i = 0; i < simpleButtons.length(); i++) {[m
[32m+[m[32m                setOnClickListener(simplePage, simpleButtons.getResourceId(i, 0));[m
[32m+[m[32m            }[m
[32m+[m[32m            simpleButtons.recycle();[m
[32m+[m
[32m+[m[32m            final TypedArray advancedButtons = res.obtainTypedArray(R.array.advanced_buttons);[m
[32m+[m[32m            for (int i = 0; i < advancedButtons.length(); i++) {[m
[32m+[m[32m                setOnClickListener(advancedPage, advancedButtons.getResourceId(i, 0));[m
[32m+[m[32m            }[m
[32m+[m[32m            advancedButtons.recycle();[m
[32m+[m
[32m+[m[32m            final View clearButton = simplePage.findViewById(R.id.clear);[m
[32m+[m[32m            if (clearButton != null) {[m
[32m+[m[32m                mClearButton = clearButton;[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            final View backspaceButton = simplePage.findViewById(R.id.del);[m
[32m+[m[32m            if (backspaceButton != null) {[m
[32m+[m[32m                mBackspaceButton = backspaceButton;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public int getCount() {[m
[32m+[m[32m            return 2;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public void startUpdate(View container) {[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public Object instantiateItem(View container, int position) {[m
[32m+[m[32m            final View page = position == 0 ? mSimplePage : mAdvancedPage;[m
[32m+[m[32m            ((ViewGroup) container).addView(page);[m
[32m+[m[32m            return page;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public void destroyItem(View container, int position, Object object) {[m
[32m+[m[32m            ((ViewGroup) container).removeView((View) object);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public void finishUpdate(View container) {[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public boolean isViewFromObject(View view, Object object) {[m
[32m+[m[32m            return view == object;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public Parcelable saveState() {[m
[32m+[m[32m            return null;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public void restoreState(Parcelable state, ClassLoader loader) {[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/CalculatorDisplay.java b/app/src/main/java/com/z/blast/workbox/CalculatorDisplay.java[m
[1mnew file mode 100644[m
[1mindex 0000000..c62e6ec[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/CalculatorDisplay.java[m
[36m@@ -0,0 +1,163 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright (C) 2008 The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *      http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.graphics.Rect;[m
[32m+[m[32mimport android.text.Editable;[m
[32m+[m[32mimport android.text.InputType;[m
[32m+[m[32mimport android.text.Spanned;[m
[32m+[m[32mimport android.text.method.NumberKeyListener;[m
[32m+[m[32mimport android.util.AttributeSet;[m
[32m+[m[32mimport android.view.animation.TranslateAnimation;[m
[32m+[m[32mimport android.widget.EditText;[m
[32m+[m[32mimport android.widget.ViewSwitcher;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Provides vertical scrolling for the input/result EditText.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class CalculatorDisplay extends ViewSwitcher {[m
[32m+[m
[32m+[m[32m    private static final String ATTR_MAX_DIGITS = "maxDigits";[m
[32m+[m[32m    private static final int DEFAULT_MAX_DIGITS = 10;[m
[32m+[m
[32m+[m[32m    // only these chars are accepted from keyboard[m
[32m+[m[32m    private static final char[] ACCEPTED_CHARS =[m
[32m+[m[32m        "0123456789.+-*/\u2212\u00d7\u00f7()!%^".toCharArray();[m
[32m+[m
[32m+[m[32m    private static final int ANIM_DURATION = 500;[m
[32m+[m
[32m+[m[32m    enum Scroll { UP, DOWN, NONE }[m
[32m+[m
[32m+[m[32m    TranslateAnimation inAnimUp;[m
[32m+[m[32m    TranslateAnimation outAnimUp;[m
[32m+[m[32m    TranslateAnimation inAnimDown;[m
[32m+[m[32m    TranslateAnimation outAnimDown;[m
[32m+[m
[32m+[m[32m    private int mMaxDigits = DEFAULT_MAX_DIGITS;[m
[32m+[m
[32m+[m[32m    public CalculatorDisplay(Context context, AttributeSet attrs) {[m
[32m+[m[32m        super(context, attrs);[m
[32m+[m[32m        mMaxDigits = attrs.getAttributeIntValue(null, ATTR_MAX_DIGITS, DEFAULT_MAX_DIGITS);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public int getMaxDigits() {[m
[32m+[m[32m        return mMaxDigits;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected void setLogic(Logic logic) {[m
[32m+[m[32m        NumberKeyListener calculatorKeyListener =[m
[32m+[m[32m            new NumberKeyListener() {[m
[32m+[m[32m                public int getInputType() {[m
[32m+[m[32m                    return InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS;[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                @Override[m
[32m+[m[32m                protected char[] getAcceptedChars() {[m
[32m+[m[32m                    return ACCEPTED_CHARS;[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                @Override[m
[32m+[m[32m                public CharSequence filter(CharSequence source, int start, int end,[m
[32m+[m[32m                                           Spanned dest, int dstart, int dend) {[m
[32m+[m[32m                    /* the EditText should still accept letters (eg. 'sin')[m
[32m+[m[32m                       coming from the on-screen touch buttons, so don't filter anything.[m
[32m+[m[32m                    */[m
[32m+[m[32m                    return null;[m
[32m+[m[32m                }[m
[32m+[m[32m            };[m
[32m+[m
[32m+[m[32m        Editable.Factory factory = new CalculatorEditable.Factory(logic);[m
[32m+[m[32m        for (int i = 0; i < 2; ++i) {[m
[32m+[m[32m            EditText text = (EditText) getChildAt(i);[m
[32m+[m[32m            text.setBackground(null);[m
[32m+[m[32m            text.setEditableFactory(factory);[m
[32m+[m[32m            text.setKeyListener(calculatorKeyListener);[m
[32m+[m[32m            text.setSingleLine();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void setOnKeyListener(OnKeyListener l) {[m
[32m+[m[32m        getChildAt(0).setOnKeyListener(l);[m
[32m+[m[32m        getChildAt(1).setOnKeyListener(l);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    protected void onSizeChanged(int w, int h, int oldW, int oldH) {[m
[32m+[m[32m        inAnimUp = new TranslateAnimation(0, 0, h, 0);[m
[32m+[m[32m        inAnimUp.setDuration(ANIM_DURATION);[m
[32m+[m[32m        outAnimUp = new TranslateAnimation(0, 0, 0, -h);[m
[32m+[m[32m        outAnimUp.setDuration(ANIM_DURATION);[m
[32m+[m
[32m+[m[32m        inAnimDown = new TranslateAnimation(0, 0, -h, 0);[m
[32m+[m[32m        inAnimDown.setDuration(ANIM_DURATION);[m
[32m+[m[32m        outAnimDown = new TranslateAnimation(0, 0, 0, h);[m
[32m+[m[32m        outAnimDown.setDuration(ANIM_DURATION);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void insert(String delta) {[m
[32m+[m[32m        EditText editor = (EditText) getCurrentView();[m
[32m+[m[32m        int cursor = editor.getSelectionStart();[m
[32m+[m[32m        editor.getText().insert(cursor, delta);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    EditText getEditText() {[m
[32m+[m[32m        return (EditText) getCurrentView();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    Editable getText() {[m
[32m+[m[32m        EditText text = (EditText) getCurrentView();[m
[32m+[m[32m        return text.getText();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void setText(CharSequence text, Scroll dir) {[m
[32m+[m[32m        if (getText().length() == 0) {[m
[32m+[m[32m            dir = Scroll.NONE;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (dir == Scroll.UP) {[m
[32m+[m[32m            setInAnimation(inAnimUp);[m
[32m+[m[32m            setOutAnimation(outAnimUp);[m
[32m+[m[32m        } else if (dir == Scroll.DOWN) {[m
[32m+[m[32m            setInAnimation(inAnimDown);[m
[32m+[m[32m            setOutAnimation(outAnimDown);[m
[32m+[m[32m        } else { // Scroll.NONE[m
[32m+[m[32m            setInAnimation(null);[m
[32m+[m[32m            setOutAnimation(null);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        EditText editText = (EditText) getNextView();[m
[32m+[m[32m        editText.setText(text);[m
[32m+[m[32m        //Calculator.log("selection to " + text.length() + "; " + text);[m
[32m+[m[32m        editText.setSelection(text.length());[m
[32m+[m[32m        showNext();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    int getSelectionStart() {[m
[32m+[m[32m        EditText text = (EditText) getCurrentView();[m
[32m+[m[32m        return text.getSelectionStart();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    protected void onFocusChanged(boolean gain, int direction, Rect prev) {[m
[32m+[m[32m        //Calculator.log("focus " + gain + "; " + direction + "; " + prev);[m
[32m+[m[32m        if (!gain) {[m
[32m+[m[32m            requestFocus();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/CalculatorEditText.java b/app/src/main/java/com/z/blast/workbox/CalculatorEditText.java[m
[1mnew file mode 100644[m
[1mindex 0000000..6f06ba0[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/CalculatorEditText.java[m
[36m@@ -0,0 +1,244 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright (C) 2010 The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *      http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.content.ClipData;[m
[32m+[m[32mimport android.content.ClipboardManager;[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.content.res.Resources;[m
[32m+[m[32mimport android.text.Editable;[m
[32m+[m[32mimport android.text.InputType;[m
[32m+[m[32mimport android.text.TextUtils;[m
[32m+[m[32mimport android.util.AttributeSet;[m
[32m+[m[32mimport android.util.Log;[m
[32m+[m[32mimport android.view.ActionMode;[m
[32m+[m[32mimport android.view.ContextMenu;[m
[32m+[m[32mimport android.view.Menu;[m
[32m+[m[32mimport android.view.MenuItem;[m
[32m+[m[32mimport android.view.MotionEvent;[m
[32m+[m[32mimport android.view.accessibility.AccessibilityEvent;[m
[32m+[m[32mimport android.view.accessibility.AccessibilityNodeInfo;[m
[32m+[m[32mimport android.widget.EditText;[m
[32m+[m[32mimport android.widget.Toast;[m
[32m+[m
[32m+[m[32mimport com.google.common.collect.ImmutableMap;[m
[32m+[m
[32m+[m[32mpublic class CalculatorEditText extends EditText {[m
[32m+[m
[32m+[m[32m    private static final String LOG_TAG = "Calculator2";[m
[32m+[m[32m    private static final int CUT = 0;[m
[32m+[m[32m    private static final int COPY = 1;[m
[32m+[m[32m    private static final int PASTE = 2;[m
[32m+[m[32m    private String[] mMenuItemsStrings;[m
[32m+[m[32m    private ImmutableMap<String, String> sReplacementTable;[m
[32m+[m[32m    private String[] sOperators;[m
[32m+[m
[32m+[m[32m    public CalculatorEditText(Context context, AttributeSet attrs) {[m
[32m+[m[32m        super(context, attrs);[m
[32m+[m[32m        setCustomSelectionActionModeCallback(new NoTextSelectionMode());[m
[32m+[m[32m        setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean onTouchEvent(MotionEvent event) {[m
[32m+[m[32m       if (event.getActionMasked() == MotionEvent.ACTION_UP) {[m
[32m+[m[32m            // Hack to prevent keyboard and insertion handle from showing.[m
[32m+[m[32m           cancelLongPress();[m
[32m+[m[32m        }[m
[32m+[m[32m        return super.onTouchEvent(event);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean performLongClick() {[m
[32m+[m[32m        showContextMenu();[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onInitializeAccessibilityEvent(AccessibilityEvent event) {[m
[32m+[m[32m        super.onInitializeAccessibilityEvent(event);[m
[32m+[m[32m        String mathText = mathParse(getText().toString());[m
[32m+[m[32m        // Parse the string into something more "mathematical" sounding.[m
[32m+[m[32m        if (!TextUtils.isEmpty(mathText)) {[m
[32m+[m[32m            event.getText().clear();[m
[32m+[m[32m            event.getText().add(mathText);[m
[32m+[m[32m            setContentDescription(mathText);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo info) {[m
[32m+[m[32m        super.onInitializeAccessibilityNodeInfo(info);[m
[32m+[m[32m        info.setText(mathParse(getText().toString()));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onPopulateAccessibilityEvent(AccessibilityEvent event) {[m
[32m+[m[32m        // Do nothing.[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private String mathParse(String plainText) {[m
[32m+[m[32m        String parsedText = plainText;[m
[32m+[m[32m        if (!TextUtils.isEmpty(parsedText)) {[m
[32m+[m[32m            // Initialize replacement table.[m
[32m+[m[32m            initializeReplacementTable();[m
[32m+[m[32m            for (String operator : sOperators) {[m
[32m+[m[32m                if (sReplacementTable.containsKey(operator)) {[m
[32m+[m[32m                    parsedText = parsedText.replace(operator, sReplacementTable.get(operator));[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return parsedText;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private synchronized void initializeReplacementTable() {[m
[32m+[m[32m        if (sReplacementTable == null) {[m
[32m+[m[32m            ImmutableMap.Builder<String, String> builder = ImmutableMap.builder();[m
[32m+[m[32m            Resources res = getContext().getResources();[m
[32m+[m[32m            sOperators = res.getStringArray(R.array.operators);[m
[32m+[m[32m            String[] descs = res.getStringArray(R.array.operatorDescs);[m
[32m+[m[32m            int pos = 0;[m
[32m+[m[32m            for (String key : sOperators) {[m
[32m+[m[32m                builder.put(key, descs[pos]);[m
[32m+[m[32m                pos++;[m
[32m+[m[32m            }[m
[32m+[m[32m            sReplacementTable = builder.build();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private class MenuHandler implements MenuItem.OnMenuItemClickListener {[m
[32m+[m[32m        public boolean onMenuItemClick(MenuItem item) {[m
[32m+[m[32m            return onTextContextMenuItem(item.getTitle());[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public boolean onTextContextMenuItem(CharSequence title) {[m
[32m+[m[32m        boolean handled = false;[m
[32m+[m[32m        if (TextUtils.equals(title, mMenuItemsStrings[CUT])) {[m
[32m+[m[32m            cutContent();[m
[32m+[m[32m            handled = true;[m
[32m+[m[32m        } else if (TextUtils.equals(title,  mMenuItemsStrings[COPY])) {[m
[32m+[m[32m            copyContent();[m
[32m+[m[32m            handled = true;[m
[32m+[m[32m        } else if (TextUtils.equals(title,  mMenuItemsStrings[PASTE])) {[m
[32m+[m[32m            pasteContent();[m
[32m+[m[32m            handled = true;[m
[32m+[m[32m        }[m
[32m+[m[32m        return handled;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onCreateContextMenu(ContextMenu menu) {[m
[32m+[m[32m        MenuHandler handler = new MenuHandler();[m
[32m+[m[32m        if (mMenuItemsStrings == null) {[m
[32m+[m[32m            Resources resources = getResources();[m
[32m+[m[32m            mMenuItemsStrings = new String[3];[m
[32m+[m[32m            mMenuItemsStrings[CUT] = resources.getString(android.R.string.cut);[m
[32m+[m[32m            mMenuItemsStrings[COPY] = resources.getString(android.R.string.copy);[m
[32m+[m[32m            mMenuItemsStrings[PASTE] = resources.getString(android.R.string.paste);[m
[32m+[m[32m        }[m
[32m+[m[32m        for (int i = 0; i < mMenuItemsStrings.length; i++) {[m
[32m+[m[32m            menu.add(Menu.NONE, i, i, mMenuItemsStrings[i]).setOnMenuItemClickListener(handler);[m
[32m+[m[32m        }[m
[32m+[m[32m        if (getText().length() == 0) {[m
[32m+[m[32m            menu.getItem(CUT).setVisible(false);[m
[32m+[m[32m            menu.getItem(COPY).setVisible(false);[m
[32m+[m[32m        }[m
[32m+[m[32m        ClipData primaryClip = getPrimaryClip();[m
[32m+[m[32m        if (primaryClip == null || primaryClip.getItemCount() == 0[m
[32m+[m[32m                || !canPaste(primaryClip.getItemAt(0).coerceToText(getContext()))) {[m
[32m+[m[32m            menu.getItem(PASTE).setVisible(false);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void setPrimaryClip(ClipData clip) {[m
[32m+[m[32m        ClipboardManager clipboard = (ClipboardManager) getContext().[m
[32m+[m[32m                getSystemService(Context.CLIPBOARD_SERVICE);[m
[32m+[m[32m        clipboard.setPrimaryClip(clip);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void copyContent() {[m
[32m+[m[32m        final Editable text = getText();[m
[32m+[m[32m        int textLength = text.length();[m
[32m+[m[32m        setSelection(0, textLength);[m
[32m+[m[32m        ClipboardManager clipboard = (ClipboardManager) getContext().getSystemService([m
[32m+[m[32m                Context.CLIPBOARD_SERVICE);[m
[32m+[m[32m        clipboard.setPrimaryClip(ClipData.newPlainText(null, text));[m
[32m+[m[32m        Toast.makeText(getContext(), R.string.text_copied_toast, Toast.LENGTH_SHORT).show();[m
[32m+[m[32m        setSelection(textLength);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void cutContent() {[m
[32m+[m[32m        final Editable text = getText();[m
[32m+[m[32m        int textLength = text.length();[m
[32m+[m[32m        setSelection(0, textLength);[m
[32m+[m[32m        setPrimaryClip(ClipData.newPlainText(null, text));[m
[32m+[m[32m        ((Editable) getText()).delete(0, textLength);[m
[32m+[m[32m        setSelection(0);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private ClipData getPrimaryClip() {[m
[32m+[m[32m        ClipboardManager clipboard = (ClipboardManager) getContext().getSystemService([m
[32m+[m[32m                Context.CLIPBOARD_SERVICE);[m
[32m+[m[32m        return clipboard.getPrimaryClip();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void pasteContent() {[m
[32m+[m[32m        ClipData clip = getPrimaryClip();[m
[32m+[m[32m        if (clip != null) {[m
[32m+[m[32m            for (int i = 0; i < clip.getItemCount(); i++) {[m
[32m+[m[32m                CharSequence paste = clip.getItemAt(i).coerceToText(getContext());[m
[32m+[m[32m                if (canPaste(paste)) {[m
[32m+[m[32m                    ((Editable) getText()).insert(getSelectionEnd(), paste);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private boolean canPaste(CharSequence paste) {[m
[32m+[m[32m        boolean canPaste = true;[m
[32m+[m[32m        try {[m
[32m+[m[32m            Float.parseFloat(paste.toString());[m
[32m+[m[32m        } catch (NumberFormatException e) {[m
[32m+[m[32m            Log.e(LOG_TAG, "Error turning string to integer. Ignoring paste.", e);[m
[32m+[m[32m            canPaste = false;[m
[32m+[m[32m        }[m
[32m+[m[32m        return canPaste;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    class NoTextSelectionMode implements ActionMode.Callback {[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public boolean onActionItemClicked(ActionMode mode, MenuItem item) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public boolean onCreateActionMode(ActionMode mode, Menu menu) {[m
[32m+[m[32m            copyContent();[m
[32m+[m[32m            // Prevents the selection action mode on double tap.[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public void onDestroyActionMode(ActionMode mode) {}[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public boolean onPrepareActionMode(ActionMode mode, Menu menu) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/CalculatorEditable.java b/app/src/main/java/com/z/blast/workbox/CalculatorEditable.java[m
[1mnew file mode 100644[m
[1mindex 0000000..fbee510[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/CalculatorEditable.java[m
[36m@@ -0,0 +1,110 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright (C) 2008 The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *      http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.text.SpannableStringBuilder;[m
[32m+[m[32mimport android.text.Editable;[m
[32m+[m
[32m+[m[32mpublic class CalculatorEditable extends SpannableStringBuilder {[m
[32m+[m[32m    private static final char[] ORIGINALS    = {'-',      '*',      '/'};[m
[32m+[m[32m    private static final char[] REPLACEMENTS = {'\u2212', '\u00d7', '\u00f7'};[m
[32m+[m[32m    private boolean isInsideReplace = false;[m
[32m+[m[32m    private Logic mLogic;[m
[32m+[m
[32m+[m[32m    private CalculatorEditable(CharSequence source, Logic logic) {[m
[32m+[m[32m        super(source);[m
[32m+[m[32m        mLogic = logic;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public SpannableStringBuilder[m[41m [m
[32m+[m[32m    replace(int start, int end, CharSequence tb, int tbstart, int tbend) {[m
[32m+[m[32m        if (isInsideReplace) {[m
[32m+[m[32m            return super.replace(start, end, tb, tbstart, tbend);[m
[32m+[m[32m        } else {[m[41m        [m
[32m+[m[32m            isInsideReplace = true;[m
[32m+[m[32m            try {[m
[32m+[m[32m                String delta = tb.subSequence(tbstart, tbend).toString();[m[41m            [m
[32m+[m[32m                return internalReplace(start, end, delta);[m
[32m+[m[32m            } finally {[m
[32m+[m[32m                isInsideReplace = false;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    private SpannableStringBuilder internalReplace(int start, int end, String delta) {[m
[32m+[m[32m        if (!mLogic.acceptInsert(delta)) {[m[41m            [m
[32m+[m[32m            mLogic.cleared();[m
[32m+[m[32m            start = 0;[m
[32m+[m[32m            end = length();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        for (int i = ORIGINALS.length - 1; i >= 0; --i) {[m
[32m+[m[32m            delta = delta.replace(ORIGINALS[i], REPLACEMENTS[i]);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        int length = delta.length();[m
[32m+[m[32m        if (length == 1) {[m
[32m+[m[32m            char text = delta.charAt(0);[m
[32m+[m
[32m+[m[32m            //don't allow two dots in the same number[m
[32m+[m[32m            if (text == '.') {[m
[32m+[m[32m                int p = start - 1;[m
[32m+[m[32m                while (p >= 0 && Character.isDigit(charAt(p))) {[m
[32m+[m[32m                    --p;[m
[32m+[m[32m                }[m
[32m+[m[32m                if (p >= 0 && charAt(p) == '.') {[m
[32m+[m[32m                    return super.replace(start, end, "");[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            char prevChar = start > 0 ? charAt(start-1) : '\0';[m
[32m+[m
[32m+[m[32m            //don't allow 2 successive minuses[m
[32m+[m[32m            if (text == Logic.MINUS && prevChar == Logic.MINUS) {[m
[32m+[m[32m                return super.replace(start, end, "");[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            //don't allow multiple successive operators[m
[32m+[m[32m            if (Logic.isOperator(text)) {[m
[32m+[m[32m                while (Logic.isOperator(prevChar) &&[m[41m [m
[32m+[m[32m                       (text != Logic.MINUS || prevChar == '+')) {[m
[32m+[m[32m                    --start;[m
[32m+[m[32m                    prevChar = start > 0 ? charAt(start-1) : '\0';[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            //don't allow leading operator + * /[m
[32m+[m[32m            if (start == 0 && Logic.isOperator(text) && text != Logic.MINUS) {[m
[32m+[m[32m                return super.replace(start, end, "");[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m[41m [m
[32m+[m[32m        return super.replace(start, end, delta);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static class Factory extends Editable.Factory {[m
[32m+[m[32m        private Logic mLogic;[m
[32m+[m
[32m+[m[32m        public Factory(Logic logic) {[m
[32m+[m[32m            mLogic = logic;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        public Editable newEditable(CharSequence source) {[m
[32m+[m[32m            return new CalculatorEditable(source, mLogic);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/CalculatorViewPager.java b/app/src/main/java/com/z/blast/workbox/CalculatorViewPager.java[m
[1mnew file mode 100644[m
[1mindex 0000000..7c98e1d[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/CalculatorViewPager.java[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright (C) 2011 The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *      http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.support.v4.view.ViewPager;[m
[32m+[m[32mimport android.util.AttributeSet;[m
[32m+[m
[32m+[m[32mpublic class CalculatorViewPager extends ViewPager {[m
[32m+[m[32m    public CalculatorViewPager(Context context) {[m
[32m+[m[32m        super(context);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public CalculatorViewPager(Context context, AttributeSet attrs) {[m
[32m+[m[32m        super(context, attrs);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * ViewPager inherits ViewGroup's default behavior of delayed clicks[m
[32m+[m[32m     * on its children, but in order to make the calc buttons more responsive[m
[32m+[m[32m     * we disable that here.[m
[32m+[m[32m     */[m
[32m+[m[32m    public boolean shouldDelayChildPressedState() {[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/CalendarActivity.java b/app/src/main/java/com/z/blast/workbox/CalendarActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..4a43a9f[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/CalendarActivity.java[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.app.Activity;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.widget.CalendarView;[m
[32m+[m[32mimport android.widget.TextView;[m
[32m+[m
[32m+[m[32mimport org.w3c.dom.Text;[m
[32m+[m
[32m+[m[32mimport java.text.SimpleDateFormat;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Random on 16.6.15.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class CalendarActivity extends Activity {[m
[32m+[m[32m    TextView textView,textView2;[m
[32m+[m[32m    CalendarView calendarView;[m
[32m+[m[32m    protected void onCreate(Bundle savedInstanceState) {[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m[32m        setContentView(R.layout.calendar_main);[m
[32m+[m[32m        textView=(TextView)findViewById(R.id.dayText_calendar);[m
[32m+[m[32m        textView2=(TextView)findViewById(R.id.chooseDay_calendar);[m
[32m+[m[32m        calendarView=(CalendarView)findViewById(R.id.calendar);[m
[32m+[m[32m        long nowTime=calendarView.getDate();[m
[32m+[m[32m        SimpleDateFormat f=new SimpleDateFormat("yyyy年MM月dd日HH:mm:ss");[m
[32m+[m[32m        String time=f.format(nowTime);[m
[32m+[m[32m        textView.setText(time);[m
[32m+[m[32m        calendarView.setOnDateChangeListener(new CalendarView.OnDateChangeListener() {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void onSelectedDayChange(CalendarView view, int year, int month, int dayOfMonth) {[m
[32m+[m[32m                SimpleDateFormat f=new SimpleDateFormat("yyyy年MM月dd日");[m
[32m+[m[32m                String chooseTime=f.format(calendarView.getDate());[m
[32m+[m[32m                textView2.setText(chooseTime);[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/ColorButton.java b/app/src/main/java/com/z/blast/workbox/ColorButton.java[m
[1mnew file mode 100644[m
[1mindex 0000000..5f65f09[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/ColorButton.java[m
[36m@@ -0,0 +1,65 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright (C) 2008 The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *      http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.graphics.Paint;[m
[32m+[m[32mimport android.util.AttributeSet;[m
[32m+[m[32mimport android.view.View.OnClickListener;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.widget.Button;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Button with click-animation effect.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class ColorButton extends Button implements OnClickListener {[m
[32m+[m[32m    int CLICK_FEEDBACK_COLOR;[m
[32m+[m[32m    static final int CLICK_FEEDBACK_INTERVAL = 10;[m
[32m+[m[32m    static final int CLICK_FEEDBACK_DURATION = 350;[m
[32m+[m
[32m+[m[32m    float mTextX;[m
[32m+[m[32m    float mTextY;[m
[32m+[m[32m    long mAnimStart;[m
[32m+[m[32m    OnClickListener mListener;[m
[32m+[m
[32m+[m[32m    public ColorButton(Context context, AttributeSet attrs) {[m
[32m+[m[32m        super(context, attrs);[m
[32m+[m[32m        Calculator calc = (Calculator) context;[m
[32m+[m[32m        mListener = calc.mListener;[m
[32m+[m[32m        setOnClickListener(this);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void onClick(View view) {[m
[32m+[m[32m        mListener.onClick(this);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onSizeChanged(int w, int h, int oldW, int oldH) {[m
[32m+[m[32m        measureText();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void measureText() {[m
[32m+[m[32m        Paint paint = getPaint();[m
[32m+[m[32m        mTextX = (getWidth() - paint.measureText(getText().toString())) / 2;[m
[32m+[m[32m        mTextY = (getHeight() - paint.ascent() - paint.descent()) / 2;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    protected void onTextChanged(CharSequence text, int start, int before, int after) {[m
[32m+[m[32m        measureText();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/CompassActivity.java b/app/src/main/java/com/z/blast/workbox/CompassActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..bb2f922[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/CompassActivity.java[m
[36m@@ -0,0 +1,61 @@[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.app.Activity;[m
[32m+[m[32mimport android.hardware.Sensor;[m
[32m+[m[32mimport android.hardware.SensorEvent;[m
[32m+[m[32mimport android.hardware.SensorEventListener;[m
[32m+[m[32mimport android.hardware.SensorManager;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.view.animation.Animation;[m
[32m+[m[32mimport android.view.animation.RotateAnimation;[m
[32m+[m[32mimport android.widget.ImageView;[m
[32m+[m[32mimport android.widget.TextView;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Random on 16.6.14.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class CompassActivity extends Activity implements SensorEventListener {[m
[32m+[m[32m    ImageView imageView;[m
[32m+[m[32m    float currentDegree=0f;[m
[32m+[m[32m    TextView text;[m
[32m+[m[32m    SensorManager sensorManager;[m
[32m+[m[32m    public void onCreate(Bundle savedInstanceState){[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m[32m        setContentView(R.layout.compass_main);[m
[32m+[m[32m        imageView=(ImageView)findViewById(R.id.image_compass);[m
[32m+[m[32m        sensorManager=(SensorManager)getSystemService(SENSOR_SERVICE);[m
[32m+[m[32m        text=(TextView)findViewById(R.id.text_compass);[m
[32m+[m[32m    }[m
[32m+[m[32m    protected void onResume(){[m
[32m+[m[32m        super.onResume();[m
[32m+[m[32m        sensorManager.registerListener(this,[m
[32m+[m[32m                sensorManager.getDefaultSensor(Sensor.TYPE_ORIENTATION),[m
[32m+[m[32m                SensorManager.SENSOR_DELAY_GAME);[m
[32m+[m[32m    }[m
[32m+[m[32m    protected void onPause(){[m
[32m+[m[32m        sensorManager.unregisterListener(this);[m
[32m+[m[32m        super.onPause();[m
[32m+[m[32m    }[m
[32m+[m[32m    protected void onStop(){[m
[32m+[m[32m        sensorManager.unregisterListener(this);[m
[32m+[m[32m        super.onStop();[m
[32m+[m[32m    }[m
[32m+[m[32m    public void onSensorChanged(SensorEvent event){[m
[32m+[m[32m        int sensorType=event.sensor.getType();[m
[32m+[m[32m        switch(sensorType){[m
[32m+[m[32m            case Sensor.TYPE_ORIENTATION:[m
[32m+[m[32m                float degree=event.values[0];[m
[32m+[m[32m                RotateAnimation ra=new RotateAnimation(currentDegree,[m
[32m+[m[32m                        -degree, Animation.RELATIVE_TO_SELF,0.5f,[m
[32m+[m[32m                        Animation.RELATIVE_TO_SELF,0.5f);[m
[32m+[m[32m                ra.setDuration(200);[m
[32m+[m[32m                imageView.startAnimation(ra);[m
[32m+[m[32m                currentDegree=-degree;[m
[32m+[m[32m                text.setText(String.valueOf(degree));[m
[32m+[m[32m                break;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    public void onAccuracyChanged(Sensor sensor,int accuracy){[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/EventListener.java b/app/src/main/java/com/z/blast/workbox/EventListener.java[m
[1mnew file mode 100644[m
[1mindex 0000000..ced5e4f[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/EventListener.java[m
[36m@@ -0,0 +1,136 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright (C) 2008 The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *      http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.support.v4.view.ViewPager;[m
[32m+[m[32mimport android.view.KeyEvent;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.widget.Button;[m
[32m+[m
[32m+[m[32mpublic class EventListener implements View.OnKeyListener,[m
[32m+[m[32m                               View.OnClickListener,[m
[32m+[m[32m                               View.OnLongClickListener {[m
[32m+[m[32m    Logic mHandler;[m
[32m+[m[32m    ViewPager mPager;[m
[32m+[m
[32m+[m[32m    void setHandler(Logic handler, ViewPager pager) {[m
[32m+[m[32m        mHandler = handler;[m
[32m+[m[32m        mPager = pager;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onClick(View view) {[m
[32m+[m[32m        int id = view.getId();[m
[32m+[m[32m        switch (id) {[m
[32m+[m[32m        case R.id.del:[m
[32m+[m[32m            mHandler.onDelete();[m
[32m+[m[32m            break;[m
[32m+[m
[32m+[m[32m        case R.id.clear:[m
[32m+[m[32m            mHandler.onClear();[m
[32m+[m[32m            break;[m
[32m+[m
[32m+[m[32m        case R.id.equal:[m
[32m+[m[32m            mHandler.onEnter();[m
[32m+[m[32m            break;[m
[32m+[m
[32m+[m[32m        default:[m
[32m+[m[32m            if (view instanceof Button) {[m
[32m+[m[32m                String text = ((Button) view).getText().toString();[m
[32m+[m[32m                if (text.length() >= 2) {[m
[32m+[m[32m                    // add paren after sin, cos, ln, etc. from buttons[m
[32m+[m[32m                    text += '(';[m
[32m+[m[32m                }[m
[32m+[m[32m                mHandler.insert(text);[m
[32m+[m[32m                if (mPager != null && mPager.getCurrentItem() == Calculator.ADVANCED_PANEL) {[m
[32m+[m[32m                    mPager.setCurrentItem(Calculator.BASIC_PANEL);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean onLongClick(View view) {[m
[32m+[m[32m        int id = view.getId();[m
[32m+[m[32m        if (id == R.id.del) {[m
[32m+[m[32m            mHandler.onClear();[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean onKey(View view, int keyCode, KeyEvent keyEvent) {[m
[32m+[m[32m        int action = keyEvent.getAction();[m
[32m+[m
[32m+[m[32m        if (keyCode == KeyEvent.KEYCODE_DPAD_LEFT ||[m
[32m+[m[32m            keyCode == KeyEvent.KEYCODE_DPAD_RIGHT) {[m
[32m+[m[32m            boolean eat = mHandler.eatHorizontalMove(keyCode == KeyEvent.KEYCODE_DPAD_LEFT);[m
[32m+[m[32m            return eat;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        //Work-around for spurious key event from IME, bug #1639445[m
[32m+[m[32m        if (action == KeyEvent.ACTION_MULTIPLE && keyCode == KeyEvent.KEYCODE_UNKNOWN) {[m
[32m+[m[32m            return true; // eat it[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        //Calculator.log("KEY " + keyCode + "; " + action);[m
[32m+[m
[32m+[m[32m        if (keyEvent.getUnicodeChar() == '=') {[m
[32m+[m[32m            if (action == KeyEvent.ACTION_UP) {[m
[32m+[m[32m                mHandler.onEnter();[m
[32m+[m[32m            }[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (keyCode != KeyEvent.KEYCODE_DPAD_CENTER &&[m
[32m+[m[32m            keyCode != KeyEvent.KEYCODE_DPAD_UP &&[m
[32m+[m[32m            keyCode != KeyEvent.KEYCODE_DPAD_DOWN &&[m
[32m+[m[32m            keyCode != KeyEvent.KEYCODE_ENTER) {[m
[32m+[m[32m            if (keyEvent.isPrintingKey() && action == KeyEvent.ACTION_UP) {[m
[32m+[m[32m                // Tell the handler that text was updated.[m
[32m+[m[32m                mHandler.onTextChanged();[m
[32m+[m[32m            }[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        /*[m
[32m+[m[32m           We should act on KeyEvent.ACTION_DOWN, but strangely[m
[32m+[m[32m           sometimes the DOWN event isn't received, only the UP.[m
[32m+[m[32m           So the workaround is to act on UP...[m
[32m+[m[32m           http://b/issue?id=1022478[m
[32m+[m[32m         */[m
[32m+[m
[32m+[m[32m        if (action == KeyEvent.ACTION_UP) {[m
[32m+[m[32m            switch (keyCode) {[m
[32m+[m[32m            case KeyEvent.KEYCODE_ENTER:[m
[32m+[m[32m            case KeyEvent.KEYCODE_DPAD_CENTER:[m
[32m+[m[32m                mHandler.onEnter();[m
[32m+[m[32m                break;[m
[32m+[m
[32m+[m[32m            case KeyEvent.KEYCODE_DPAD_UP:[m
[32m+[m[32m                mHandler.onUp();[m
[32m+[m[32m                break;[m
[32m+[m
[32m+[m[32m            case KeyEvent.KEYCODE_DPAD_DOWN:[m
[32m+[m[32m                mHandler.onDown();[m
[32m+[m[32m                break;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/FlashLightActivity.java b/app/src/main/java/com/z/blast/workbox/FlashLightActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..218d68d[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/FlashLightActivity.java[m
[36m@@ -0,0 +1,43 @@[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.app.Activity;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.widget.ImageView;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Random on 16.6.12.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class FlashLightActivity extends Activity {[m
[32m+[m[32m    ImageView openFlash;[m
[32m+[m[32m    boolean isOpen;[m
[32m+[m[32m    android.hardware.Camera camera;[m
[32m+[m[32m    protected void onCreate(Bundle savedInstanceState) {[m
[32m+[m[32m        isOpen=false;[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m[32m        setContentView(R.layout.flashlight_main);[m
[32m+[m[32m        openFlash = (ImageView) findViewById(R.id.openFlash);[m
[32m+[m[32m        OpenListener openListener=new OpenListener();[m
[32m+[m[32m        openFlash.setOnClickListener(openListener);[m
[32m+[m[32m    }[m
[32m+[m[32m    class OpenListener implements View.OnClickListener{[m
[32m+[m[32m        public void onClick(View v){[m
[32m+[m[32m            if(isOpen==false){[m
[32m+[m[32m                camera= android.hardware.Camera.open();[m
[32m+[m[32m                android.hardware.Camera.Parameters mParameters=camera.getParameters();[m
[32m+[m[32m                mParameters.setFlashMode(android.hardware.Camera.Parameters.FLASH_MODE_TORCH);[m
[32m+[m[32m                openFlash.setImageResource(R.drawable.openflash);[m
[32m+[m[32m                camera.setParameters(mParameters);[m
[32m+[m[32m                camera.startPreview();[m
[32m+[m[32m                openFlash.setImageResource(R.drawable.openflash);[m
[32m+[m[32m                isOpen=true;[m
[32m+[m[32m            }else {[m
[32m+[m[32m                camera.stopPreview();[m
[32m+[m[32m                camera.release();[m
[32m+[m[32m                openFlash.setImageResource(R.drawable.closeflash);[m
[32m+[m[32m                isOpen=false;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/GradienterActivity.java b/app/src/main/java/com/z/blast/workbox/GradienterActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..4eb017c[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/GradienterActivity.java[m
[36m@@ -0,0 +1,85 @@[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.app.Activity;[m
[32m+[m[32mimport android.hardware.Sensor;[m
[32m+[m[32mimport android.hardware.SensorEvent;[m
[32m+[m[32mimport android.hardware.SensorEventListener;[m
[32m+[m[32mimport android.hardware.SensorManager;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Random on 16.6.14.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class GradienterActivity extends Activity implements SensorEventListener {[m
[32m+[m[32m    GradienterView show;[m
[32m+[m[32m    int MAX_ANGLE=30;[m
[32m+[m[32m    SensorManager mSensorManager;[m
[32m+[m[32m    public void onCreate(Bundle savedInstanceState){[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m[32m        setContentView(R.layout.gradienter_main);[m
[32m+[m[32m        show=(GradienterView)findViewById(R.id.show);[m
[32m+[m[32m        mSensorManager =(SensorManager)getSystemService(SENSOR_SERVICE);[m
[32m+[m[32m    }[m
[32m+[m[32m    public void onResume(){[m
[32m+[m[32m        super.onResume();[m
[32m+[m[32m        mSensorManager.registerListener(this,[m
[32m+[m[32m                mSensorManager.getDefaultSensor(Sensor.TYPE_ORIENTATION),[m
[32m+[m[32m                SensorManager.SENSOR_DELAY_GAME);[m
[32m+[m[32m    }[m
[32m+[m[32m    protected void onPause(){[m
[32m+[m[32m        super.onPause();[m
[32m+[m[32m        mSensorManager.unregisterListener(this);[m
[32m+[m[32m    }[m
[32m+[m[32m    protected void onStop(){[m
[32m+[m[32m        mSensorManager.unregisterListener(this);[m
[32m+[m[32m        super.onStop();[m
[32m+[m[32m    }[m
[32m+[m[32m    public void onAccuracyChanged(Sensor sensor,int accuracy){[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[32m    public void onSensorChanged(SensorEvent event){[m
[32m+[m[32m        float[] values=event.values;[m
[32m+[m[32m        int sensorType=event.sensor.getType();[m
[32m+[m[32m        switch(sensorType){[m
[32m+[m[32m            case Sensor.TYPE_ORIENTATION:[m
[32m+[m[32m                float yAngle=values[1];[m
[32m+[m[32m                float zAngle=values[2];[m
[32m+[m[32m                int x=(show.back.getWidth()-show.bubble.getWidth())/2;[m
[32m+[m[32m                int y=(show.back.getHeight()-show.bubble.getHeight())/2;[m
[32m+[m[32m                if(Math.abs(zAngle)<=MAX_ANGLE){[m
[32m+[m[32m                    int deltaX=(int)((show.back.getWidth()-show.bubble.getWidth())/2*zAngle/MAX_ANGLE);[m
[32m+[m[32m                    x+=deltaX;[m
[32m+[m[32m                }else if(zAngle>MAX_ANGLE){[m
[32m+[m[32m                    x=0;[m
[32m+[m[32m                }else{[m
[32m+[m[32m                    x=show.back.getWidth()-show.bubble.getWidth();[m
[32m+[m[32m                }[m
[32m+[m[32m                if(Math.abs(yAngle)<=MAX_ANGLE){[m
[32m+[m[32m                    int deltaY=(int)((show.back.getHeight()-show.bubble.getHeight())/2*yAngle/MAX_ANGLE);[m
[32m+[m[32m                    y+=deltaY;[m
[32m+[m[32m                }else if(yAngle>MAX_ANGLE){[m
[32m+[m[32m                    y=show.back.getHeight()-show.bubble.getHeight();[m
[32m+[m[32m                }else{[m
[32m+[m[32m                    y=0;[m
[32m+[m[32m                }[m
[32m+[m[32m                if(isContain(x,y)){[m
[32m+[m[32m                    show.bubbleX=x;[m
[32m+[m[32m                    show.bubbleY=y;[m
[32m+[m[32m                }[m
[32m+[m[32m                show.postInvalidate();[m
[32m+[m[32m                break;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    private boolean isContain(int x,int y){[m
[32m+[m[32m        int bubbleCx=x+show.bubble.getWidth()/2;[m
[32m+[m[32m        int bubbleCy=y+show.bubble.getHeight()/2;[m
[32m+[m[32m        int backCx=show.back.getWidth()/2;[m
[32m+[m[32m        int backCy=show.back.getHeight()/2;[m
[32m+[m[32m        double distance=Math.sqrt((bubbleCx-backCx)*(bubbleCx-backCx)+(bubbleCy-backCy)*(bubbleCy-backCy));[m
[32m+[m[32m        if(distance<(show.back.getWidth()-show.bubble.getWidth())/2){[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }else{[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/GradienterView.java b/app/src/main/java/com/z/blast/workbox/GradienterView.java[m
[1mnew file mode 100644[m
[1mindex 0000000..fc9d7a2[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/GradienterView.java[m
[36m@@ -0,0 +1,65 @@[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.graphics.Bitmap;[m
[32m+[m[32mimport android.graphics.BitmapFactory;[m
[32m+[m[32mimport android.graphics.Canvas;[m
[32m+[m[32mimport android.graphics.Color;[m
[32m+[m[32mimport android.graphics.LinearGradient;[m
[32m+[m[32mimport android.graphics.Paint;[m
[32m+[m[32mimport android.graphics.Shader;[m
[32m+[m[32mimport android.util.AttributeSet;[m
[32m+[m[32mimport android.util.DisplayMetrics;[m
[32m+[m[32mimport android.view.Display;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.view.WindowManager;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Random on 16.6.14.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class GradienterView extends View {[m
[32m+[m[32m    Bitmap back;[m
[32m+[m[32m    Bitmap bubble;[m
[32m+[m[32m    int bubbleX,bubbleY;[m
[32m+[m[32m    public GradienterView(Context context) {[m
[32m+[m[32m        super(context);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public GradienterView(Context context, AttributeSet attrs) {[m
[32m+[m[32m        super(context, attrs);[m
[32m+[m[32m        WindowManager wm=(WindowManager) context.getSystemService(Context.WINDOW_SERVICE);[m
[32m+[m[32m        Display display=wm.getDefaultDisplay();[m
[32m+[m[32m        DisplayMetrics metrics=new DisplayMetrics();[m
[32m+[m[32m        display.getMetrics(metrics);[m
[32m+[m[32m        int screenWidth=metrics.widthPixels;[m
[32m+[m[32m        int screenHeight=metrics.heightPixels;[m
[32m+[m[32m        back=Bitmap.createBitmap(screenWidth,screenHeight,Bitmap.Config.ARGB_8888);[m
[32m+[m[32m        Canvas canvas=new Canvas(back);[m
[32m+[m[32m        Paint paint=new Paint();[m
[32m+[m[32m        paint.setAntiAlias(true);[m
[32m+[m[32m        paint.setStyle(Paint.Style.FILL);[m
[32m+[m[32m        Shader shader=new LinearGradient(0,screenWidth,[m
[32m+[m[32m                screenWidth*0.8f,screenWidth*0.2f,[m
[32m+[m[32m                Color.argb(255, 170, 98, 39),Color.argb(255,223,165,92),Shader.TileMode.CLAMP);[m
[32m+[m[32m        paint.setShader(shader);[m
[32m+[m[32m        canvas.drawCircle(screenWidth / 2, screenHeight/2, screenWidth / 2, paint);[m
[32m+[m[32m        Paint paint2=new Paint();[m
[32m+[m[32m        paint2.setAntiAlias(true);[m
[32m+[m[32m        paint2.setStyle(Paint.Style.STROKE);[m
[32m+[m[32m        paint2.setStrokeWidth(5);[m
[32m+[m[32m        paint2.setColor(Color.argb(255,252,200,59));[m
[32m+[m[32m        canvas.drawCircle(screenWidth / 2, screenHeight / 2, screenWidth / 2, paint2);[m
[32m+[m[32m        canvas.drawLine(0, screenHeight / 2, screenWidth, screenHeight / 2, paint2);[m
[32m+[m[32m        canvas.drawLine(screenWidth / 2, screenHeight/2-screenWidth/2, screenWidth / 2, screenHeight/2+screenWidth/2, paint2);[m
[32m+[m[32m        paint2.setStrokeWidth(10);[m
[32m+[m[32m        paint2.setColor(Color.RED);[m
[32m+[m[32m        canvas.drawLine(screenWidth / 2 - 30, screenHeight / 2, screenWidth / 2 + 30, screenHeight / 2, paint2);[m
[32m+[m[32m        canvas.drawLine(screenWidth / 2, screenHeight / 2 - 30, screenWidth / 2, screenHeight / 2 + 30, paint2);[m
[32m+[m[32m        bubble= BitmapFactory.decodeResource(getResources(), R.drawable.bubble);[m
[32m+[m[32m    }[m
[32m+[m[32m    protected void onDraw(Canvas canvas){[m
[32m+[m[32m        super.onDraw(canvas);[m
[32m+[m[32m        canvas.drawBitmap(back,0,0,null);[m
[32m+[m[32m        canvas.drawBitmap(bubble,bubbleX,bubbleY,null);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/History.java b/app/src/main/java/com/z/blast/workbox/History.java[m
[1mnew file mode 100644[m
[1mindex 0000000..2015775[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/History.java[m
[36m@@ -0,0 +1,118 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright (C) 2008 The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *      http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.widget.BaseAdapter;[m
[32m+[m
[32m+[m[32mimport java.io.DataInput;[m
[32m+[m[32mimport java.io.DataOutput;[m
[32m+[m[32mimport java.io.IOException;[m
[32m+[m[32mimport java.util.Vector;[m
[32m+[m
[32m+[m[32mpublic class History {[m
[32m+[m[32m    private static final int VERSION_1 = 1;[m
[32m+[m[32m    private static final int MAX_ENTRIES = 100;[m
[32m+[m[32m    Vector<HistoryEntry> mEntries = new Vector<HistoryEntry>();[m
[32m+[m[32m    int mPos;[m
[32m+[m[32m    BaseAdapter mObserver;[m
[32m+[m
[32m+[m[32m    History() {[m
[32m+[m[32m        clear();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    History(int version, DataInput in) throws IOException {[m
[32m+[m[32m        if (version >= VERSION_1) {[m
[32m+[m[32m            int size = in.readInt();[m
[32m+[m[32m            for (int i = 0; i < size; ++i) {[m
[32m+[m[32m                mEntries.add(new HistoryEntry(version, in));[m
[32m+[m[32m            }[m
[32m+[m[32m            mPos = in.readInt();[m
[32m+[m[32m        } else {[m
[32m+[m[32m            throw new IOException("invalid version " + version);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void setObserver(BaseAdapter observer) {[m
[32m+[m[32m        mObserver = observer;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void notifyChanged() {[m
[32m+[m[32m        if (mObserver != null) {[m
[32m+[m[32m            mObserver.notifyDataSetChanged();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void clear() {[m
[32m+[m[32m        mEntries.clear();[m
[32m+[m[32m        mEntries.add(new HistoryEntry(""));[m
[32m+[m[32m        mPos = 0;[m
[32m+[m[32m        notifyChanged();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void write(DataOutput out) throws IOException {[m
[32m+[m[32m        out.writeInt(mEntries.size());[m
[32m+[m[32m        for (HistoryEntry entry : mEntries) {[m
[32m+[m[32m            entry.write(out);[m
[32m+[m[32m        }[m
[32m+[m[32m        out.writeInt(mPos);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void update(String text) {[m
[32m+[m[32m        current().setEdited(text);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    boolean moveToPrevious() {[m
[32m+[m[32m        if (mPos > 0) {[m
[32m+[m[32m            --mPos;[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    boolean moveToNext() {[m
[32m+[m[32m        if (mPos < mEntries.size() - 1) {[m
[32m+[m[32m            ++mPos;[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void enter(String text) {[m
[32m+[m[32m        current().clearEdited();[m
[32m+[m[32m        if (mEntries.size() >= MAX_ENTRIES) {[m
[32m+[m[32m            mEntries.remove(0);[m
[32m+[m[32m        }[m
[32m+[m[32m        if (mEntries.size() < 2 ||[m
[32m+[m[32m            !text.equals(mEntries.elementAt(mEntries.size() - 2).getBase())) {[m
[32m+[m[32m            mEntries.insertElementAt(new HistoryEntry(text), mEntries.size() - 1);[m
[32m+[m[32m        }[m
[32m+[m[32m        mPos = mEntries.size() - 1;[m
[32m+[m[32m        notifyChanged();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    HistoryEntry current() {[m
[32m+[m[32m        return mEntries.elementAt(mPos);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    String getText() {[m
[32m+[m[32m        return current().getEdited();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    String getBase() {[m
[32m+[m[32m        return current().getBase();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/HistoryAdapter.java b/app/src/main/java/com/z/blast/workbox/HistoryAdapter.java[m
[1mnew file mode 100644[m
[1mindex 0000000..862bc5a[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/HistoryAdapter.java[m
[36m@@ -0,0 +1,87 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright (C) 2008 The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *      http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.view.LayoutInflater;[m
[32m+[m[32mimport android.view.ViewGroup;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.widget.BaseAdapter;[m
[32m+[m[32mimport android.widget.TextView;[m
[32m+[m
[32m+[m[32mimport java.util.Vector;[m
[32m+[m
[32m+[m[32mimport org.javia.arity.SyntaxException;[m
[32m+[m
[32m+[m[32mpublic class HistoryAdapter extends BaseAdapter {[m
[32m+[m[32m    private Vector<HistoryEntry> mEntries;[m
[32m+[m[32m    private LayoutInflater mInflater;[m
[32m+[m[32m    private Logic mEval;[m
[32m+[m[41m    [m
[32m+[m[32m    HistoryAdapter(Context context, History history, Logic evaluator) {[m
[32m+[m[32m        mEntries = history.mEntries;[m
[32m+[m[32m        mInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);[m
[32m+[m[32m        mEval = evaluator;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // @Override[m
[32m+[m[32m    public int getCount() {[m
[32m+[m[32m        return mEntries.size() - 1;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // @Override[m
[32m+[m[32m    public Object getItem(int position) {[m
[32m+[m[32m        return mEntries.elementAt(position);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // @Override[m
[32m+[m[32m    public long getItemId(int position) {[m
[32m+[m[32m        return position;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean hasStableIds() {[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // @Override[m
[32m+[m[32m    public View getView(int position, View convertView, ViewGroup parent) {[m
[32m+[m[32m        View view;[m
[32m+[m[32m        if (convertView == null) {[m
[32m+[m[32m            view = mInflater.inflate(R.layout.history_item, parent, false);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            view = convertView;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        TextView expr   = (TextView) view.findViewById(R.id.historyExpr);[m
[32m+[m[32m        TextView result = (TextView) view.findViewById(R.id.historyResult);[m
[32m+[m
[32m+[m[32m        HistoryEntry entry = mEntries.elementAt(position);[m
[32m+[m[32m        String base = entry.getBase();[m
[32m+[m[32m        expr.setText(entry.getBase());[m
[32m+[m
[32m+[m[32m        try {[m
[32m+[m[32m            String res = mEval.evaluate(base);[m
[32m+[m[32m            result.setText("= " + res);[m
[32m+[m[32m        } catch (SyntaxException e) {[m
[32m+[m[32m            result.setText("");[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return view;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/HistoryEntry.java b/app/src/main/java/com/z/blast/workbox/HistoryEntry.java[m
[1mnew file mode 100644[m
[1mindex 0000000..e6787ab[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/HistoryEntry.java[m
[36m@@ -0,0 +1,69 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright (C) 2008 The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *      http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport java.io.DataInput;[m
[32m+[m[32mimport java.io.DataOutput;[m
[32m+[m[32mimport java.io.IOException;[m
[32m+[m
[32m+[m[32mpublic class HistoryEntry {[m
[32m+[m[32m    private static final int VERSION_1 = 1;[m
[32m+[m[32m    private String mBase;[m
[32m+[m[32m    private String mEdited;[m
[32m+[m
[32m+[m[32m    HistoryEntry(String str) {[m
[32m+[m[32m        mBase = str;[m
[32m+[m[32m        clearEdited();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    HistoryEntry(int version, DataInput in) throws IOException {[m
[32m+[m[32m        if (version >= VERSION_1) {[m
[32m+[m[32m            mBase   = in.readUTF();[m
[32m+[m[32m            mEdited = in.readUTF();[m
[32m+[m[32m            //Calculator.log("load " + mEdited);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            throw new IOException("invalid version " + version);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    void write(DataOutput out) throws IOException {[m
[32m+[m[32m        out.writeUTF(mBase);[m
[32m+[m[32m        out.writeUTF(mEdited);[m
[32m+[m[32m        //Calculator.log("save " + mEdited);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public String toString() {[m
[32m+[m[32m        return mBase;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void clearEdited() {[m
[32m+[m[32m        mEdited = mBase;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    String getEdited() {[m
[32m+[m[32m        return mEdited;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void setEdited(String edited) {[m
[32m+[m[32m        mEdited = edited;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    String getBase() {[m
[32m+[m[32m        return mBase;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/Logic.java b/app/src/main/java/com/z/blast/workbox/Logic.java[m
[1mnew file mode 100644[m
[1mindex 0000000..8541cee[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/Logic.java[m
[36m@@ -0,0 +1,332 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright (C) 2008 The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *      http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport com.z.blast.workbox.CalculatorDisplay.Scroll;[m
[32m+[m
[32m+[m[32mimport android.text.TextUtils;[m
[32m+[m[32mimport android.view.KeyEvent;[m
[32m+[m[32mimport android.widget.EditText;[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.content.res.Resources;[m
[32m+[m
[32m+[m[32mimport java.util.HashMap;[m
[32m+[m[32mimport java.util.Locale;[m
[32m+[m[32mimport java.util.Map.Entry;[m
[32m+[m[32mimport java.util.Set;[m
[32m+[m
[32m+[m[32mimport org.javia.arity.Symbols;[m
[32m+[m[32mimport org.javia.arity.SyntaxException;[m
[32m+[m
[32m+[m[32mpublic class Logic {[m
[32m+[m[32m    private CalculatorDisplay mDisplay;[m
[32m+[m[32m    private Symbols mSymbols = new Symbols();[m
[32m+[m[32m    private History mHistory;[m
[32m+[m[32m    private String  mResult = "";[m
[32m+[m[32m    private boolean mIsError = false;[m
[32m+[m[32m    private int mLineLength = 0;[m
[32m+[m
[32m+[m[32m    private static final String INFINITY_UNICODE = "\u221e";[m
[32m+[m
[32m+[m[32m    public static final String MARKER_EVALUATE_ON_RESUME = "?";[m
[32m+[m
[32m+[m[32m    // the two strings below are the result of Double.toString() for Infinity & NaN[m
[32m+[m[32m    // they are not output to the user and don't require internationalization[m
[32m+[m[32m    private static final String INFINITY = "Infinity";[m
[32m+[m[32m    private static final String NAN      = "NaN";[m
[32m+[m
[32m+[m[32m    static final char MINUS = '\u2212';[m
[32m+[m
[32m+[m[32m    private final String mErrorString;[m
[32m+[m
[32m+[m[32m    public final static int DELETE_MODE_BACKSPACE = 0;[m
[32m+[m[32m    public final static int DELETE_MODE_CLEAR = 1;[m
[32m+[m
[32m+[m[32m    private int mDeleteMode = DELETE_MODE_BACKSPACE;[m
[32m+[m
[32m+[m[32m    public interface Listener {[m
[32m+[m[32m        void onDeleteModeChange();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private Listener mListener;[m
[32m+[m[32m    private Context mContext;[m
[32m+[m[32m    private Set<Entry<String, String>> mTranslationsSet;[m
[32m+[m
[32m+[m[32m    Logic(Context context, History history, CalculatorDisplay display) {[m
[32m+[m[32m        mContext = context;[m
[32m+[m[32m        mErrorString = mContext.getResources().getString(R.string.error);[m
[32m+[m[32m        mHistory = history;[m
[32m+[m[32m        mDisplay = display;[m
[32m+[m[32m        mDisplay.setLogic(this);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setListener(Listener listener) {[m
[32m+[m[32m        this.mListener = listener;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setDeleteMode(int mode) {[m
[32m+[m[32m        if (mDeleteMode != mode) {[m
[32m+[m[32m            mDeleteMode = mode;[m
[32m+[m[32m            mListener.onDeleteModeChange();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public int getDeleteMode() {[m
[32m+[m[32m        return mDeleteMode;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void setLineLength(int nDigits) {[m
[32m+[m[32m        mLineLength = nDigits;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    boolean eatHorizontalMove(boolean toLeft) {[m
[32m+[m[32m        EditText editText = mDisplay.getEditText();[m
[32m+[m[32m        int cursorPos = editText.getSelectionStart();[m
[32m+[m[32m        return toLeft ? cursorPos == 0 : cursorPos >= editText.length();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private String getText() {[m
[32m+[m[32m        return mDisplay.getText().toString();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void insert(String delta) {[m
[32m+[m[32m        mDisplay.insert(delta);[m
[32m+[m[32m        setDeleteMode(DELETE_MODE_BACKSPACE);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void onTextChanged() {[m
[32m+[m[32m        setDeleteMode(DELETE_MODE_BACKSPACE);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void resumeWithHistory() {[m
[32m+[m[32m        clearWithHistory(false);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void clearWithHistory(boolean scroll) {[m
[32m+[m[32m        String text = mHistory.getText();[m
[32m+[m[32m        if (MARKER_EVALUATE_ON_RESUME.equals(text)) {[m
[32m+[m[32m            if (!mHistory.moveToPrevious()) {[m
[32m+[m[32m                text = "";[m
[32m+[m[32m            }[m
[32m+[m[32m            text = mHistory.getText();[m
[32m+[m[32m            evaluateAndShowResult(text, CalculatorDisplay.Scroll.NONE);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            mResult = "";[m
[32m+[m[32m            mDisplay.setText([m
[32m+[m[32m                    text, scroll ? CalculatorDisplay.Scroll.UP : CalculatorDisplay.Scroll.NONE);[m
[32m+[m[32m            mIsError = false;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void clear(boolean scroll) {[m
[32m+[m[32m        mHistory.enter("");[m
[32m+[m[32m        mDisplay.setText("", scroll ? CalculatorDisplay.Scroll.UP : CalculatorDisplay.Scroll.NONE);[m
[32m+[m[32m        cleared();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void cleared() {[m
[32m+[m[32m        mResult = "";[m
[32m+[m[32m        mIsError = false;[m
[32m+[m[32m        updateHistory();[m
[32m+[m
[32m+[m[32m        setDeleteMode(DELETE_MODE_BACKSPACE);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    boolean acceptInsert(String delta) {[m
[32m+[m[32m        String text = getText();[m
[32m+[m[32m        return !mIsError &&[m
[32m+[m[32m            (!mResult.equals(text) ||[m
[32m+[m[32m             isOperator(delta) ||[m
[32m+[m[32m             mDisplay.getSelectionStart() != text.length());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void onDelete() {[m
[32m+[m[32m        if (getText().equals(mResult) || mIsError) {[m
[32m+[m[32m            clear(false);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            mDisplay.dispatchKeyEvent(new KeyEvent(0, KeyEvent.KEYCODE_DEL));[m
[32m+[m[32m            mResult = "";[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void onClear() {[m
[32m+[m[32m        clear(mDeleteMode == DELETE_MODE_CLEAR);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void onEnter() {[m
[32m+[m[32m        if (mDeleteMode == DELETE_MODE_CLEAR) {[m
[32m+[m[32m            clearWithHistory(false); // clear after an Enter on result[m
[32m+[m[32m        } else {[m
[32m+[m[32m            evaluateAndShowResult(getText(), CalculatorDisplay.Scroll.UP);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void evaluateAndShowResult(String text, Scroll scroll) {[m
[32m+[m[32m        try {[m
[32m+[m[32m            String result = evaluate(text);[m
[32m+[m[32m            if (!text.equals(result)) {[m
[32m+[m[32m                mHistory.enter(text);[m
[32m+[m[32m                mResult = result;[m
[32m+[m[32m                mDisplay.setText(mResult, scroll);[m
[32m+[m[32m                setDeleteMode(DELETE_MODE_CLEAR);[m
[32m+[m[32m            }[m
[32m+[m[32m        } catch (SyntaxException e) {[m
[32m+[m[32m            mIsError = true;[m
[32m+[m[32m            mResult = mErrorString;[m
[32m+[m[32m            mDisplay.setText(mResult, scroll);[m
[32m+[m[32m            setDeleteMode(DELETE_MODE_CLEAR);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void onUp() {[m
[32m+[m[32m        String text = getText();[m
[32m+[m[32m        if (!text.equals(mResult)) {[m
[32m+[m[32m            mHistory.update(text);[m
[32m+[m[32m        }[m
[32m+[m[32m        if (mHistory.moveToPrevious()) {[m
[32m+[m[32m            mDisplay.setText(mHistory.getText(), CalculatorDisplay.Scroll.DOWN);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void onDown() {[m
[32m+[m[32m        String text = getText();[m
[32m+[m[32m        if (!text.equals(mResult)) {[m
[32m+[m[32m            mHistory.update(text);[m
[32m+[m[32m        }[m
[32m+[m[32m        if (mHistory.moveToNext()) {[m
[32m+[m[32m            mDisplay.setText(mHistory.getText(), CalculatorDisplay.Scroll.UP);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void updateHistory() {[m
[32m+[m[32m        String text = getText();[m
[32m+[m[32m        // Don't set the ? marker for empty text or the error string.[m
[32m+[m[32m        // There is no need to evaluate those later.[m
[32m+[m[32m        if (!TextUtils.isEmpty(text) && !TextUtils.equals(text, mErrorString)[m
[32m+[m[32m                && text.equals(mResult)) {[m
[32m+[m[32m            mHistory.update(MARKER_EVALUATE_ON_RESUME);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            mHistory.update(getText());[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    String evaluate(String input) throws SyntaxException {[m
[32m+[m[32m        if (input.trim().equals("")) {[m
[32m+[m[32m            return "";[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // drop final infix operators (they can only result in error)[m
[32m+[m[32m        int size = input.length();[m
[32m+[m[32m        while (size > 0 && isOperator(input.charAt(size - 1))) {[m
[32m+[m[32m            input = input.substring(0, size - 1);[m
[32m+[m[32m            --size;[m
[32m+[m[32m        }[m
[32m+[m[32m        // Find and replace any translated mathematical functions.[m
[32m+[m[32m        input = replaceTranslations(input);[m
[32m+[m[32m        double value = mSymbols.eval(input);[m
[32m+[m
[32m+[m[32m        String result = "";[m
[32m+[m[32m        for (int precision = mLineLength; precision > 6; precision--) {[m
[32m+[m[32m            result = tryFormattingWithPrecision(value, precision);[m
[32m+[m[32m            if (result.length() <= mLineLength) {[m
[32m+[m[32m                break;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return result.replace('-', MINUS).replace(INFINITY, INFINITY_UNICODE);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void addTranslation(HashMap<String, String> map, int t, int m) {[m
[32m+[m[32m        Resources res = mContext.getResources();[m
[32m+[m[32m        String translated = res.getString(t);[m
[32m+[m[32m        String math = res.getString(m);[m
[32m+[m[32m        if (!TextUtils.equals(translated, math)) {[m
[32m+[m[32m            map.put(translated, math);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private String replaceTranslations(String input) {[m
[32m+[m[32m        if (mTranslationsSet == null) {[m
[32m+[m[32m            HashMap<String, String> map = new HashMap<String, String>();[m
[32m+[m[32m            addTranslation(map, R.string.sin, R.string.sin_mathematical_value);[m
[32m+[m[32m            addTranslation(map, R.string.cos, R.string.cos_mathematical_value);[m
[32m+[m[32m            addTranslation(map, R.string.tan, R.string.tan_mathematical_value);[m
[32m+[m[32m            addTranslation(map, R.string.e, R.string.e_mathematical_value);[m
[32m+[m[32m            addTranslation(map, R.string.ln, R.string.ln_mathematical_value);[m
[32m+[m[32m            addTranslation(map, R.string.lg, R.string.lg_mathematical_value);[m
[32m+[m[32m            mTranslationsSet = map.entrySet();[m
[32m+[m[32m        }[m
[32m+[m[32m        for (Entry<String, String> entry : mTranslationsSet) {[m
[32m+[m[32m            input = input.replace(entry.getKey(), entry.getValue());[m
[32m+[m[32m        }[m
[32m+[m[32m        return input;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private String tryFormattingWithPrecision(double value, int precision) {[m
[32m+[m[32m        // The standard scientific formatter is basically what we need. We will[m
[32m+[m[32m        // start with what it produces and then massage it a bit.[m
[32m+[m[32m        String result = String.format(Locale.US, "%" + mLineLength + "." + precision + "g", value);[m
[32m+[m[32m        if (result.equals(NAN)) { // treat NaN as Error[m
[32m+[m[32m            mIsError = true;[m
[32m+[m[32m            return mErrorString;[m
[32m+[m[32m        }[m
[32m+[m[32m        String mantissa = result;[m
[32m+[m[32m        String exponent = null;[m
[32m+[m[32m        int e = result.indexOf('e');[m
[32m+[m[32m        if (e != -1) {[m
[32m+[m[32m            mantissa = result.substring(0, e);[m
[32m+[m
[32m+[m[32m            // Strip "+" and unnecessary 0's from the exponent[m
[32m+[m[32m            exponent = result.substring(e + 1);[m
[32m+[m[32m            if (exponent.startsWith("+")) {[m
[32m+[m[32m                exponent = exponent.substring(1);[m
[32m+[m[32m            }[m
[32m+[m[32m            exponent = String.valueOf(Integer.parseInt(exponent));[m
[32m+[m[32m        } else {[m
[32m+[m[32m            mantissa = result;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        int period = mantissa.indexOf('.');[m
[32m+[m[32m        if (period == -1) {[m
[32m+[m[32m            period = mantissa.indexOf(',');[m
[32m+[m[32m        }[m
[32m+[m[32m        if (period != -1) {[m
[32m+[m[32m            // Strip trailing 0's[m
[32m+[m[32m            while (mantissa.length() > 0 && mantissa.endsWith("0")) {[m
[32m+[m[32m                mantissa = mantissa.substring(0, mantissa.length() - 1);[m
[32m+[m[32m            }[m
[32m+[m[32m            if (mantissa.length() == period + 1) {[m
[32m+[m[32m                mantissa = mantissa.substring(0, mantissa.length() - 1);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (exponent != null) {[m
[32m+[m[32m            result = mantissa + 'e' + exponent;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            result = mantissa;[m
[32m+[m[32m        }[m
[32m+[m[32m        return result;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    static boolean isOperator(String text) {[m
[32m+[m[32m        return text.length() == 1 && isOperator(text.charAt(0));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    static boolean isOperator(char c) {[m
[32m+[m[32m        //plus minus times div[m
[32m+[m[32m        return "+\u2212\u00d7\u00f7/*".indexOf(c) != -1;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/MainActivity.java b/app/src/main/java/com/z/blast/workbox/MainActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..95b87c9[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/MainActivity.java[m
[36m@@ -0,0 +1,130 @@[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.app.ActionBar;[m
[32m+[m[32mimport android.app.Activity;[m
[32m+[m[32mimport android.content.ComponentName;[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.content.Intent;[m
[32m+[m[32mimport android.graphics.Paint;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.support.v7.app.AppCompatActivity;[m
[32m+[m[32mimport android.support.v7.widget.Toolbar;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.view.Menu;[m
[32m+[m[32mimport android.view.MenuItem;[m
[32m+[m[32mimport android.view.ViewGroup;[m
[32m+[m[32mimport android.widget.AbsListView;[m
[32m+[m[32mimport android.widget.AdapterView;[m
[32m+[m[32mimport android.widget.BaseAdapter;[m
[32m+[m[32mimport android.widget.GridView;[m
[32m+[m[32mimport android.widget.ImageView;[m
[32m+[m[32mimport android.widget.LinearLayout;[m
[32m+[m[32mimport android.widget.RelativeLayout;[m
[32m+[m[32mimport android.widget.SimpleAdapter;[m
[32m+[m[32mimport android.widget.TextView;[m
[32m+[m
[32m+[m[32mimport com.baidu.mapapi.SDKInitializer;[m
[32m+[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Random on 16.6.12.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class MainActivity extends Activity{[m
[32m+[m[32m    GridView grid;[m
[32m+[m[32m    int[] imageIds=new int[]{[m
[32m+[m[32m            R.drawable.calendar_128,[m
[32m+[m[32m            R.drawable.compass_128,[m
[32m+[m[32m            R.drawable.flashlight_128,[m
[32m+[m[32m            R.drawable.note_128,[m
[32m+[m[32m            R.drawable.ruler_128,[m
[32m+[m[32m            R.drawable.map_128,[m
[32m+[m[32m            R.drawable.calculator_128,[m
[32m+[m[32m            R.drawable.weather_128,[m
[32m+[m[32m            R.drawable.gradienter_128,[m
[32m+[m[32m            R.drawable.alarmclock_128[m
[32m+[m[32m    };[m
[32m+[m[32m    String[] names=new String[]{[m
[32m+[m[32m            "Calendar","Compass", "FlashLight",[m
[32m+[m[32m            "Note", "Ruler", "Map",[m
[32m+[m[32m            "Calculator", "Weather","Gradienter",[m
[32m+[m[32m            "AlarmClock",[m
[32m+[m[32m    };[m
[32m+[m[32m    @Override[m
[32m+[m[32m    protected void onCreate(Bundle savedInstanceState) {[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m[32m        SDKInitializer.initialize(getApplicationContext());[m
[32m+[m[32m        setContentView(R.layout.activity_main);[m
[32m+[m[32m        grid=(GridView)findViewById(R.id.grid01);[m
[32m+[m[32m        MyAdapter myAdapter=new MyAdapter();[m
[32m+[m[32m        grid.setAdapter(myAdapter);[m
[32m+[m[32m        MyClickListener myClickListener=new MyClickListener();[m
[32m+[m[32m        grid.setOnItemClickListener(myClickListener);[m
[32m+[m[32m    }[m
[32m+[m[32m    class MyClickListener implements GridView.OnItemClickListener{[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {[m
[32m+[m[32m            Intent intent;[m
[32m+[m[32m            if(position==0){[m
[32m+[m[32m                intent=new Intent(MainActivity.this,CalendarActivity.class);[m
[32m+[m[32m                MainActivity.this.startActivity(intent);[m
[32m+[m[32m            }else if(position==1){[m
[32m+[m[32m                intent=new Intent(MainActivity.this,CompassActivity.class);[m
[32m+[m[32m                MainActivity.this.startActivity(intent);[m
[32m+[m[32m            }else if(position==2){[m
[32m+[m[32m                intent=new Intent(MainActivity.this,FlashLightActivity.class);[m
[32m+[m[32m                MainActivity.this.startActivity(intent);[m
[32m+[m[32m            }else if(position==3){[m
[32m+[m[32m                intent=new Intent(MainActivity.this,noteActivity.class);[m
[32m+[m[32m                MainActivity.this.startActivity(intent);[m
[32m+[m[32m            }else if(position==4){[m
[32m+[m[32m                intent=new Intent(MainActivity.this,RulerActivity.class);[m
[32m+[m[32m                MainActivity.this.startActivity(intent);[m
[32m+[m[32m            }else if(position==5){[m
[32m+[m[32m                intent=new Intent(MainActivity.this,MapActivity.class);[m
[32m+[m[32m                MainActivity.this.startActivity(intent);[m
[32m+[m[32m            }else if(position==6){[m
[32m+[m[32m                intent=new Intent(MainActivity.this,Calculator.class);[m
[32m+[m[32m                MainActivity.this.startActivity(intent);[m
[32m+[m[32m            }else if(position==7){[m
[32m+[m[32m                intent=new Intent(MainActivity.this,WeatherActivity.class);[m
[32m+[m[32m                MainActivity.this.startActivity(intent);[m
[32m+[m[32m            }else if(position==8){[m
[32m+[m[32m                intent=new Intent(MainActivity.this,GradienterActivity.class);[m
[32m+[m[32m                MainActivity.this.startActivity(intent);[m
[32m+[m[32m            }else if(position==9){[m
[32m+[m[32m                intent=new Intent(MainActivity.this,AlarmActivity.class);[m
[32m+[m[32m                MainActivity.this.startActivity(intent);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    class MyAdapter extends BaseAdapter{[m
[32m+[m[32m        public int getCount(){[m
[32m+[m[32m            return 10;[m
[32m+[m[32m        }[m
[32m+[m[32m        public Object getItem(int position){[m
[32m+[m[32m            return null;[m
[32m+[m[32m        }[m
[32m+[m[32m        public long getItemId(int position){[m
[32m+[m[32m            return position;[m
[32m+[m[32m        }[m
[32m+[m[32m        public View getView(int position,View convertView,ViewGroup parent){[m
[32m+[m[32m            LinearLayout line=new LinearLayout(MainActivity.this);[m
[32m+[m[32m            line.setOrientation(LinearLayout.VERTICAL);[m
[32m+[m[32m            ImageView imageView=new ImageView(MainActivity.this);[m
[32m+[m[32m            TextView textView=new TextView(MainActivity.this);[m
[32m+[m[32m            textView.setText(names[position]);[m
[32m+[m[32m            imageView.setImageResource(imageIds[position]);[m
[32m+[m[32m            imageView.setLayoutParams(new ViewGroup.LayoutParams(128, 128));[m
[32m+[m[32m            RelativeLayout.LayoutParams layoutParams=new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,[m
[32m+[m[32m                    ViewGroup.LayoutParams.WRAP_CONTENT);[m
[32m+[m[32m            layoutParams.addRule(RelativeLayout.CENTER_IN_PARENT);[m
[32m+[m[32m            textView.setLayoutParams(layoutParams);[m
[32m+[m[32m            textView.setId(position);[m
[32m+[m[32m            line.setGravity(0x11);[m
[32m+[m[32m            line.addView(imageView);[m
[32m+[m[32m            line.addView(textView);[m
[32m+[m[32m            return line;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/MapActivity.java b/app/src/main/java/com/z/blast/workbox/MapActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..08baa54[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/MapActivity.java[m
[36m@@ -0,0 +1,105 @@[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.app.Activity;[m
[32m+[m[32mimport android.app.AlertDialog;[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.os.Vibrator;[m
[32m+[m[32mimport android.util.Log;[m
[32m+[m[32mimport android.widget.Toast;[m
[32m+[m
[32m+[m[32mimport com.baidu.location.BDLocation;[m
[32m+[m[32mimport com.baidu.location.BDLocationListener;[m
[32m+[m[32mimport com.baidu.location.BDNotifyListener;[m
[32m+[m[32mimport com.baidu.location.LocationClient;[m
[32m+[m[32mimport com.baidu.location.LocationClientOption;[m
[32m+[m[32mimport com.baidu.location.Poi;[m
[32m+[m[32mimport com.baidu.mapapi.SDKInitializer;[m
[32m+[m[32mimport com.baidu.mapapi.map.BaiduMap;[m
[32m+[m[32mimport com.baidu.mapapi.map.BitmapDescriptor;[m
[32m+[m[32mimport com.baidu.mapapi.map.BitmapDescriptorFactory;[m
[32m+[m[32mimport com.baidu.mapapi.map.MapStatus;[m
[32m+[m[32mimport com.baidu.mapapi.map.MapStatusUpdate;[m
[32m+[m[32mimport com.baidu.mapapi.map.MapStatusUpdateFactory;[m
[32m+[m[32mimport com.baidu.mapapi.map.MapView;[m
[32m+[m[32mimport com.baidu.mapapi.map.MarkerOptions;[m
[32m+[m[32mimport com.baidu.mapapi.map.MyLocationData;[m
[32m+[m[32mimport com.baidu.mapapi.map.OverlayOptions;[m
[32m+[m[32mimport com.baidu.mapapi.model.LatLng;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m[32mimport java.util.Map;[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Random on 16.6.12.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class MapActivity extends Activity {[m
[32m+[m[32m    public LocationClient mLocationClient = null;[m
[32m+[m[32m    public BDLocationListener myListener = new MyLocationListener();[m
[32m+[m[32m    public BDNotifyListener mNotifyer;[m
[32m+[m[32m    public Vibrator mVibrator;[m
[32m+[m[32m    MapView myMapView = null;[m
[32m+[m[32m    protected void onCreate(Bundle savedInstanceState) {[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m[32m        SDKInitializer.initialize(getApplicationContext());[m
[32m+[m[32m        setContentView(R.layout.map_main);[m
[32m+[m[32m        mLocationClient = new LocationClient(getApplicationContext());[m
[32m+[m[32m        mLocationClient.registerLocationListener(myListener);[m
[32m+[m[32m        myMapView = (MapView) findViewById(R.id.bmapView);[m
[32m+[m[32m        BaiduMap mBaiduMap = myMapView.getMap();[m
[32m+[m[32m        mBaiduMap.setMapType(BaiduMap.MAP_TYPE_NORMAL);[m
[32m+[m[32m        this.initLocation();[m
[32m+[m[32m        mLocationClient.start();[m
[32m+[m[32m    }[m
[32m+[m[32m    protected void onDestroy() {[m
[32m+[m[32m        super.onDestroy();[m
[32m+[m[32m        myMapView.onDestroy();[m
[32m+[m[32m        mLocationClient.unRegisterLocationListener(myListener);[m
[32m+[m[32m        mLocationClient.removeNotifyEvent(mNotifyer);[m
[32m+[m[32m        mLocationClient.stop();[m
[32m+[m[32m    }[m
[32m+[m[32m    protected void onResume() {[m
[32m+[m[32m        super.onResume();[m
[32m+[m[32m        myMapView.onResume();[m
[32m+[m[32m    }[m
[32m+[m[32m    protected void onPause() {[m
[32m+[m[32m        super.onPause();[m
[32m+[m[32m        myMapView.onPause();[m
[32m+[m[32m    }[m
[32m+[m[32m    private void initLocation(){[m
[32m+[m[32m        LocationClientOption option = new LocationClientOption();[m
[32m+[m[32m        option.setLocationMode(LocationClientOption.LocationMode.Hight_Accuracy);//Battery_Saving,Device_Sensors[m
[32m+[m[32m        option.setCoorType("bd09ll");[m
[32m+[m[32m        //国测局经纬度坐标系(gcj02)，百度墨卡托坐标系(bd09)，百度经纬度坐标系(bd09ll)[m
[32m+[m[32m        option.setScanSpan(5000);[m
[32m+[m[32m        option.setIsNeedAddress(true);[m
[32m+[m[32m        option.setOpenGps(true);[m
[32m+[m[32m        option.setLocationNotify(true);[m
[32m+[m[32m        option.setNeedDeviceDirect(true);[m
[32m+[m[32m        mLocationClient.setLocOption(option);[m
[32m+[m[32m    }[m
[32m+[m[32m    public class MyLocationListener implements BDLocationListener {[m
[32m+[m[32m        public void onReceiveLocation(BDLocation location) {[m
[32m+[m[32m            StringBuffer sb = new StringBuffer(256);[m
[32m+[m[32m            sb.append("latitude:"+location.getLatitude());[m
[32m+[m[32m            sb.append("\n"+"longitude:"+location.getLongitude());[m
[32m+[m[32m            sb.append("\n"+"radius:"+location.getRadius());[m
[32m+[m[32m            sb.append("\n"+"address:"+location.getAddrStr());[m
[32m+[m[32m            Log.i("BaiduLocationApiDem", sb.toString());[m
[32m+[m[32m            LatLng cenpt = new LatLng(location.getLatitude(),location.getLongitude());[m
[32m+[m[32m            MapStatus myMapStatus = new MapStatus.Builder().target(cenpt).zoom(17).build();//zoom表示缩放级别[m
[32m+[m[32m            MapStatusUpdate myMapStatusUpdate = MapStatusUpdateFactory.newMapStatus(myMapStatus);[m
[32m+[m[32m            myMapView.getMap().setMapStatus(myMapStatusUpdate);[m
[32m+[m[32m            BitmapDescriptor bitmap = BitmapDescriptorFactory.fromResource(R.drawable.flag_24);[m
[32m+[m[32m            OverlayOptions option = new MarkerOptions().position(cenpt).icon(bitmap);[m
[32m+[m[32m            myMapView.getMap().clear();[m
[32m+[m[32m            myMapView.getMap().addOverlay(option);[m
[32m+[m[32m            Toast.makeText(MapActivity.this, location.getAddrStr(), Toast.LENGTH_LONG).show();[m
[32m+[m[32m            /*AlertDialog.Builder builder=new AlertDialog.Builder(MapActivity.this)[m
[32m+[m[32m                    .setTitle("Location")[m
[32m+[m[32m                    .setIcon(R.drawable.flag_24)[m
[32m+[m[32m                    .setMessage(location.getAddrStr());[m
[32m+[m[32m            builder.create().show();*/[m
[32m+[m[32m            mLocationClient.stop();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/MyEditText.java b/app/src/main/java/com/z/blast/workbox/MyEditText.java[m
[1mnew file mode 100644[m
[1mindex 0000000..5342443[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/MyEditText.java[m
[36m@@ -0,0 +1,49 @@[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.graphics.Canvas;[m
[32m+[m[32mimport android.graphics.Color;[m
[32m+[m[32mimport android.graphics.Paint;[m
[32m+[m[32mimport android.util.AttributeSet;[m
[32m+[m[32mimport android.widget.EditText;[m
[32m+[m
[32m+[m[32mimport com.baidu.mapapi.map.Stroke;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Random on 16.6.15.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class MyEditText extends EditText{[m
[32m+[m[32m    public int lineColor;[m
[32m+[m[32m    public float lineWidth;[m
[32m+[m[32m    public MyEditText(Context context,AttributeSet attributeSet){[m
[32m+[m[32m        super(context,attributeSet);[m
[32m+[m[32m        lineColor= Color.BLACK;[m
[32m+[m[32m        lineWidth=0.5f;[m
[32m+[m[32m    }[m
[32m+[m[32m    public MyEditText(Context context,int color,float width){[m
[32m+[m[32m        super(context);[m
[32m+[m[32m        lineColor=color;[m
[32m+[m[32m        lineWidth=width;[m
[32m+[m[32m    }[m
[32m+[m[32m    protected void onDraw(Canvas canvas){[m
[32m+[m[32m        super.onDraw(canvas);[m
[32m+[m[32m        Paint paint=new Paint();[m
[32m+[m[32m        paint.setStyle(Paint.Style.FILL);[m
[32m+[m[32m        paint.setColor(lineColor);[m
[32m+[m[32m        paint.setStrokeWidth(lineWidth);[m
[32m+[m[32m        paint.setAntiAlias(true);[m
[32m+[m
[32m+[m[32m        int padL=this.getPaddingLeft();[m
[32m+[m[32m        int padR=this.getPaddingRight();[m
[32m+[m[32m        int padT=this.getPaddingTop();[m
[32m+[m[32m        int lines=this.getLineCount();[m
[32m+[m[32m        float size=this.getTextSize();[m
[32m+[m[32m        float baseTop=padT+size/6;//从上向下第一条线的位置[m
[32m+[m[32m        float gap=this.getLineHeight();[m
[32m+[m
[32m+[m[32m        for(int i=1;i<=lines;i++){[m
[32m+[m[32m            canvas.drawLine(padL,baseTop+gap*i,this.getWidth()-padR,baseTop+gap*i,paint);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/PanelSwitcher.java b/app/src/main/java/com/z/blast/workbox/PanelSwitcher.java[m
[1mnew file mode 100644[m
[1mindex 0000000..6d21934[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/PanelSwitcher.java[m
[36m@@ -0,0 +1,179 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright (C) 2008 The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *      http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.util.AttributeSet;[m
[32m+[m[32mimport android.view.GestureDetector;[m
[32m+[m[32mimport android.view.MotionEvent;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.view.animation.Animation;[m
[32m+[m[32mimport android.view.animation.Animation.AnimationListener;[m
[32m+[m[32mimport android.view.animation.TranslateAnimation;[m
[32m+[m[32mimport android.widget.FrameLayout;[m
[32m+[m
[32m+[m[32mclass PanelSwitcher extends FrameLayout implements AnimationListener {[m
[32m+[m[32m    private static final int MAJOR_MOVE = 60;[m
[32m+[m[32m    private static final int ANIM_DURATION = 400;[m
[32m+[m
[32m+[m[32m    private GestureDetector mGestureDetector;[m
[32m+[m[32m    private int mCurrentView;[m
[32m+[m[32m    private View mChildren[] = new View[0];[m
[32m+[m
[32m+[m[32m    private int mWidth;[m
[32m+[m[32m    private TranslateAnimation inLeft;[m
[32m+[m[32m    private TranslateAnimation outLeft;[m
[32m+[m
[32m+[m[32m    private TranslateAnimation inRight;[m
[32m+[m[32m    private TranslateAnimation outRight;[m
[32m+[m
[32m+[m[32m    private static final int LEFT  = 1;[m
[32m+[m[32m    private static final int RIGHT = 2;[m
[32m+[m[32m    private int mPreviousMove;[m
[32m+[m
[32m+[m[32m    public interface Listener {[m
[32m+[m[32m        void onChange();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private Listener mListener;[m
[32m+[m
[32m+[m[32m    public PanelSwitcher(Context context, AttributeSet attrs) {[m
[32m+[m[32m        super(context, attrs);[m
[32m+[m[32m        mCurrentView = 0;[m
[32m+[m[32m        mGestureDetector = new GestureDetector(context, new GestureDetector.SimpleOnGestureListener() {[m
[32m+[m[32m                @Override[m
[32m+[m[32m                public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX,[m
[32m+[m[32m                                       float velocityY) {[m
[32m+[m[32m                    int dx = (int) (e2.getX() - e1.getX());[m
[32m+[m
[32m+[m[32m                    // don't accept the fling if it's too short[m
[32m+[m[32m                    // as it may conflict with a button push[m
[32m+[m[32m                    if (Math.abs(dx) > MAJOR_MOVE && Math.abs(velocityX) > Math.abs(velocityY)) {[m
[32m+[m[32m                        if (velocityX > 0) {[m
[32m+[m[32m                            moveRight();[m
[32m+[m[32m                        } else {[m
[32m+[m[32m                            moveLeft();[m
[32m+[m[32m                        }[m
[32m+[m[32m                        return true;[m
[32m+[m[32m                    } else {[m
[32m+[m[32m                        return false;[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m            });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setListener(Listener listener) {[m
[32m+[m[32m        this.mListener = listener;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void setCurrentIndex(int current) {[m
[32m+[m[32m        boolean changed = mCurrentView != current;[m
[32m+[m[32m        mCurrentView = current;[m
[32m+[m[32m        updateCurrentView();[m
[32m+[m[32m        if (changed && mListener != null) {[m
[32m+[m[32m            mListener.onChange();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void updateCurrentView() {[m
[32m+[m[32m        for (int i = mChildren.length-1; i >= 0 ; --i) {[m
[32m+[m[32m            mChildren[i].setVisibility(i==mCurrentView ? View.VISIBLE : View.GONE);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onSizeChanged(int w, int h, int oldW, int oldH) {[m
[32m+[m[32m        mWidth = w;[m
[32m+[m[32m        inLeft   = new TranslateAnimation(mWidth, 0, 0, 0);[m
[32m+[m[32m        inLeft.setAnimationListener(this);[m
[32m+[m[32m        outLeft  = new TranslateAnimation(0, -mWidth, 0, 0);[m
[32m+[m[32m        inRight  = new TranslateAnimation(-mWidth, 0, 0, 0);[m
[32m+[m[32m        inRight.setAnimationListener(this);[m
[32m+[m[32m        outRight = new TranslateAnimation(0, mWidth, 0, 0);[m
[32m+[m
[32m+[m[32m        inLeft.setDuration(ANIM_DURATION);[m
[32m+[m[32m        outLeft.setDuration(ANIM_DURATION);[m
[32m+[m[32m        inRight.setDuration(ANIM_DURATION);[m
[32m+[m[32m        outRight.setDuration(ANIM_DURATION);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    protected void onFinishInflate() {[m
[32m+[m[32m        int count = getChildCount();[m
[32m+[m[32m        mChildren = new View[count];[m
[32m+[m[32m        for (int i = 0; i < count; ++i) {[m
[32m+[m[32m            mChildren[i] = getChildAt(i);[m
[32m+[m[32m        }[m
[32m+[m[32m        updateCurrentView();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean onTouchEvent(MotionEvent event) {[m
[32m+[m[32m        mGestureDetector.onTouchEvent(event);[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean onInterceptTouchEvent(MotionEvent event) {[m
[32m+[m[32m        return mGestureDetector.onTouchEvent(event);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void moveLeft() {[m
[32m+[m[32m        //  <--[m
[32m+[m[32m        if (mCurrentView < mChildren.length - 1 && mPreviousMove != LEFT) {[m
[32m+[m[32m            mChildren[mCurrentView+1].setVisibility(View.VISIBLE);[m
[32m+[m[32m            mChildren[mCurrentView+1].startAnimation(inLeft);[m
[32m+[m[32m            mChildren[mCurrentView].startAnimation(outLeft);[m
[32m+[m[32m            mChildren[mCurrentView].setVisibility(View.GONE);[m
[32m+[m
[32m+[m[32m            mCurrentView++;[m
[32m+[m[32m            mPreviousMove = LEFT;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    void moveRight() {[m
[32m+[m[32m        //  -->[m
[32m+[m[32m        if (mCurrentView > 0 && mPreviousMove != RIGHT) {[m
[32m+[m[32m            mChildren[mCurrentView-1].setVisibility(View.VISIBLE);[m
[32m+[m[32m            mChildren[mCurrentView-1].startAnimation(inRight);[m
[32m+[m[32m            mChildren[mCurrentView].startAnimation(outRight);[m
[32m+[m[32m            mChildren[mCurrentView].setVisibility(View.GONE);[m
[32m+[m
[32m+[m[32m            mCurrentView--;[m
[32m+[m[32m            mPreviousMove = RIGHT;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    int getCurrentIndex() {[m
[32m+[m[32m        return mCurrentView;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onAnimationRepeat(Animation animation) {[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onAnimationStart(Animation animation) {[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onAnimationEnd(Animation animation) {[m
[32m+[m[32m        if (mListener != null) {[m
[32m+[m[32m            mListener.onChange();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/Persist.java b/app/src/main/java/com/z/blast/workbox/Persist.java[m
[1mnew file mode 100644[m
[1mindex 0000000..bd6497c[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/Persist.java[m
[36m@@ -0,0 +1,81 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright (C) 2008 The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *      http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport java.io.InputStream;[m
[32m+[m[32mimport java.io.OutputStream;[m
[32m+[m[32mimport java.io.IOException;[m
[32m+[m[32mimport java.io.FileNotFoundException;[m
[32m+[m[32mimport java.io.BufferedInputStream;[m
[32m+[m[32mimport java.io.BufferedOutputStream;[m
[32m+[m[32mimport java.io.DataInputStream;[m
[32m+[m[32mimport java.io.DataOutputStream;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m
[32m+[m[32mclass Persist {[m
[32m+[m[32m    private static final int LAST_VERSION = 2;[m
[32m+[m[32m    private static final String FILE_NAME = "calculator.data";[m
[32m+[m[32m    private Context mContext;[m
[32m+[m
[32m+[m[32m    History history = new History();[m
[32m+[m[32m    private int mDeleteMode;[m
[32m+[m
[32m+[m[32m    Persist(Context context) {[m
[32m+[m[32m        this.mContext = context;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setDeleteMode(int mode) {[m
[32m+[m[32m        mDeleteMode = mode;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public int getDeleteMode() {[m
[32m+[m[32m        return mDeleteMode;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void load() {[m
[32m+[m[32m        try {[m
[32m+[m[32m            InputStream is = new BufferedInputStream(mContext.openFileInput(FILE_NAME), 8192);[m
[32m+[m[32m            DataInputStream in = new DataInputStream(is);[m
[32m+[m[32m            int version = in.readInt();[m
[32m+[m[32m            if (version > 1) {[m
[32m+[m[32m                mDeleteMode = in.readInt();[m
[32m+[m[32m            } else if (version > LAST_VERSION) {[m
[32m+[m[32m                throw new IOException("data version " + version + "; expected " + LAST_VERSION);[m
[32m+[m[32m            }[m
[32m+[m[32m            history = new History(version, in);[m
[32m+[m[32m            in.close();[m
[32m+[m[32m        } catch (FileNotFoundException e) {[m
[32m+[m[32m            Calculator.log("" + e);[m
[32m+[m[32m        } catch (IOException e) {[m
[32m+[m[32m            Calculator.log("" + e);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void save() {[m
[32m+[m[32m        try {[m
[32m+[m[32m            OutputStream os = new BufferedOutputStream(mContext.openFileOutput(FILE_NAME, 0), 8192);[m
[32m+[m[32m            DataOutputStream out = new DataOutputStream(os);[m
[32m+[m[32m            out.writeInt(LAST_VERSION);[m
[32m+[m[32m            out.writeInt(mDeleteMode);[m
[32m+[m[32m            history.write(out);[m
[32m+[m[32m            out.close();[m
[32m+[m[32m        } catch (IOException e) {[m
[32m+[m[32m            Calculator.log("" + e);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/RulerActivity.java b/app/src/main/java/com/z/blast/workbox/RulerActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..fab66d0[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/RulerActivity.java[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.app.Activity;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Random on 16.6.12.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class RulerActivity extends Activity {[m
[32m+[m[32m    public void onCreate(Bundle savedInstanceState){[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m[32m        setContentView(R.layout.ruler_main);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/RulerText.java b/app/src/main/java/com/z/blast/workbox/RulerText.java[m
[1mnew file mode 100644[m
[1mindex 0000000..f162adc[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/RulerText.java[m
[36m@@ -0,0 +1,47 @@[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.graphics.Canvas;[m
[32m+[m[32mimport android.graphics.Color;[m
[32m+[m[32mimport android.graphics.Paint;[m
[32m+[m[32mimport android.util.AttributeSet;[m
[32m+[m[32mimport android.view.Gravity;[m
[32m+[m[32mimport android.widget.TextView;[m
[32m+[m
[32m+[m[32mimport com.baidu.mapapi.map.Stroke;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Random on 16.6.12.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class RulerText extends TextView {[m
[32m+[m[32m    public RulerText(Context context, AttributeSet attrs) {[m
[32m+[m[32m        super(context, attrs);[m
[32m+[m[32m        init();[m
[32m+[m[32m    }[m
[32m+[m[32m    public RulerText(Context context) {[m
[32m+[m[32m        super(context);[m
[32m+[m[32m        init();[m
[32m+[m[32m    }[m
[32m+[m[32m    private void init(){[m
[32m+[m[32m        setGravity(Gravity.BOTTOM);[m
[32m+[m[32m    }[m
[32m+[m[32m    public void draw(Canvas canvas){[m
[32m+[m[32m        super.draw(canvas);[m
[32m+[m[32m        float mmWidth=((float)getWidth())/10;[m
[32m+[m[32m        Paint paint=new Paint();[m
[32m+[m[32m        paint.setStyle(Paint.Style.STROKE);[m
[32m+[m[32m        paint.setStrokeWidth(2f);[m
[32m+[m[32m        paint.setTextAlign(Paint.Align.CENTER);[m
[32m+[m[32m        paint.setAntiAlias(true);[m
[32m+[m[32m        paint.setDither(true);[m
[32m+[m[32m        for(int i=0;i<10;i++){[m
[32m+[m[32m            if(i==0){[m
[32m+[m[32m                paint.setColor(Color.RED);[m
[32m+[m[32m                canvas.drawLine(i * mmWidth, 0, i * mmWidth, 3 * mmWidth, paint);[m
[32m+[m[32m            }else{[m
[32m+[m[32m                paint.setColor(Color.WHITE);[m
[32m+[m[32m                canvas.drawLine(i*mmWidth,0,i*mmWidth,2*mmWidth,paint);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/WeatherActivity.java b/app/src/main/java/com/z/blast/workbox/WeatherActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..3df076e[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/WeatherActivity.java[m
[36m@@ -0,0 +1,26 @@[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.app.Activity;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.webkit.WebChromeClient;[m
[32m+[m[32mimport android.webkit.WebView;[m
[32m+[m[32mimport android.webkit.WebViewClient;[m
[32m+[m
[32m+[m[32mpublic class WeatherActivity extends Activity{[m
[32m+[m[32m    private WebView webView;	//声明WebView组件的对象[m
[32m+[m[32m    @Override[m
[32m+[m[32m    protected void onCreate(Bundle savedInstanceState) {[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m[32m        setContentView(R.layout.weather_main);[m
[32m+[m[32m        webView=(WebView)findViewById(R.id.webView1);[m
[32m+[m[32m        webView.getSettings().setJavaScriptEnabled(true);[m
[32m+[m[32m        webView.setWebChromeClient(new WebChromeClient());[m
[32m+[m[32m        webView.setWebViewClient(new WebViewClient());[m
[32m+[m[32m        webView.loadUrl("http://m.weather.com.cn/mweather/101210101.shtml");[m
[32m+[m[32m        webView.setInitialScale(57*4);[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[32m    private void openUrl(String id){[m
[32m+[m[32m        webView.loadUrl("http://m.weather.com.cn/mweather/"+id+".shtml");[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/alert/AlarmAlertActivity.java b/app/src/main/java/com/z/blast/workbox/alert/AlarmAlertActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..b1ce07e[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/alert/AlarmAlertActivity.java[m
[36m@@ -0,0 +1,283 @@[m
[32m+[m[32m/* Copyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m * http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m */[m
[32m+[m[32mpackage com.z.blast.workbox.alert;[m
[32m+[m
[32m+[m[32mimport android.app.Activity;[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.graphics.Color;[m
[32m+[m[32mimport android.media.AudioManager;[m
[32m+[m[32mimport android.media.MediaPlayer;[m
[32m+[m[32mimport android.net.Uri;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.os.Vibrator;[m
[32m+[m[32mimport android.telephony.PhoneStateListener;[m
[32m+[m[32mimport android.telephony.TelephonyManager;[m
[32m+[m[32mimport android.util.Log;[m
[32m+[m[32mimport android.view.HapticFeedbackConstants;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.view.View.OnClickListener;[m
[32m+[m[32mimport android.view.Window;[m
[32m+[m[32mimport android.view.WindowManager;[m
[32m+[m[32mimport android.widget.Button;[m
[32m+[m[32mimport android.widget.TextView;[m
[32m+[m
[32m+[m[32mimport com.z.blast.workbox.Alarm;[m
[32m+[m[32mimport com.z.blast.workbox.R;[m
[32m+[m
[32m+[m[32mpublic class AlarmAlertActivity extends Activity implements OnClickListener {[m
[32m+[m
[32m+[m	[32mprivate Alarm alarm;[m
[32m+[m	[32mprivate MediaPlayer mediaPlayer;[m
[32m+[m
[32m+[m	[32mprivate StringBuilder answerBuilder = new StringBuilder();[m
[32m+[m
[32m+[m	[32mprivate MathProblem mathProblem;[m
[32m+[m	[32mprivate Vibrator vibrator;[m
[32m+[m
[32m+[m	[32mprivate boolean alarmActive;[m
[32m+[m
[32m+[m	[32mprivate TextView problemView;[m
[32m+[m	[32mprivate TextView answerView;[m
[32m+[m	[32mprivate String answerString;[m
[32m+[m[41m	[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void onCreate(Bundle savedInstanceState) {[m
[32m+[m		[32msuper.onCreate(savedInstanceState);[m
[32m+[m		[32mfinal Window window = getWindow();[m
[32m+[m		[32mwindow.addFlags(WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED[m
[32m+[m				[32m| WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD);[m
[32m+[m		[32mwindow.addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON[m
[32m+[m				[32m| WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON);[m
[32m+[m
[32m+[m		[32msetContentView(R.layout.alarm_alert);[m
[32m+[m
[32m+[m		[32mBundle bundle = this.getIntent().getExtras();[m
[32m+[m		[32malarm = (Alarm) bundle.getSerializable("alarm");[m
[32m+[m
[32m+[m		[32mthis.setTitle(alarm.getAlarmName());[m
[32m+[m
[32m+[m		[32mswitch (alarm.getDifficulty()) {[m
[32m+[m		[32mcase EASY:[m
[32m+[m			[32mmathProblem = new MathProblem(3);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase MEDIUM:[m
[32m+[m			[32mmathProblem = new MathProblem(4);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase HARD:[m
[32m+[m			[32mmathProblem = new MathProblem(5);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32manswerString = String.valueOf(mathProblem.getAnswer());[m
[32m+[m		[32mif (answerString.endsWith(".0")) {[m
[32m+[m			[32manswerString = answerString.substring(0, answerString.length() - 2);[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mproblemView = (TextView) findViewById(R.id.textView1);[m
[32m+[m		[32mproblemView.setText(mathProblem.toString());[m
[32m+[m
[32m+[m		[32manswerView = (TextView) findViewById(R.id.textView2);[m
[32m+[m		[32manswerView.setText("= ?");[m
[32m+[m
[32m+[m		[32m((Button) findViewById(R.id.Button0)).setOnClickListener(this);[m
[32m+[m		[32m((Button) findViewById(R.id.Button1)).setOnClickListener(this);[m
[32m+[m		[32m((Button) findViewById(R.id.Button2)).setOnClickListener(this);[m
[32m+[m		[32m((Button) findViewById(R.id.Button3)).setOnClickListener(this);[m
[32m+[m		[32m((Button) findViewById(R.id.Button4)).setOnClickListener(this);[m
[32m+[m		[32m((Button) findViewById(R.id.Button5)).setOnClickListener(this);[m
[32m+[m		[32m((Button) findViewById(R.id.Button6)).setOnClickListener(this);[m
[32m+[m		[32m((Button) findViewById(R.id.Button7)).setOnClickListener(this);[m
[32m+[m		[32m((Button) findViewById(R.id.Button8)).setOnClickListener(this);[m
[32m+[m		[32m((Button) findViewById(R.id.Button9)).setOnClickListener(this);[m
[32m+[m		[32m((Button) findViewById(R.id.Button_clear)).setOnClickListener(this);[m
[32m+[m		[32m((Button) findViewById(R.id.Button_decimal)).setOnClickListener(this);[m
[32m+[m		[32m((Button) findViewById(R.id.Button_minus)).setOnClickListener(this);[m
[32m+[m
[32m+[m		[32mTelephonyManager telephonyManager = (TelephonyManager) this[m
[32m+[m				[32m.getSystemService(Context.TELEPHONY_SERVICE);[m
[32m+[m
[32m+[m		[32mPhoneStateListener phoneStateListener = new PhoneStateListener() {[m
[32m+[m			[32m@Override[m
[32m+[m			[32mpublic void onCallStateChanged(int state, String incomingNumber) {[m
[32m+[m				[32mswitch (state) {[m
[32m+[m				[32mcase TelephonyManager.CALL_STATE_RINGING:[m
[32m+[m					[32mLog.d(getClass().getSimpleName(), "Incoming call: "[m
[32m+[m							[32m+ incomingNumber);[m
[32m+[m					[32mtry {[m
[32m+[m						[32mmediaPlayer.pause();[m
[32m+[m					[32m} catch (IllegalStateException e) {[m
[32m+[m
[32m+[m					[32m}[m
[32m+[m					[32mbreak;[m
[32m+[m				[32mcase TelephonyManager.CALL_STATE_IDLE:[m
[32m+[m					[32mLog.d(getClass().getSimpleName(), "Call State Idle");[m
[32m+[m					[32mtry {[m
[32m+[m						[32mmediaPlayer.start();[m
[32m+[m					[32m} catch (IllegalStateException e) {[m
[32m+[m
[32m+[m					[32m}[m
[32m+[m					[32mbreak;[m
[32m+[m				[32m}[m
[32m+[m				[32msuper.onCallStateChanged(state, incomingNumber);[m
[32m+[m			[32m}[m
[32m+[m		[32m};[m
[32m+[m
[32m+[m		[32mtelephonyManager.listen(phoneStateListener,[m
[32m+[m				[32mPhoneStateListener.LISTEN_CALL_STATE);[m
[32m+[m
[32m+[m		[32m// Toast.makeText(this, answerString, Toast.LENGTH_LONG).show();[m
[32m+[m
[32m+[m		[32mstartAlarm();[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void onResume() {[m
[32m+[m		[32msuper.onResume();[m
[32m+[m		[32malarmActive = true;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprivate void startAlarm() {[m
[32m+[m
[32m+[m		[32mif (alarm.getAlarmTonePath() != "") {[m
[32m+[m			[32mmediaPlayer = new MediaPlayer();[m
[32m+[m			[32mif (alarm.getVibrate()) {[m
[32m+[m				[32mvibrator = (Vibrator) getSystemService(VIBRATOR_SERVICE);[m
[32m+[m				[32mlong[] pattern = { 1000, 200, 200, 200 };[m
[32m+[m				[32mvibrator.vibrate(pattern, 0);[m
[32m+[m			[32m}[m
[32m+[m			[32mtry {[m
[32m+[m				[32mmediaPlayer.setVolume(1.0f, 1.0f);[m
[32m+[m				[32mmediaPlayer.setDataSource(this,[m
[32m+[m						[32mUri.parse(alarm.getAlarmTonePath()));[m
[32m+[m				[32mmediaPlayer.setAudioStreamType(AudioManager.STREAM_ALARM);[m
[32m+[m				[32mmediaPlayer.setLooping(true);[m
[32m+[m				[32mmediaPlayer.prepare();[m
[32m+[m				[32mmediaPlayer.start();[m
[32m+[m
[32m+[m			[32m} catch (Exception e) {[m
[32m+[m				[32mmediaPlayer.release();[m
[32m+[m				[32malarmActive = false;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/*[m
[32m+[m	[32m * (non-Javadoc)[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m * @see android.app.Activity#onBackPressed()[m
[32m+[m	[32m */[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void onBackPressed() {[m
[32m+[m		[32mif (!alarmActive)[m
[32m+[m			[32msuper.onBackPressed();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/*[m
[32m+[m	[32m * (non-Javadoc)[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m * @see android.app.Activity#onPause()[m
[32m+[m	[32m */[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void onPause() {[m
[32m+[m		[32msuper.onPause();[m
[32m+[m		[32mStaticWakeLock.lockOff(this);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void onDestroy() {[m
[32m+[m		[32mtry {[m
[32m+[m			[32mif (vibrator != null)[m
[32m+[m				[32mvibrator.cancel();[m
[32m+[m		[32m} catch (Exception e) {[m
[32m+[m
[32m+[m		[32m}[m
[32m+[m		[32mtry {[m
[32m+[m			[32mmediaPlayer.stop();[m
[32m+[m		[32m} catch (Exception e) {[m
[32m+[m
[32m+[m		[32m}[m
[32m+[m		[32mtry {[m
[32m+[m			[32mmediaPlayer.release();[m
[32m+[m		[32m} catch (Exception e) {[m
[32m+[m
[32m+[m		[32m}[m
[32m+[m		[32msuper.onDestroy();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void onClick(View v) {[m
[32m+[m		[32mif (!alarmActive)[m
[32m+[m			[32mreturn;[m
[32m+[m		[32mString button = (String) v.getTag();[m
[32m+[m		[32mv.performHapticFeedback(HapticFeedbackConstants.VIRTUAL_KEY);[m
[32m+[m		[32mif (button.equalsIgnoreCase("clear")) {[m
[32m+[m			[32mif (answerBuilder.length() > 0) {[m
[32m+[m				[32manswerBuilder.setLength(answerBuilder.length() - 1);[m
[32m+[m				[32manswerView.setText(answerBuilder.toString());[m
[32m+[m			[32m}[m
[32m+[m		[32m} else if (button.equalsIgnoreCase(".")) {[m
[32m+[m			[32mif (!answerBuilder.toString().contains(button)) {[m
[32m+[m				[32mif (answerBuilder.length() == 0)[m
[32m+[m					[32manswerBuilder.append(0);[m
[32m+[m				[32manswerBuilder.append(button);[m
[32m+[m				[32manswerView.setText(answerBuilder.toString());[m
[32m+[m			[32m}[m
[32m+[m		[32m} else if (button.equalsIgnoreCase("-")) {[m
[32m+[m			[32mif (answerBuilder.length() == 0) {[m
[32m+[m				[32manswerBuilder.append(button);[m
[32m+[m				[32manswerView.setText(answerBuilder.toString());[m
[32m+[m			[32m}[m
[32m+[m		[32m} else {[m
[32m+[m			[32manswerBuilder.append(button);[m
[32m+[m			[32manswerView.setText(answerBuilder.toString());[m
[32m+[m			[32mif (isAnswerCorrect()) {[m
[32m+[m				[32malarmActive = false;[m
[32m+[m				[32mif (vibrator != null)[m
[32m+[m					[32mvibrator.cancel();[m
[32m+[m				[32mtry {[m
[32m+[m					[32mmediaPlayer.stop();[m
[32m+[m				[32m} catch (IllegalStateException ise) {[m
[32m+[m
[32m+[m				[32m}[m
[32m+[m				[32mtry {[m
[32m+[m					[32mmediaPlayer.release();[m
[32m+[m				[32m} catch (Exception e) {[m
[32m+[m
[32m+[m				[32m}[m
[32m+[m				[32mthis.finish();[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32mif (answerView.getText().length() >= answerString.length()[m
[32m+[m				[32m&& !isAnswerCorrect()) {[m
[32m+[m			[32manswerView.setTextColor(Color.RED);[m
[32m+[m		[32m} else {[m
[32m+[m			[32manswerView.setTextColor(Color.BLACK);[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic boolean isAnswerCorrect() {[m
[32m+[m		[32mboolean correct = false;[m
[32m+[m		[32mtry {[m
[32m+[m			[32mcorrect = mathProblem.getAnswer() == Float.parseFloat(answerBuilder[m
[32m+[m					[32m.toString());[m
[32m+[m		[32m} catch (NumberFormatException e) {[m
[32m+[m			[32mreturn false;[m
[32m+[m		[32m} catch (Exception e) {[m
[32m+[m			[32me.printStackTrace();[m
[32m+[m			[32mreturn false;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn correct;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/alert/AlarmAlertBroadcastReciever.java b/app/src/main/java/com/z/blast/workbox/alert/AlarmAlertBroadcastReciever.java[m
[1mnew file mode 100644[m
[1mindex 0000000..7a2a169[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/alert/AlarmAlertBroadcastReciever.java[m
[36m@@ -0,0 +1,46 @@[m
[32m+[m[32m/* Copyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m * http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m */[m
[32m+[m[32mpackage com.z.blast.workbox.alert;[m
[32m+[m
[32m+[m[32mimport android.content.BroadcastReceiver;[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.content.Intent;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m
[32m+[m[32mimport com.z.blast.workbox.Alarm;[m
[32m+[m[32mimport com.z.blast.workbox.service.AlarmServiceBroadcastReciever;[m
[32m+[m
[32m+[m[32mpublic class AlarmAlertBroadcastReciever extends BroadcastReceiver {[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void onReceive(Context context, Intent intent) {[m
[32m+[m		[32mIntent mathAlarmServiceIntent = new Intent([m
[32m+[m				[32mcontext,[m
[32m+[m				[32mAlarmServiceBroadcastReciever.class);[m
[32m+[m		[32mcontext.sendBroadcast(mathAlarmServiceIntent, null);[m
[32m+[m[41m		[m
[32m+[m		[32mStaticWakeLock.lockOn(context);[m
[32m+[m		[32mBundle bundle = intent.getExtras();[m
[32m+[m		[32mfinal Alarm alarm = (Alarm) bundle.getSerializable("alarm");[m
[32m+[m
[32m+[m		[32mIntent mathAlarmAlertActivityIntent;[m
[32m+[m
[32m+[m		[32mmathAlarmAlertActivityIntent = new Intent(context, AlarmAlertActivity.class);[m
[32m+[m
[32m+[m		[32mmathAlarmAlertActivityIntent.putExtra("alarm", alarm);[m
[32m+[m
[32m+[m		[32mmathAlarmAlertActivityIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);[m
[32m+[m
[32m+[m		[32mcontext.startActivity(mathAlarmAlertActivityIntent);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/alert/MathProblem.java b/app/src/main/java/com/z/blast/workbox/alert/MathProblem.java[m
[1mnew file mode 100644[m
[1mindex 0000000..bf02873[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/alert/MathProblem.java[m
[36m@@ -0,0 +1,148 @@[m
[32m+[m[32m/* Copyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m * http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m */[m
[32m+[m[32mpackage com.z.blast.workbox.alert;[m
[32m+[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.Random;[m
[32m+[m
[32m+[m[32mpublic class MathProblem {[m
[32m+[m
[32m+[m	[32menum Operator {[m
[32m+[m		[32mADD, SUBTRACT, MULTIPLY, DIVIDE;[m
[32m+[m
[32m+[m		[32m/*[m
[32m+[m		[32m * (non-Javadoc)[m
[32m+[m		[32m *[m[41m [m
[32m+[m		[32m * @see java.lang.Enum#toString()[m
[32m+[m		[32m */[m
[32m+[m		[32m@Override[m
[32m+[m		[32mpublic String toString() {[m
[32m+[m			[32mString string = null;[m
[32m+[m			[32mswitch (ordinal()) {[m
[32m+[m			[32mcase 0:[m
[32m+[m				[32mstring = "+";[m
[32m+[m				[32mbreak;[m
[32m+[m			[32mcase 1:[m
[32m+[m				[32mstring = "-";[m
[32m+[m				[32mbreak;[m
[32m+[m			[32mcase 2:[m
[32m+[m				[32mstring = "*";[m
[32m+[m				[32mbreak;[m
[32m+[m			[32mcase 3:[m
[32m+[m				[32mstring = "/";[m
[32m+[m				[32mbreak;[m
[32m+[m			[32m}[m
[32m+[m			[32mreturn string;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprivate ArrayList<Float> parts;[m
[32m+[m	[32mprivate ArrayList<Operator> operators;[m
[32m+[m	[32mprivate float answer = 0f;[m
[32m+[m	[32mprivate int min = 0;[m
[32m+[m	[32mprivate int max = 10;[m
[32m+[m	[32mpublic MathProblem() {[m[41m		[m
[32m+[m		[32mthis(3);[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic MathProblem(int numParts) {[m
[32m+[m		[32msuper();[m
[32m+[m		[32mRandom random = new Random(System.currentTimeMillis());[m
[32m+[m
[32m+[m		[32mparts = new ArrayList<Float>(numParts);[m
[32m+[m		[32mfor (int i = 0; i < numParts; i++)[m
[32m+[m			[32mparts.add(i, (float) random.nextInt(max - min + 1) + min);[m
[32m+[m[41m		[m
[32m+[m		[32moperators = new ArrayList<Operator>(numParts - 1);[m
[32m+[m		[32mfor (int i = 0; i < numParts - 1; i++)[m
[32m+[m			[32moperators.add(i, Operator.values()[random.nextInt(2)+1]);[m
[32m+[m[41m		[m
[32m+[m		[32mArrayList<Object> combinedParts = new ArrayList<Object>();[m
[32m+[m		[32mfor (int i = 0; i < numParts; i++){[m
[32m+[m			[32mcombinedParts.add(parts.get(i));[m
[32m+[m			[32mif(i<numParts-1)[m
[32m+[m				[32mcombinedParts.add(operators.get(i));[m
[32m+[m		[32m}[m
[32m+[m[41m		[m
[32m+[m		[32mwhile(combinedParts.contains(Operator.DIVIDE)){[m[41m	[m
[32m+[m			[32mint i = combinedParts.indexOf(Operator.DIVIDE);[m
[32m+[m			[32manswer = (Float)combinedParts.get(i-1) / (Float)combinedParts.get(i+1);[m
[32m+[m			[32mfor (int r = 0; r < 2; r++)[m
[32m+[m				[32mcombinedParts.remove(i-1);[m
[32m+[m			[32mcombinedParts.set(i-1, answer);[m
[32m+[m		[32m}[m
[32m+[m		[32mwhile(combinedParts.contains(Operator.MULTIPLY)){[m[41m	[m
[32m+[m			[32mint i = combinedParts.indexOf(Operator.MULTIPLY);[m
[32m+[m			[32manswer = (Float)combinedParts.get(i-1) * (Float)combinedParts.get(i+1);[m
[32m+[m			[32mfor (int r = 0; r < 2; r++)[m
[32m+[m				[32mcombinedParts.remove(i-1);[m
[32m+[m			[32mcombinedParts.set(i-1, answer);[m[41m			[m
[32m+[m		[32m}[m
[32m+[m[41m		[m
[32m+[m[32m//		while(combinedParts.contains(Operator.ADD) ||combinedParts.contains(Operator.SUBTRACT)){[m[41m	[m
[32m+[m[32m//			int i = 0;[m
[32m+[m[32m//			while(!(combinedParts.get(i) instanceof Operator)){[m
[32m+[m[32m//				i++;[m
[32m+[m[32m//			}[m
[32m+[m[32m//			if(combinedParts.get(i) == Operator.ADD){[m
[32m+[m[32m//				answer = (Float)combinedParts.get(i-1) + (Float)combinedParts.get(i+1);[m
[32m+[m[32m//			}else{[m
[32m+[m[32m//				answer = (Float)combinedParts.get(i-1) - (Float)combinedParts.get(i+1);[m
[32m+[m[32m//			}[m
[32m+[m[32m//			for (int r = 0; r < 2; r++)[m
[32m+[m[32m//				combinedParts.remove(i-1);[m
[32m+[m[32m//			combinedParts.set(i-1, answer);[m
[32m+[m[32m//		}[m
[32m+[m[41m		[m
[32m+[m		[32mwhile(combinedParts.contains(Operator.ADD)){[m[41m	[m
[32m+[m			[32mint i = combinedParts.indexOf(Operator.ADD);[m
[32m+[m			[32manswer = (Float)combinedParts.get(i-1) + (Float)combinedParts.get(i+1);[m
[32m+[m			[32mfor (int r = 0; r < 2; r++)[m
[32m+[m				[32mcombinedParts.remove(i-1);[m
[32m+[m			[32mcombinedParts.set(i-1, answer);[m
[32m+[m		[32m}[m
[32m+[m		[32mwhile(combinedParts.contains(Operator.SUBTRACT)){[m[41m	[m
[32m+[m			[32mint i = combinedParts.indexOf(Operator.SUBTRACT);[m
[32m+[m			[32manswer = (Float)combinedParts.get(i-1) - (Float)combinedParts.get(i+1);[m
[32m+[m			[32mfor (int r = 0; r < 2; r++)[m
[32m+[m				[32mcombinedParts.remove(i-1);[m
[32m+[m			[32mcombinedParts.set(i-1, answer);[m
[32m+[m		[32m}[m
[32m+[m[41m		[m
[32m+[m[32m//		2 5 7 8 9 11[m
[32m+[m[32m//		 + - * / -[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/*[m
[32m+[m	[32m * (non-Javadoc)[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m * @see java.lang.Object#toString()[m
[32m+[m	[32m */[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic String toString() {[m
[32m+[m		[32mStringBuilder problemBuilder = new StringBuilder();[m
[32m+[m		[32mfor (int i = 0; i < parts.size(); i++) {[m
[32m+[m			[32mproblemBuilder.append(parts.get(i));[m
[32m+[m			[32mproblemBuilder.append(" ");[m
[32m+[m			[32mif (i < operators.size()){[m
[32m+[m				[32mproblemBuilder.append(operators.get(i).toString());[m
[32m+[m				[32mproblemBuilder.append(" ");[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn problemBuilder.toString();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic float getAnswer() {[m
[32m+[m		[32mreturn answer;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/alert/StaticWakeLock.java b/app/src/main/java/com/z/blast/workbox/alert/StaticWakeLock.java[m
[1mnew file mode 100644[m
[1mindex 0000000..35f8f20[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/alert/StaticWakeLock.java[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32m/* Copyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m * http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m */[m
[32m+[m[32mpackage com.z.blast.workbox.alert;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.os.PowerManager;[m
[32m+[m
[32m+[m[32mpublic class StaticWakeLock {[m
[32m+[m	[32mprivate static PowerManager.WakeLock wl = null;[m
[32m+[m
[32m+[m	[32mpublic static void lockOn(Context context) {[m
[32m+[m		[32mPowerManager pm = (PowerManager) context.getSystemService(Context.POWER_SERVICE);[m
[32m+[m		[32m//Object flags;[m
[32m+[m		[32mif (wl == null)[m
[32m+[m			[32mwl = pm.newWakeLock(PowerManager.FULL_WAKE_LOCK | PowerManager.ACQUIRE_CAUSES_WAKEUP, "MATH_ALARM");[m
[32m+[m		[32mwl.acquire();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic static void lockOff(Context context) {[m
[32m+[m[32m//		PowerManager pm = (PowerManager) context.getSystemService(Context.POWER_SERVICE);[m
[32m+[m		[32mtry {[m
[32m+[m			[32mif (wl != null)[m
[32m+[m				[32mwl.release();[m
[32m+[m		[32m} catch (Exception e) {[m
[32m+[m			[32m//e.printStackTrace();[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/database/Database.java b/app/src/main/java/com/z/blast/workbox/database/Database.java[m
[1mnew file mode 100644[m
[1mindex 0000000..34f4a41[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/database/Database.java[m
[36m@@ -0,0 +1,279 @@[m
[32m+[m[32m/* Copyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m * http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m */[m
[32m+[m[32mpackage com.z.blast.workbox.database;[m
[32m+[m
[32m+[m[32mimport android.content.ContentValues;[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.database.Cursor;[m
[32m+[m[32mimport android.database.sqlite.SQLiteDatabase;[m
[32m+[m[32mimport android.database.sqlite.SQLiteOpenHelper;[m
[32m+[m
[32m+[m[32mimport com.z.blast.workbox.Alarm;[m
[32m+[m[32mimport com.z.blast.workbox.Alarm.Difficulty;[m
[32m+[m
[32m+[m[32mimport java.io.ByteArrayInputStream;[m
[32m+[m[32mimport java.io.ByteArrayOutputStream;[m
[32m+[m[32mimport java.io.IOException;[m
[32m+[m[32mimport java.io.ObjectInputStream;[m
[32m+[m[32mimport java.io.ObjectOutputStream;[m
[32m+[m[32mimport java.io.StreamCorruptedException;[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32m/*[m[41m [m
[32m+[m[32m * usage:[m[41m  [m
[32m+[m[32m * DatabaseSetup.init(egActivityOrContext);[m[41m [m
[32m+[m[32m * DatabaseSetup.createEntry() or DatabaseSetup.getContactNames() or DatabaseSetup.getDb()[m[41m [m
[32m+[m[32m * DatabaseSetup.deactivate() then job done[m[41m [m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpublic class Database extends SQLiteOpenHelper {[m
[32m+[m	[32mstatic Database instance = null;[m
[32m+[m	[32mstatic SQLiteDatabase database = null;[m
[32m+[m[41m	[m
[32m+[m	[32mstatic final String DATABASE_NAME = "DB";[m
[32m+[m	[32mstatic final int DATABASE_VERSION = 1;[m
[32m+[m[41m	[m
[32m+[m	[32mpublic static final String ALARM_TABLE = "alarm";[m
[32m+[m	[32mpublic static final String COLUMN_ALARM_ID = "_id";[m
[32m+[m	[32mpublic static final String COLUMN_ALARM_ACTIVE = "alarm_active";[m[41m	[m
[32m+[m	[32mpublic static final String COLUMN_ALARM_TIME = "alarm_time";[m
[32m+[m	[32mpublic static final String COLUMN_ALARM_DAYS = "alarm_days";[m
[32m+[m	[32mpublic static final String COLUMN_ALARM_DIFFICULTY = "alarm_difficulty";[m
[32m+[m	[32mpublic static final String COLUMN_ALARM_TONE = "alarm_tone";[m
[32m+[m	[32mpublic static final String COLUMN_ALARM_VIBRATE = "alarm_vibrate";[m
[32m+[m	[32mpublic static final String COLUMN_ALARM_NAME = "alarm_name";[m[41m	[m
[32m+[m[41m	[m
[32m+[m	[32mpublic static void init(Context context) {[m
[32m+[m		[32mif (null == instance) {[m
[32m+[m			[32minstance = new Database(context);[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic static SQLiteDatabase getDatabase() {[m
[32m+[m		[32mif (null == database) {[m
[32m+[m			[32mdatabase = instance.getWritableDatabase();[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn database;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic static void deactivate() {[m
[32m+[m		[32mif (null != database && database.isOpen()) {[m
[32m+[m			[32mdatabase.close();[m
[32m+[m		[32m}[m
[32m+[m		[32mdatabase = null;[m
[32m+[m		[32minstance = null;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic static long create(Alarm alarm) {[m
[32m+[m		[32mContentValues cv = new ContentValues();[m
[32m+[m		[32mcv.put(COLUMN_ALARM_ACTIVE, alarm.getAlarmActive());[m
[32m+[m		[32mcv.put(COLUMN_ALARM_TIME, alarm.getAlarmTimeString());[m
[32m+[m[41m		[m
[32m+[m		[32mtry {[m
[32m+[m			[32mByteArrayOutputStream bos = new ByteArrayOutputStream();[m
[32m+[m		[32m    ObjectOutputStream oos = null;[m
[32m+[m		[32m    oos = new ObjectOutputStream(bos);[m
[32m+[m		[32m    oos.writeObject(alarm.getDays());[m
[32m+[m		[32m    byte[] buff = bos.toByteArray();[m
[32m+[m[41m		    [m
[32m+[m		[32m    cv.put(COLUMN_ALARM_DAYS, buff);[m
[32m+[m[41m		    [m
[32m+[m		[32m} catch (Exception e){[m
[32m+[m		[32m}[m[41m		[m
[32m+[m[41m		[m
[32m+[m		[32mcv.put(COLUMN_ALARM_DIFFICULTY, alarm.getDifficulty().ordinal());[m
[32m+[m		[32mcv.put(COLUMN_ALARM_TONE, alarm.getAlarmTonePath());[m
[32m+[m		[32mcv.put(COLUMN_ALARM_VIBRATE, alarm.getVibrate());[m
[32m+[m		[32mcv.put(COLUMN_ALARM_NAME, alarm.getAlarmName());[m
[32m+[m[41m		[m
[32m+[m		[32mreturn getDatabase().insert(ALARM_TABLE, null, cv);[m
[32m+[m	[32m}[m
[32m+[m	[32mpublic static int update(Alarm alarm) {[m
[32m+[m		[32mContentValues cv = new ContentValues();[m
[32m+[m		[32mcv.put(COLUMN_ALARM_ACTIVE, alarm.getAlarmActive());[m
[32m+[m		[32mcv.put(COLUMN_ALARM_TIME, alarm.getAlarmTimeString());[m
[32m+[m[41m		[m
[32m+[m		[32mtry {[m
[32m+[m			[32mByteArrayOutputStream bos = new ByteArrayOutputStream();[m
[32m+[m		[32m    ObjectOutputStream oos = null;[m
[32m+[m		[32m    oos = new ObjectOutputStream(bos);[m
[32m+[m		[32m    oos.writeObject(alarm.getDays());[m
[32m+[m		[32m    byte[] buff = bos.toByteArray();[m
[32m+[m[41m		    [m
[32m+[m		[32m    cv.put(COLUMN_ALARM_DAYS, buff);[m
[32m+[m[41m		    [m
[32m+[m		[32m} catch (Exception e){[m
[32m+[m		[32m}[m[41m		[m
[32m+[m[41m		[m
[32m+[m		[32mcv.put(COLUMN_ALARM_DIFFICULTY, alarm.getDifficulty().ordinal());[m
[32m+[m		[32mcv.put(COLUMN_ALARM_TONE, alarm.getAlarmTonePath());[m
[32m+[m		[32mcv.put(COLUMN_ALARM_VIBRATE, alarm.getVibrate());[m
[32m+[m		[32mcv.put(COLUMN_ALARM_NAME, alarm.getAlarmName());[m
[32m+[m[41m					[m
[32m+[m		[32mreturn getDatabase().update(ALARM_TABLE, cv, "_id=" + alarm.getId(), null);[m
[32m+[m	[32m}[m
[32m+[m	[32mpublic static int deleteEntry(Alarm alarm){[m
[32m+[m		[32mreturn deleteEntry(alarm.getId());[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic static int deleteEntry(int id){[m
[32m+[m		[32mreturn getDatabase().delete(ALARM_TABLE, COLUMN_ALARM_ID + "=" + id, null);[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic static int deleteAll(){[m
[32m+[m		[32mreturn getDatabase().delete(ALARM_TABLE, "1", null);[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic static Alarm getAlarm(int id) {[m
[32m+[m		[32m// TODO Auto-generated method stub[m
[32m+[m		[32mString[] columns = new String[] {[m[41m [m
[32m+[m				[32mCOLUMN_ALARM_ID,[m[41m [m
[32m+[m				[32mCOLUMN_ALARM_ACTIVE,[m
[32m+[m				[32mCOLUMN_ALARM_TIME,[m
[32m+[m				[32mCOLUMN_ALARM_DAYS,[m
[32m+[m				[32mCOLUMN_ALARM_DIFFICULTY,[m
[32m+[m				[32mCOLUMN_ALARM_TONE,[m
[32m+[m				[32mCOLUMN_ALARM_VIBRATE,[m
[32m+[m				[32mCOLUMN_ALARM_NAME[m
[32m+[m				[32m};[m
[32m+[m		[32mCursor c = getDatabase().query(ALARM_TABLE, columns, COLUMN_ALARM_ID+"="+id, null, null, null,[m
[32m+[m				[32mnull);[m
[32m+[m		[32mAlarm alarm = null;[m
[32m+[m[41m		[m
[32m+[m		[32mif(c.moveToFirst()){[m
[32m+[m[41m			[m
[32m+[m			[32malarm =  new Alarm();[m
[32m+[m			[32malarm.setId(c.getInt(1));[m
[32m+[m			[32malarm.setAlarmActive(c.getInt(2)==1);[m
[32m+[m			[32malarm.setAlarmTime(c.getString(3));[m
[32m+[m			[32mbyte[] repeatDaysBytes = c.getBlob(4);[m
[32m+[m[41m			[m
[32m+[m			[32mByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(repeatDaysBytes);[m
[32m+[m			[32mtry {[m
[32m+[m				[32mObjectInputStream objectInputStream = new ObjectInputStream(byteArrayInputStream);[m
[32m+[m				[32mAlarm.Day[] repeatDays;[m
[32m+[m				[32mObject object = objectInputStream.readObject();[m
[32m+[m				[32mif(object instanceof Alarm.Day[]){[m
[32m+[m					[32mrepeatDays = (Alarm.Day[]) object;[m
[32m+[m					[32malarm.setDays(repeatDays);[m
[32m+[m				[32m}[m[41m								[m
[32m+[m			[32m} catch (StreamCorruptedException e) {[m
[32m+[m				[32me.printStackTrace();[m
[32m+[m			[32m} catch (IOException e) {[m
[32m+[m				[32me.printStackTrace();[m
[32m+[m			[32m} catch (ClassNotFoundException e) {[m
[32m+[m				[32me.printStackTrace();[m
[32m+[m			[32m}[m
[32m+[m[41m						[m
[32m+[m			[32malarm.setDifficulty(Difficulty.values()[c.getInt(5)]);[m
[32m+[m			[32malarm.setAlarmTonePath(c.getString(6));[m
[32m+[m			[32malarm.setVibrate(c.getInt(7)==1);[m
[32m+[m			[32malarm.setAlarmName(c.getString(8));[m
[32m+[m		[32m}[m
[32m+[m		[32mc.close();[m
[32m+[m		[32mreturn alarm;[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic static Cursor getCursor() {[m
[32m+[m		[32m// TODO Auto-generated method stub[m
[32m+[m		[32mString[] columns = new String[] {[m[41m [m
[32m+[m				[32mCOLUMN_ALARM_ID,[m[41m [m
[32m+[m				[32mCOLUMN_ALARM_ACTIVE,[m
[32m+[m				[32mCOLUMN_ALARM_TIME,[m
[32m+[m				[32mCOLUMN_ALARM_DAYS,[m
[32m+[m				[32mCOLUMN_ALARM_DIFFICULTY,[m
[32m+[m				[32mCOLUMN_ALARM_TONE,[m
[32m+[m				[32mCOLUMN_ALARM_VIBRATE,[m
[32m+[m				[32mCOLUMN_ALARM_NAME[m
[32m+[m				[32m};[m
[32m+[m		[32mreturn getDatabase().query(ALARM_TABLE, columns, null, null, null, null,[m
[32m+[m				[32mnull);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mDatabase(Context context) {[m
[32m+[m		[32msuper(context, DATABASE_NAME, null, DATABASE_VERSION);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void onCreate(SQLiteDatabase db) {[m
[32m+[m		[32m// TODO Auto-generated method stub[m
[32m+[m		[32mdb.execSQL("CREATE TABLE IF NOT EXISTS " + ALARM_TABLE + " ( "[m[41m [m
[32m+[m				[32m+ COLUMN_ALARM_ID + " INTEGER primary key autoincrement, "[m[41m [m
[32m+[m				[32m+ COLUMN_ALARM_ACTIVE + " INTEGER NOT NULL, "[m[41m [m
[32m+[m				[32m+ COLUMN_ALARM_TIME + " TEXT NOT NULL, "[m[41m [m
[32m+[m				[32m+ COLUMN_ALARM_DAYS + " BLOB NOT NULL, "[m[41m [m
[32m+[m				[32m+ COLUMN_ALARM_DIFFICULTY + " INTEGER NOT NULL, "[m
[32m+[m				[32m+ COLUMN_ALARM_TONE + " TEXT NOT NULL, "[m[41m [m
[32m+[m				[32m+ COLUMN_ALARM_VIBRATE + " INTEGER NOT NULL, "[m[41m [m
[32m+[m				[32m+ COLUMN_ALARM_NAME + " TEXT NOT NULL)");[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {[m
[32m+[m		[32mdb.execSQL("DROP TABLE IF EXISTS " + ALARM_TABLE);[m
[32m+[m		[32monCreate(db);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic static List<Alarm> getAll() {[m
[32m+[m		[32mList<Alarm> alarms = new ArrayList<Alarm>();[m
[32m+[m		[32mCursor cursor = Database.getCursor();[m
[32m+[m		[32mif (cursor.moveToFirst()) {[m
[32m+[m
[32m+[m			[32mdo {[m
[32m+[m				[32m// COLUMN_ALARM_ID,[m
[32m+[m				[32m// COLUMN_ALARM_ACTIVE,[m
[32m+[m				[32m// COLUMN_ALARM_TIME,[m
[32m+[m				[32m// COLUMN_ALARM_DAYS,[m
[32m+[m				[32m// COLUMN_ALARM_DIFFICULTY,[m
[32m+[m				[32m// COLUMN_ALARM_TONE,[m
[32m+[m				[32m// COLUMN_ALARM_VIBRATE,[m
[32m+[m				[32m// COLUMN_ALARM_NAME[m
[32m+[m
[32m+[m				[32mAlarm alarm = new Alarm();[m
[32m+[m				[32malarm.setId(cursor.getInt(0));[m
[32m+[m				[32malarm.setAlarmActive(cursor.getInt(1) == 1);[m
[32m+[m				[32malarm.setAlarmTime(cursor.getString(2));[m
[32m+[m				[32mbyte[] repeatDaysBytes = cursor.getBlob(3);[m
[32m+[m
[32m+[m				[32mByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream([m
[32m+[m						[32mrepeatDaysBytes);[m
[32m+[m				[32mtry {[m
[32m+[m					[32mObjectInputStream objectInputStream = new ObjectInputStream([m
[32m+[m							[32mbyteArrayInputStream);[m
[32m+[m					[32mAlarm.Day[] repeatDays;[m
[32m+[m					[32mObject object = objectInputStream.readObject();[m
[32m+[m					[32mif (object instanceof Alarm.Day[]) {[m
[32m+[m						[32mrepeatDays = (Alarm.Day[]) object;[m
[32m+[m						[32malarm.setDays(repeatDays);[m
[32m+[m					[32m}[m
[32m+[m				[32m} catch (StreamCorruptedException e) {[m
[32m+[m					[32me.printStackTrace();[m
[32m+[m				[32m} catch (IOException e) {[m
[32m+[m					[32me.printStackTrace();[m
[32m+[m				[32m} catch (ClassNotFoundException e) {[m
[32m+[m					[32me.printStackTrace();[m
[32m+[m				[32m}[m
[32m+[m
[32m+[m				[32malarm.setDifficulty(Difficulty.values()[cursor.getInt(4)]);[m
[32m+[m				[32malarm.setAlarmTonePath(cursor.getString(5));[m
[32m+[m				[32malarm.setVibrate(cursor.getInt(6) == 1);[m
[32m+[m				[32malarm.setAlarmName(cursor.getString(7));[m
[32m+[m[41m				[m
[32m+[m				[32malarms.add(alarm);[m
[32m+[m
[32m+[m			[32m} while (cursor.moveToNext());[m[41m			[m
[32m+[m		[32m}[m
[32m+[m		[32mcursor.close();[m
[32m+[m		[32mreturn alarms;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/noteActivity.java b/app/src/main/java/com/z/blast/workbox/noteActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..2c3c9bf[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/noteActivity.java[m
[36m@@ -0,0 +1,47 @@[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport android.app.Activity;[m
[32m+[m[32mimport android.content.SharedPreferences;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.widget.Button;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Created by Random on 16.6.15.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class noteActivity extends Activity{[m
[32m+[m[32m    Button save,edit;[m
[32m+[m[32m    MyEditText editText;[m
[32m+[m[32m    SharedPreferences preferences;[m
[32m+[m[32m    SharedPreferences.Editor editor;[m
[32m+[m[32m    public void onCreate(Bundle savedInstanceState){[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m[32m        setContentView(R.layout.note_main);[m
[32m+[m[32m        preferences=getSharedPreferences("noteData", MODE_PRIVATE);[m
[32m+[m[32m        editor=preferences.edit();[m
[32m+[m[32m        editText=(MyEditText)findViewById(R.id.editText_edittext);[m
[32m+[m[32m        editText.setFocusable(false);[m
[32m+[m[32m        editText.setFocusableInTouchMode(false);[m
[32m+[m[32m        editText.setText(preferences.getString("textData",null));[m
[32m+[m[32m        save=(Button)findViewById(R.id.saveButton_edittext);[m
[32m+[m[32m        save.setOnClickListener(new View.OnClickListener() {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void onClick(View v) {[m
[32m+[m[32m                String data=editText.getText().toString();[m
[32m+[m[32m                editor.putString("textData",data);[m
[32m+[m[32m                editor.commit();[m
[32m+[m[32m                editText.setFocusable(false);[m
[32m+[m[32m                editText.setFocusableInTouchMode(false);[m
[32m+[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m[32m        edit=(Button)findViewById(R.id.editButton_edittext);[m
[32m+[m[32m        edit.setOnClickListener(new View.OnClickListener() {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void onClick(View v) {[m
[32m+[m[32m                editText.setFocusable(true);[m
[32m+[m[32m                editText.setFocusableInTouchMode(true);[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/preferences/AlarmPreference.java b/app/src/main/java/com/z/blast/workbox/preferences/AlarmPreference.java[m
[1mnew file mode 100644[m
[1mindex 0000000..2dc9e92[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/preferences/AlarmPreference.java[m
[36m@@ -0,0 +1,102 @@[m
[32m+[m[32m/* Copyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m * http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m */[m
[32m+[m[32mpackage com.z.blast.workbox.preferences;[m
[32m+[m
[32m+[m[32mpublic class AlarmPreference {[m
[32m+[m[41m	[m
[32m+[m	[32mpublic enum Key{[m
[32m+[m		[32mALARM_NAME,[m
[32m+[m		[32mALARM_ACTIVE,[m
[32m+[m		[32mALARM_TIME,[m
[32m+[m		[32mALARM_REPEAT,[m
[32m+[m		[32mALARM_TONE,[m
[32m+[m		[32mALARM_VIBRATE,[m
[32m+[m		[32mALARM_DIFFICULTY[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic enum Type{[m[41m		[m
[32m+[m		[32mBOOLEAN,[m
[32m+[m		[32mINTEGER,[m
[32m+[m		[32mSTRING,[m
[32m+[m		[32mLIST,[m
[32m+[m		[32mMULTIPLE_LIST,[m
[32m+[m		[32mTIME[m[41m	[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mprivate Key key;[m
[32m+[m	[32mprivate String title;[m
[32m+[m	[32mprivate String summary;[m
[32m+[m	[32mprivate Object value;[m
[32m+[m	[32mprivate String[] options;[m
[32m+[m	[32mprivate Type type;[m[41m	[m
[32m+[m[41m	[m
[32m+[m	[32mpublic AlarmPreference(Key key, Object value, Type type) {[m
[32m+[m		[32mthis(key,null,null,null, value, type);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic AlarmPreference(Key key,String title, String summary, String[] options, Object value, Type type) {[m
[32m+[m		[32msetTitle(title);[m
[32m+[m		[32msetSummary(summary);[m
[32m+[m		[32msetOptions(options);[m
[32m+[m		[32msetKey(key);[m
[32m+[m		[32msetValue(value);[m
[32m+[m		[32msetType(type);[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic Key getKey() {[m
[32m+[m		[32mreturn key;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setKey(Key key) {[m
[32m+[m		[32mthis.key = key;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic Object getValue() {[m
[32m+[m		[32mreturn value;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setValue(Object value) {[m
[32m+[m		[32mthis.value = value;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic Type getType() {[m
[32m+[m		[32mreturn type;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setType(Type type) {[m
[32m+[m		[32mthis.type = type;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic String[] getOptions() {[m
[32m+[m		[32mreturn options;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setOptions(String[] options) {[m
[32m+[m		[32mthis.options = options;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic String getTitle() {[m
[32m+[m		[32mreturn title;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setTitle(String title) {[m
[32m+[m		[32mthis.title = title;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic String getSummary() {[m
[32m+[m		[32mreturn summary;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setSummary(String summary) {[m
[32m+[m		[32mthis.summary = summary;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/preferences/AlarmPreferenceListAdapter.java b/app/src/main/java/com/z/blast/workbox/preferences/AlarmPreferenceListAdapter.java[m
[1mnew file mode 100644[m
[1mindex 0000000..9ba1b64[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/preferences/AlarmPreferenceListAdapter.java[m
[36m@@ -0,0 +1,207 @@[m
[32m+[m[32m/* Copyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m * http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m */[m
[32m+[m[32mpackage com.z.blast.workbox.preferences;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.database.Cursor;[m
[32m+[m[32mimport android.media.Ringtone;[m
[32m+[m[32mimport android.media.RingtoneManager;[m
[32m+[m[32mimport android.net.Uri;[m
[32m+[m[32mimport android.util.Log;[m
[32m+[m[32mimport android.view.LayoutInflater;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.view.ViewGroup;[m
[32m+[m[32mimport android.widget.BaseAdapter;[m
[32m+[m[32mimport android.widget.CheckedTextView;[m
[32m+[m[32mimport android.widget.TextView;[m
[32m+[m
[32m+[m[32mimport com.z.blast.workbox.Alarm;[m
[32m+[m[32mimport com.z.blast.workbox.preferences.AlarmPreference.Type;[m
[32m+[m
[32m+[m[32mimport java.io.Serializable;[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mpublic class AlarmPreferenceListAdapter extends BaseAdapter implements Serializable {[m
[32m+[m
[32m+[m	[32mprivate Context context;[m
[32m+[m	[32mprivate Alarm alarm;[m
[32m+[m	[32mprivate List<AlarmPreference> preferences = new ArrayList<AlarmPreference>();[m
[32m+[m	[32mprivate final String[] repeatDays = {"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"};[m[41m	[m
[32m+[m	[32mprivate final String[] alarmDifficulties = {"Easy","Medium","Hard"};[m
[32m+[m[41m	[m
[32m+[m	[32mprivate String[] alarmTones;[m
[32m+[m	[32mprivate String[] alarmTonePaths;[m
[32m+[m[41m	[m
[32m+[m	[32mpublic AlarmPreferenceListAdapter(Context context, Alarm alarm) {[m
[32m+[m		[32msetContext(context);[m
[32m+[m[41m		[m
[32m+[m[41m		[m
[32m+[m[32m//		(new Runnable(){[m
[32m+[m[32m//[m
[32m+[m[32m//			@Override[m
[32m+[m[32m//			public void run() {[m
[32m+[m				[32mLog.d("AlarmPreferenceListAdapter", "Loading Ringtones...");[m
[32m+[m[41m				[m
[32m+[m				[32mRingtoneManager ringtoneMgr = new RingtoneManager(getContext());[m
[32m+[m[41m				[m
[32m+[m				[32mringtoneMgr.setType(RingtoneManager.TYPE_ALARM);[m
[32m+[m[41m				[m
[32m+[m				[32mCursor alarmsCursor = ringtoneMgr.getCursor();[m
[32m+[m[41m				[m
[32m+[m				[32malarmTones = new String[alarmsCursor.getCount()+1];[m
[32m+[m				[32malarmTones[0] = "Silent";[m[41m [m
[32m+[m				[32malarmTonePaths = new String[alarmsCursor.getCount()+1];[m
[32m+[m				[32malarmTonePaths[0] = "";[m
[32m+[m[41m				[m
[32m+[m				[32mif (alarmsCursor.moveToFirst()) {[m[41m		    			[m
[32m+[m					[32mdo {[m
[32m+[m						[32malarmTones[alarmsCursor.getPosition()+1] = ringtoneMgr.getRingtone(alarmsCursor.getPosition()).getTitle(getContext());[m
[32m+[m						[32malarmTonePaths[alarmsCursor.getPosition()+1] = ringtoneMgr.getRingtoneUri(alarmsCursor.getPosition()).toString();[m
[32m+[m					[32m}while(alarmsCursor.moveToNext());[m[41m					[m
[32m+[m				[32m}[m
[32m+[m				[32mLog.d("AlarmPreferenceListAdapter", "Finished Loading " + alarmTones.length + " Ringtones.");[m
[32m+[m				[32malarmsCursor.close();[m
[32m+[m[32m//[m[41m				[m
[32m+[m[32m//			}[m
[32m+[m[32m//[m[41m			[m
[32m+[m[32m//		}).run();[m
[32m+[m[32m//[m[41m		[m
[32m+[m	[32m    setMathAlarm(alarm);[m[41m		[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic int getCount() {[m
[32m+[m		[32mreturn preferences.size();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic Object getItem(int position) {[m
[32m+[m		[32mreturn preferences.get(position);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic long getItemId(int position) {[m
[32m+[m		[32mreturn position;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic View getView(int position, View convertView, ViewGroup parent) {[m
[32m+[m		[32mAlarmPreference alarmPreference = (AlarmPreference) getItem(position);[m
[32m+[m		[32mLayoutInflater layoutInflater = LayoutInflater.from(getContext());[m
[32m+[m		[32mswitch (alarmPreference.getType()) {[m
[32m+[m		[32mcase BOOLEAN:[m
[32m+[m			[32mif(null == convertView || convertView.getId() != android.R.layout.simple_list_item_checked)[m
[32m+[m			[32mconvertView = layoutInflater.inflate(android.R.layout.simple_list_item_checked, null);[m
[32m+[m
[32m+[m			[32mCheckedTextView checkedTextView = (CheckedTextView) convertView.findViewById(android.R.id.text1);[m
[32m+[m			[32mcheckedTextView.setText(alarmPreference.getTitle());[m
[32m+[m			[32mcheckedTextView.setChecked((Boolean) alarmPreference.getValue());[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase INTEGER:[m
[32m+[m		[32mcase STRING:[m
[32m+[m		[32mcase LIST:[m
[32m+[m		[32mcase MULTIPLE_LIST:[m
[32m+[m		[32mcase TIME:[m
[32m+[m		[32mdefault:[m
[32m+[m			[32mif(null == convertView || convertView.getId() != android.R.layout.simple_list_item_2)[m
[32m+[m			[32mconvertView = layoutInflater.inflate(android.R.layout.simple_list_item_2, null);[m
[32m+[m[41m			[m
[32m+[m			[32mTextView text1 = (TextView) convertView.findViewById(android.R.id.text1);[m
[32m+[m			[32mtext1.setTextSize(18);[m
[32m+[m			[32mtext1.setText(alarmPreference.getTitle());[m
[32m+[m[41m			[m
[32m+[m			[32mTextView text2 = (TextView) convertView.findViewById(android.R.id.text2);[m
[32m+[m			[32mtext2.setText(alarmPreference.getSummary());[m
[32m+[m			[32mbreak;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn convertView;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic Alarm getMathAlarm() {[m[41m		[m
[32m+[m		[32mfor(AlarmPreference preference : preferences){[m
[32m+[m			[32mswitch(preference.getKey()){[m
[32m+[m				[32mcase ALARM_ACTIVE:[m
[32m+[m					[32malarm.setAlarmActive((Boolean) preference.getValue());[m
[32m+[m					[32mbreak;[m
[32m+[m				[32mcase ALARM_NAME:[m
[32m+[m					[32malarm.setAlarmName((String) preference.getValue());[m
[32m+[m					[32mbreak;[m
[32m+[m				[32mcase ALARM_TIME:[m
[32m+[m					[32malarm.setAlarmTime((String) preference.getValue());[m
[32m+[m					[32mbreak;[m
[32m+[m				[32mcase ALARM_DIFFICULTY:[m
[32m+[m					[32malarm.setDifficulty(Alarm.Difficulty.valueOf((String)preference.getValue()));[m
[32m+[m					[32mbreak;[m
[32m+[m				[32mcase ALARM_TONE:[m
[32m+[m					[32malarm.setAlarmTonePath((String) preference.getValue());[m
[32m+[m					[32mbreak;[m
[32m+[m				[32mcase ALARM_VIBRATE:[m
[32m+[m					[32malarm.setVibrate((Boolean) preference.getValue());[m
[32m+[m					[32mbreak;[m
[32m+[m				[32mcase ALARM_REPEAT:[m
[32m+[m					[32malarm.setDays((Alarm.Day[]) preference.getValue());[m
[32m+[m					[32mbreak;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m[41m				[m
[32m+[m		[32mreturn alarm;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setMathAlarm(Alarm alarm) {[m
[32m+[m		[32mthis.alarm = alarm;[m
[32m+[m		[32mpreferences.clear();[m
[32m+[m		[32mpreferences.add(new AlarmPreference(AlarmPreference.Key.ALARM_ACTIVE,"Active", null, null, alarm.getAlarmActive(),Type.BOOLEAN));[m
[32m+[m		[32mpreferences.add(new AlarmPreference(AlarmPreference.Key.ALARM_NAME, "Label",alarm.getAlarmName(), null, alarm.getAlarmName(), Type.STRING));[m
[32m+[m		[32mpreferences.add(new AlarmPreference(AlarmPreference.Key.ALARM_TIME, "Set time",alarm.getAlarmTimeString(), null, alarm.getAlarmTime(), Type.TIME));[m
[32m+[m		[32mpreferences.add(new AlarmPreference(AlarmPreference.Key.ALARM_REPEAT, "Repeat",alarm.getRepeatDaysString(), repeatDays, alarm.getDays(),Type.MULTIPLE_LIST));[m
[32m+[m		[32mpreferences.add(new AlarmPreference(AlarmPreference.Key.ALARM_DIFFICULTY,"Difficulty", alarm.getDifficulty().toString(), alarmDifficulties, alarm.getDifficulty(), Type.LIST));[m
[32m+[m[41m		[m
[32m+[m			[32mUri alarmToneUri = Uri.parse(alarm.getAlarmTonePath());[m
[32m+[m			[32mRingtone alarmTone = RingtoneManager.getRingtone(getContext(), alarmToneUri);[m
[32m+[m[41m		[m
[32m+[m		[32mif(alarmTone instanceof Ringtone && !alarm.getAlarmTonePath().equalsIgnoreCase("")){[m
[32m+[m			[32mpreferences.add(new AlarmPreference(AlarmPreference.Key.ALARM_TONE, "Ringtone", alarmTone.getTitle(getContext()),alarmTones, alarm.getAlarmTonePath(), Type.LIST));[m
[32m+[m		[32m}else{[m
[32m+[m			[32mpreferences.add(new AlarmPreference(AlarmPreference.Key.ALARM_TONE, "Ringtone", getAlarmTones()[0],alarmTones, null, Type.LIST));[m
[32m+[m		[32m}[m
[32m+[m[41m		[m
[32m+[m		[32mpreferences.add(new AlarmPreference(AlarmPreference.Key.ALARM_VIBRATE, "Vibrate",null, null, alarm.getVibrate(), Type.BOOLEAN));[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[41m	[m
[32m+[m	[32mpublic Context getContext() {[m
[32m+[m		[32mreturn context;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setContext(Context context) {[m
[32m+[m		[32mthis.context = context;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic String[] getRepeatDays() {[m
[32m+[m		[32mreturn repeatDays;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic String[] getAlarmDifficulties() {[m
[32m+[m		[32mreturn alarmDifficulties;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic String[] getAlarmTones() {[m
[32m+[m		[32mreturn alarmTones;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic String[] getAlarmTonePaths() {[m
[32m+[m		[32mreturn alarmTonePaths;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/preferences/AlarmPreferencesActivity.java b/app/src/main/java/com/z/blast/workbox/preferences/AlarmPreferencesActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..a6d0654[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/preferences/AlarmPreferencesActivity.java[m
[36m@@ -0,0 +1,403 @@[m
[32m+[m[32m/* Copyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m * http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m */[m
[32m+[m[32mpackage com.z.blast.workbox.preferences;[m
[32m+[m
[32m+[m[32mimport android.app.AlertDialog;[m
[32m+[m[32mimport android.app.TimePickerDialog;[m
[32m+[m[32mimport android.app.TimePickerDialog.OnTimeSetListener;[m
[32m+[m[32mimport android.content.DialogInterface;[m
[32m+[m[32mimport android.content.DialogInterface.OnCancelListener;[m
[32m+[m[32mimport android.content.DialogInterface.OnClickListener;[m
[32m+[m[32mimport android.content.DialogInterface.OnMultiChoiceClickListener;[m
[32m+[m[32mimport android.media.AudioManager;[m
[32m+[m[32mimport android.media.MediaPlayer;[m
[32m+[m[32mimport android.net.Uri;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.os.CountDownTimer;[m
[32m+[m[32mimport android.os.Vibrator;[m
[32m+[m[32mimport android.support.v7.app.ActionBar;[m
[32m+[m[32mimport android.view.HapticFeedbackConstants;[m
[32m+[m[32mimport android.view.Menu;[m
[32m+[m[32mimport android.view.MenuInflater;[m
[32m+[m[32mimport android.view.MenuItem;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.widget.AdapterView;[m
[32m+[m[32mimport android.widget.AdapterView.OnItemClickListener;[m
[32m+[m[32mimport android.widget.CheckedTextView;[m
[32m+[m[32mimport android.widget.EditText;[m
[32m+[m[32mimport android.widget.ImageButton;[m
[32m+[m[32mimport android.widget.ListAdapter;[m
[32m+[m[32mimport android.widget.ListView;[m
[32m+[m[32mimport android.widget.TextView;[m
[32m+[m[32mimport android.widget.TimePicker;[m
[32m+[m[32mimport android.widget.Toast;[m
[32m+[m
[32m+[m[32mimport com.z.blast.workbox.Alarm;[m
[32m+[m[32mimport com.z.blast.workbox.BaseActivity;[m
[32m+[m[32mimport com.z.blast.workbox.R;[m
[32m+[m[32mimport com.z.blast.workbox.database.Database;[m
[32m+[m[32mimport com.z.blast.workbox.preferences.AlarmPreference.Key;[m
[32m+[m
[32m+[m[32mimport java.util.Calendar;[m
[32m+[m
[32m+[m[32mpublic class AlarmPreferencesActivity extends BaseActivity {[m
[32m+[m
[32m+[m	[32mImageButton deleteButton;[m
[32m+[m	[32mTextView okButton;[m
[32m+[m	[32mTextView cancelButton;[m
[32m+[m	[32mprivate Alarm alarm;[m
[32m+[m	[32mprivate MediaPlayer mediaPlayer;[m
[32m+[m
[32m+[m	[32mprivate ListAdapter listAdapter;[m
[32m+[m	[32mprivate ListView listView;[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void onCreate(Bundle savedInstanceState) {[m
[32m+[m		[32msuper.onCreate(savedInstanceState);[m
[32m+[m		[32m// requestWindowFeature(Window.FEATURE_NO_TITLE);[m
[32m+[m		[32mActionBar actionBar = getSupportActionBar();[m
[32m+[m		[32mactionBar.setDisplayHomeAsUpEnabled(true);[m
[32m+[m		[32msetContentView(R.layout.alarm_preferences);[m
[32m+[m
[32m+[m		[32mBundle bundle = getIntent().getExtras();[m
[32m+[m		[32mif (bundle != null && bundle.containsKey("alarm")) {[m
[32m+[m			[32msetMathAlarm((Alarm) bundle.getSerializable("alarm"));[m
[32m+[m		[32m} else {[m
[32m+[m			[32msetMathAlarm(new Alarm());[m
[32m+[m		[32m}[m
[32m+[m		[32mif (bundle != null && bundle.containsKey("adapter")) {[m
[32m+[m			[32msetListAdapter((AlarmPreferenceListAdapter) bundle.getSerializable("adapter"));[m
[32m+[m		[32m} else {[m
[32m+[m			[32msetListAdapter(new AlarmPreferenceListAdapter(this, getMathAlarm()));[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mgetListView().setOnItemClickListener(new OnItemClickListener() {[m
[32m+[m
[32m+[m			[32m@Override[m
[32m+[m			[32mpublic void onItemClick(AdapterView<?> l, View v, int position, long id) {[m
[32m+[m				[32mfinal AlarmPreferenceListAdapter alarmPreferenceListAdapter = (AlarmPreferenceListAdapter) getListAdapter();[m
[32m+[m				[32mfinal AlarmPreference alarmPreference = (AlarmPreference) alarmPreferenceListAdapter.getItem(position);[m
[32m+[m
[32m+[m				[32mAlertDialog.Builder alert;[m
[32m+[m				[32mv.performHapticFeedback(HapticFeedbackConstants.VIRTUAL_KEY);[m
[32m+[m				[32mswitch (alarmPreference.getType()) {[m
[32m+[m				[32mcase BOOLEAN:[m
[32m+[m					[32mCheckedTextView checkedTextView = (CheckedTextView) v;[m
[32m+[m					[32mboolean checked = !checkedTextView.isChecked();[m
[32m+[m					[32m((CheckedTextView) v).setChecked(checked);[m
[32m+[m					[32mswitch (alarmPreference.getKey()) {[m
[32m+[m					[32mcase ALARM_ACTIVE:[m
[32m+[m						[32malarm.setAlarmActive(checked);[m
[32m+[m						[32mbreak;[m
[32m+[m					[32mcase ALARM_VIBRATE:[m
[32m+[m						[32malarm.setVibrate(checked);[m
[32m+[m						[32mif (checked) {[m
[32m+[m							[32mVibrator vibrator = (Vibrator) getSystemService(VIBRATOR_SERVICE);[m
[32m+[m							[32mvibrator.vibrate(1000);[m
[32m+[m						[32m}[m
[32m+[m						[32mbreak;[m
[32m+[m					[32m}[m
[32m+[m					[32malarmPreference.setValue(checked);[m
[32m+[m					[32mbreak;[m
[32m+[m				[32mcase STRING:[m
[32m+[m
[32m+[m					[32malert = new AlertDialog.Builder(AlarmPreferencesActivity.this);[m
[32m+[m
[32m+[m					[32malert.setTitle(alarmPreference.getTitle());[m
[32m+[m					[32m// com.z.blast.workbox.alert.setMessage(message);[m
[32m+[m
[32m+[m					[32m// Set an EditText view to get user input[m
[32m+[m					[32mfinal EditText input = new EditText(AlarmPreferencesActivity.this);[m
[32m+[m
[32m+[m					[32minput.setText(alarmPreference.getValue().toString());[m
[32m+[m
[32m+[m					[32malert.setView(input);[m
[32m+[m					[32malert.setPositiveButton("Ok", new OnClickListener() {[m
[32m+[m						[32mpublic void onClick(DialogInterface dialog, int whichButton) {[m
[32m+[m
[32m+[m							[32malarmPreference.setValue(input.getText().toString());[m
[32m+[m
[32m+[m							[32mif (alarmPreference.getKey() == Key.ALARM_NAME) {[m
[32m+[m								[32malarm.setAlarmName(alarmPreference.getValue().toString());[m
[32m+[m							[32m}[m
[32m+[m
[32m+[m							[32malarmPreferenceListAdapter.setMathAlarm(getMathAlarm());[m
[32m+[m							[32malarmPreferenceListAdapter.notifyDataSetChanged();[m
[32m+[m						[32m}[m
[32m+[m					[32m});[m
[32m+[m					[32malert.show();[m
[32m+[m					[32mbreak;[m
[32m+[m				[32mcase LIST:[m
[32m+[m					[32malert = new AlertDialog.Builder(AlarmPreferencesActivity.this);[m
[32m+[m
[32m+[m					[32malert.setTitle(alarmPreference.getTitle());[m
[32m+[m					[32m// com.z.blast.workbox.alert.setMessage(message);[m
[32m+[m
[32m+[m					[32mCharSequence[] items = new CharSequence[alarmPreference.getOptions().length];[m
[32m+[m					[32mfor (int i = 0; i < items.length; i++)[m
[32m+[m						[32mitems[i] = alarmPreference.getOptions()[i];[m
[32m+[m
[32m+[m					[32malert.setItems(items, new OnClickListener() {[m
[32m+[m
[32m+[m						[32m@Override[m
[32m+[m						[32mpublic void onClick(DialogInterface dialog, int which) {[m
[32m+[m							[32mswitch (alarmPreference.getKey()) {[m
[32m+[m							[32mcase ALARM_DIFFICULTY:[m
[32m+[m								[32mAlarm.Difficulty d = Alarm.Difficulty.values()[which];[m
[32m+[m								[32malarm.setDifficulty(d);[m
[32m+[m								[32mbreak;[m
[32m+[m							[32mcase ALARM_TONE:[m
[32m+[m								[32malarm.setAlarmTonePath(alarmPreferenceListAdapter.getAlarmTonePaths()[which]);[m
[32m+[m								[32mif (alarm.getAlarmTonePath() != null) {[m
[32m+[m									[32mif (mediaPlayer == null) {[m
[32m+[m										[32mmediaPlayer = new MediaPlayer();[m
[32m+[m									[32m} else {[m
[32m+[m										[32mif (mediaPlayer.isPlaying())[m
[32m+[m											[32mmediaPlayer.stop();[m
[32m+[m										[32mmediaPlayer.reset();[m
[32m+[m									[32m}[m
[32m+[m									[32mtry {[m
[32m+[m										[32m// mediaPlayer.setVolume(1.0f, 1.0f);[m
[32m+[m										[32mmediaPlayer.setVolume(0.2f, 0.2f);[m
[32m+[m										[32mmediaPlayer.setDataSource(AlarmPreferencesActivity.this, Uri.parse(alarm.getAlarmTonePath()));[m
[32m+[m										[32mmediaPlayer.setAudioStreamType(AudioManager.STREAM_ALARM);[m
[32m+[m										[32mmediaPlayer.setLooping(false);[m
[32m+[m										[32mmediaPlayer.prepare();[m
[32m+[m										[32mmediaPlayer.start();[m
[32m+[m
[32m+[m										[32m// Force the mediaPlayer to stop after 3[m
[32m+[m										[32m// seconds...[m
[32m+[m										[32mif (alarmToneTimer != null)[m
[32m+[m											[32malarmToneTimer.cancel();[m
[32m+[m										[32malarmToneTimer = new CountDownTimer(3000, 3000) {[m
[32m+[m											[32m@Override[m
[32m+[m											[32mpublic void onTick(long millisUntilFinished) {[m
[32m+[m
[32m+[m											[32m}[m
[32m+[m
[32m+[m											[32m@Override[m
[32m+[m											[32mpublic void onFinish() {[m
[32m+[m												[32mtry {[m
[32m+[m													[32mif (mediaPlayer.isPlaying())[m
[32m+[m														[32mmediaPlayer.stop();[m
[32m+[m												[32m} catch (Exception e) {[m
[32m+[m
[32m+[m												[32m}[m
[32m+[m											[32m}[m
[32m+[m										[32m};[m
[32m+[m										[32malarmToneTimer.start();[m
[32m+[m									[32m} catch (Exception e) {[m
[32m+[m										[32mtry {[m
[32m+[m											[32mif (mediaPlayer.isPlaying())[m
[32m+[m												[32mmediaPlayer.stop();[m
[32m+[m										[32m} catch (Exception e2) {[m
[32m+[m
[32m+[m										[32m}[m
[32m+[m									[32m}[m
[32m+[m								[32m}[m
[32m+[m								[32mbreak;[m
[32m+[m							[32mdefault:[m
[32m+[m								[32mbreak;[m
[32m+[m							[32m}[m
[32m+[m							[32malarmPreferenceListAdapter.setMathAlarm(getMathAlarm());[m
[32m+[m							[32malarmPreferenceListAdapter.notifyDataSetChanged();[m
[32m+[m						[32m}[m
[32m+[m
[32m+[m					[32m});[m
[32m+[m
[32m+[m					[32malert.show();[m
[32m+[m					[32mbreak;[m
[32m+[m				[32mcase MULTIPLE_LIST:[m
[32m+[m					[32malert = new AlertDialog.Builder(AlarmPreferencesActivity.this);[m
[32m+[m
[32m+[m					[32malert.setTitle(alarmPreference.getTitle());[m
[32m+[m					[32m// com.z.blast.workbox.alert.setMessage(message);[m
[32m+[m
[32m+[m					[32mCharSequence[] multiListItems = new CharSequence[alarmPreference.getOptions().length];[m
[32m+[m					[32mfor (int i = 0; i < multiListItems.length; i++)[m
[32m+[m						[32mmultiListItems[i] = alarmPreference.getOptions()[i];[m
[32m+[m
[32m+[m					[32mboolean[] checkedItems = new boolean[multiListItems.length];[m
[32m+[m					[32mfor (Alarm.Day day : getMathAlarm().getDays()) {[m
[32m+[m						[32mcheckedItems[day.ordinal()] = true;[m
[32m+[m					[32m}[m
[32m+[m					[32malert.setMultiChoiceItems(multiListItems, checkedItems, new OnMultiChoiceClickListener() {[m
[32m+[m
[32m+[m						[32m@Override[m
[32m+[m						[32mpublic void onClick(final DialogInterface dialog, int which, boolean isChecked) {[m
[32m+[m
[32m+[m							[32mAlarm.Day thisDay = Alarm.Day.values()[which];[m
[32m+[m
[32m+[m							[32mif (isChecked) {[m
[32m+[m								[32malarm.addDay(thisDay);[m
[32m+[m							[32m} else {[m
[32m+[m								[32m// Only remove the day if there are more than 1[m
[32m+[m								[32m// selected[m
[32m+[m								[32mif (alarm.getDays().length > 1) {[m
[32m+[m									[32malarm.removeDay(thisDay);[m
[32m+[m								[32m} else {[m
[32m+[m									[32m// If the last day was unchecked, re-check[m
[32m+[m									[32m// it[m
[32m+[m									[32m((AlertDialog) dialog).getListView().setItemChecked(which, true);[m
[32m+[m								[32m}[m
[32m+[m							[32m}[m
[32m+[m
[32m+[m						[32m}[m
[32m+[m					[32m});[m
[32m+[m					[32malert.setOnCancelListener(new OnCancelListener() {[m
[32m+[m						[32m@Override[m
[32m+[m						[32mpublic void onCancel(DialogInterface dialog) {[m
[32m+[m							[32malarmPreferenceListAdapter.setMathAlarm(getMathAlarm());[m
[32m+[m							[32malarmPreferenceListAdapter.notifyDataSetChanged();[m
[32m+[m
[32m+[m						[32m}[m
[32m+[m					[32m});[m
[32m+[m					[32malert.show();[m
[32m+[m					[32mbreak;[m
[32m+[m				[32mcase TIME:[m
[32m+[m					[32mTimePickerDialog timePickerDialog = new TimePickerDialog(AlarmPreferencesActivity.this, new OnTimeSetListener() {[m
[32m+[m
[32m+[m						[32m@Override[m
[32m+[m						[32mpublic void onTimeSet(TimePicker timePicker, int hours, int minutes) {[m
[32m+[m							[32mCalendar newAlarmTime = Calendar.getInstance();[m
[32m+[m							[32mnewAlarmTime.set(Calendar.HOUR_OF_DAY, hours);[m
[32m+[m							[32mnewAlarmTime.set(Calendar.MINUTE, minutes);[m
[32m+[m							[32mnewAlarmTime.set(Calendar.SECOND, 0);[m
[32m+[m							[32malarm.setAlarmTime(newAlarmTime);[m
[32m+[m							[32malarmPreferenceListAdapter.setMathAlarm(getMathAlarm());[m
[32m+[m							[32malarmPreferenceListAdapter.notifyDataSetChanged();[m
[32m+[m						[32m}[m
[32m+[m					[32m}, alarm.getAlarmTime().get(Calendar.HOUR_OF_DAY), alarm.getAlarmTime().get(Calendar.MINUTE), true);[m
[32m+[m					[32mtimePickerDialog.setTitle(alarmPreference.getTitle());[m
[32m+[m					[32mtimePickerDialog.show();[m
[32m+[m				[32mdefault:[m
[32m+[m					[32mbreak;[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m		[32m});[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic boolean onCreateOptionsMenu(Menu menu) {[m
[32m+[m		[32mboolean result = super.onCreateOptionsMenu(menu);[m
[32m+[m		[32mmenu.clear();[m
[32m+[m		[32mMenuInflater inflater=getMenuInflater();[m
[32m+[m		[32minflater.inflate(R.menu.alarmmenu,menu);[m
[32m+[m		[32mmenu.findItem(R.id.menu_item_new).setVisible(false);[m
[32m+[m		[32mreturn result;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic boolean onOptionsItemSelected(MenuItem item) {[m
[32m+[m		[32mswitch (item.getItemId()) {[m
[32m+[m		[32mcase R.id.menu_item_save:[m
[32m+[m			[32mDatabase.init(getApplicationContext());[m
[32m+[m			[32mif (getMathAlarm().getId() < 1) {[m
[32m+[m				[32mDatabase.create(getMathAlarm());[m
[32m+[m			[32m} else {[m
[32m+[m				[32mDatabase.update(getMathAlarm());[m
[32m+[m			[32m}[m
[32m+[m			[32mcallMathAlarmScheduleService();[m
[32m+[m			[32mToast.makeText(AlarmPreferencesActivity.this, getMathAlarm().getTimeUntilNextAlarmMessage(), Toast.LENGTH_LONG).show();[m
[32m+[m			[32mfinish();[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase R.id.menu_item_delete:[m
[32m+[m			[32mAlertDialog.Builder dialog = new AlertDialog.Builder(AlarmPreferencesActivity.this);[m
[32m+[m			[32mdialog.setTitle("Delete");[m
[32m+[m			[32mdialog.setMessage("Delete this alarm?");[m
[32m+[m			[32mdialog.setPositiveButton("Ok", new OnClickListener() {[m
[32m+[m
[32m+[m				[32m@Override[m
[32m+[m				[32mpublic void onClick(DialogInterface dialog, int which) {[m
[32m+[m
[32m+[m					[32mDatabase.init(getApplicationContext());[m
[32m+[m					[32mif (getMathAlarm().getId() < 1) {[m
[32m+[m						[32m// com.z.blast.workbox.Alarm not saved[m
[32m+[m					[32m} else {[m
[32m+[m						[32mDatabase.deleteEntry(alarm);[m
[32m+[m						[32mcallMathAlarmScheduleService();[m
[32m+[m					[32m}[m
[32m+[m					[32mfinish();[m
[32m+[m				[32m}[m
[32m+[m			[32m});[m
[32m+[m			[32mdialog.setNegativeButton("Cancel", new OnClickListener() {[m
[32m+[m
[32m+[m				[32m@Override[m
[32m+[m				[32mpublic void onClick(DialogInterface dialog, int which) {[m
[32m+[m					[32mdialog.dismiss();[m
[32m+[m				[32m}[m
[32m+[m			[32m});[m
[32m+[m			[32mdialog.show();[m
[32m+[m
[32m+[m			[32mbreak;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn super.onOptionsItemSelected(item);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprivate CountDownTimer alarmToneTimer;[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void onSaveInstanceState(Bundle outState) {[m
[32m+[m		[32moutState.putSerializable("alarm", getMathAlarm());[m
[32m+[m		[32moutState.putSerializable("adapter", (AlarmPreferenceListAdapter) getListAdapter());[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void onPause() {[m
[32m+[m		[32msuper.onPause();[m
[32m+[m		[32mtry {[m
[32m+[m			[32mif (mediaPlayer != null)[m
[32m+[m				[32mmediaPlayer.release();[m
[32m+[m		[32m} catch (Exception e) {[m
[32m+[m		[32m}[m
[32m+[m		[32m// setListAdapter(null);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void onResume() {[m
[32m+[m		[32msuper.onResume();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic Alarm getMathAlarm() {[m
[32m+[m		[32mreturn alarm;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setMathAlarm(Alarm alarm) {[m
[32m+[m		[32mthis.alarm = alarm;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic ListAdapter getListAdapter() {[m
[32m+[m		[32mreturn listAdapter;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setListAdapter(ListAdapter listAdapter) {[m
[32m+[m		[32mthis.listAdapter = listAdapter;[m
[32m+[m		[32mgetListView().setAdapter(listAdapter);[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic ListView getListView() {[m
[32m+[m		[32mif (listView == null)[m
[32m+[m			[32mlistView = (ListView) findViewById(android.R.id.list);[m
[32m+[m		[32mreturn listView;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setListView(ListView listView) {[m
[32m+[m		[32mthis.listView = listView;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void onClick(View v) {[m
[32m+[m		[32m// super.onClick(v);[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/service/AlarmService.java b/app/src/main/java/com/z/blast/workbox/service/AlarmService.java[m
[1mnew file mode 100644[m
[1mindex 0000000..f6629a5[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/service/AlarmService.java[m
[36m@@ -0,0 +1,114 @@[m
[32m+[m[32m/* Copyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m * http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m */[m
[32m+[m[32mpackage com.z.blast.workbox.service;[m
[32m+[m
[32m+[m[32mimport android.app.AlarmManager;[m
[32m+[m[32mimport android.app.PendingIntent;[m
[32m+[m[32mimport android.app.Service;[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.content.Intent;[m
[32m+[m[32mimport android.os.IBinder;[m
[32m+[m[32mimport android.util.Log;[m
[32m+[m
[32m+[m[32mimport com.z.blast.workbox.Alarm;[m
[32m+[m[32mimport com.z.blast.workbox.alert.AlarmAlertBroadcastReciever;[m
[32m+[m[32mimport com.z.blast.workbox.database.Database;[m
[32m+[m
[32m+[m[32mimport java.util.Comparator;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m[32mimport java.util.Set;[m
[32m+[m[32mimport java.util.TreeSet;[m
[32m+[m
[32m+[m[32mpublic class AlarmService extends Service {[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic IBinder onBind(Intent intent) {[m
[32m+[m
[32m+[m		[32mreturn null;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/*[m
[32m+[m	[32m * (non-Javadoc)[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m * @see android.app.Service#onCreate()[m
[32m+[m	[32m */[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void onCreate() {[m
[32m+[m		[32mLog.d(this.getClass().getSimpleName(),"onCreate()");[m
[32m+[m		[32msuper.onCreate();[m[41m		[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprivate Alarm getNext(){[m
[32m+[m		[32mSet<Alarm> alarmQueue = new TreeSet<Alarm>(new Comparator<Alarm>() {[m
[32m+[m			[32m@Override[m
[32m+[m			[32mpublic int compare(Alarm lhs, Alarm rhs) {[m
[32m+[m				[32mint result = 0;[m
[32m+[m				[32mlong diff = lhs.getAlarmTime().getTimeInMillis() - rhs.getAlarmTime().getTimeInMillis();[m[41m				[m
[32m+[m				[32mif(diff>0){[m
[32m+[m					[32mreturn 1;[m
[32m+[m				[32m}else if (diff < 0){[m
[32m+[m					[32mreturn -1;[m
[32m+[m				[32m}[m
[32m+[m				[32mreturn result;[m
[32m+[m			[32m}[m
[32m+[m		[32m});[m
[32m+[m[41m				[m
[32m+[m		[32mDatabase.init(getApplicationContext());[m
[32m+[m		[32mList<Alarm> alarms = Database.getAll();[m
[32m+[m[41m		[m
[32m+[m		[32mfor(Alarm alarm : alarms){[m
[32m+[m			[32mif(alarm.getAlarmActive())[m
[32m+[m				[32malarmQueue.add(alarm);[m
[32m+[m		[32m}[m
[32m+[m		[32mif(alarmQueue.iterator().hasNext()){[m
[32m+[m			[32mreturn alarmQueue.iterator().next();[m
[32m+[m		[32m}else{[m
[32m+[m			[32mreturn null;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m	[32m/*[m
[32m+[m	[32m * (non-Javadoc)[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m * @see android.app.Service#onDestroy()[m
[32m+[m	[32m */[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void onDestroy() {[m
[32m+[m		[32mDatabase.deactivate();[m
[32m+[m		[32msuper.onDestroy();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/*[m
[32m+[m	[32m * (non-Javadoc)[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m * @see android.app.Service#onStartCommand(android.content.Intent, int, int)[m
[32m+[m	[32m */[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic int onStartCommand(Intent intent, int flags, int startId) {[m
[32m+[m		[32mLog.d(this.getClass().getSimpleName(),"onStartCommand()");[m
[32m+[m		[32mAlarm alarm = getNext();[m
[32m+[m		[32mif(null != alarm){[m
[32m+[m			[32malarm.schedule(getApplicationContext());[m
[32m+[m			[32mLog.d(this.getClass().getSimpleName(),alarm.getTimeUntilNextAlarmMessage());[m
[32m+[m[41m			[m
[32m+[m		[32m}else{[m
[32m+[m			[32mIntent myIntent = new Intent(getApplicationContext(), AlarmAlertBroadcastReciever.class);[m
[32m+[m			[32mmyIntent.putExtra("alarm", new Alarm());[m
[32m+[m[41m			[m
[32m+[m			[32mPendingIntent pendingIntent = PendingIntent.getBroadcast(getApplicationContext(), 0, myIntent,PendingIntent.FLAG_CANCEL_CURRENT);[m[41m			[m
[32m+[m			[32mAlarmManager alarmManager = (AlarmManager)getApplicationContext().getSystemService(Context.ALARM_SERVICE);[m
[32m+[m[41m			[m
[32m+[m			[32malarmManager.cancel(pendingIntent);[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn START_NOT_STICKY;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/service/AlarmServiceBroadcastReciever.java b/app/src/main/java/com/z/blast/workbox/service/AlarmServiceBroadcastReciever.java[m
[1mnew file mode 100644[m
[1mindex 0000000..8818359[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/service/AlarmServiceBroadcastReciever.java[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m/* Copyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m * http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m */[m
[32m+[m[32mpackage com.z.blast.workbox.service;[m
[32m+[m
[32m+[m[32mimport android.content.BroadcastReceiver;[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.content.Intent;[m
[32m+[m[32mimport android.util.Log;[m
[32m+[m
[32m+[m[32mpublic class AlarmServiceBroadcastReciever extends BroadcastReceiver {[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void onReceive(Context context, Intent intent) {[m
[32m+[m		[32mLog.d("AlarmServiceBroadcastReciever", "onReceive()");[m
[32m+[m		[32mIntent serviceIntent = new Intent(context, AlarmService.class);[m
[32m+[m		[32mcontext.startService(serviceIntent);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/z/blast/workbox/telephony/PhoneStateChangedBroadcastReciever.java b/app/src/main/java/com/z/blast/workbox/telephony/PhoneStateChangedBroadcastReciever.java[m
[1mnew file mode 100644[m
[1mindex 0000000..c743daf[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/z/blast/workbox/telephony/PhoneStateChangedBroadcastReciever.java[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32m/* Copyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m * http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m */[m
[32m+[m[32mpackage com.z.blast.workbox.telephony;[m
[32m+[m
[32m+[m[32mimport android.content.BroadcastReceiver;[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.content.Intent;[m
[32m+[m[32mimport android.util.Log;[m
[32m+[m
[32m+[m[32mpublic class PhoneStateChangedBroadcastReciever extends BroadcastReceiver {[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void onReceive(Context context, Intent intent) {[m
[32m+[m		[32mLog.d(getClass().getSimpleName(), "onReceive()");[m
[32m+[m[41m		[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_base_v3_7_3.so b/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_base_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..2283ed3[m
Binary files /dev/null and b/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_base_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_cloud_v3_7_3.so b/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_cloud_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..7b2e62b[m
Binary files /dev/null and b/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_cloud_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_map_v3_7_3.so b/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_map_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..60a3aa0[m
Binary files /dev/null and b/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_map_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_radar_v3_7_3.so b/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_radar_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..4e4f6ff[m
Binary files /dev/null and b/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_radar_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_search_v3_7_3.so b/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_search_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..d8e453a[m
Binary files /dev/null and b/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_search_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_util_v3_7_3.so b/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_util_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..290adf5[m
Binary files /dev/null and b/app/src/main/jniLibs/arm64-v8a/libBaiduMapSDK_util_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/arm64-v8a/liblocSDK6a.so b/app/src/main/jniLibs/arm64-v8a/liblocSDK6a.so[m
[1mnew file mode 100644[m
[1mindex 0000000..1bbcc59[m
Binary files /dev/null and b/app/src/main/jniLibs/arm64-v8a/liblocSDK6a.so differ
[1mdiff --git a/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_base_v3_7_3.so b/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_base_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..05d1be0[m
Binary files /dev/null and b/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_base_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_cloud_v3_7_3.so b/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_cloud_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..fda2848[m
Binary files /dev/null and b/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_cloud_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_map_v3_7_3.so b/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_map_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..7e0212b[m
Binary files /dev/null and b/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_map_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_radar_v3_7_3.so b/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_radar_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..3740347[m
Binary files /dev/null and b/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_radar_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_search_v3_7_3.so b/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_search_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..9273510[m
Binary files /dev/null and b/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_search_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_util_v3_7_3.so b/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_util_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..e257dab[m
Binary files /dev/null and b/app/src/main/jniLibs/armeabi-v7a/libBaiduMapSDK_util_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/armeabi-v7a/liblocSDK6a.so b/app/src/main/jniLibs/armeabi-v7a/liblocSDK6a.so[m
[1mnew file mode 100644[m
[1mindex 0000000..56278b2[m
Binary files /dev/null and b/app/src/main/jniLibs/armeabi-v7a/liblocSDK6a.so differ
[1mdiff --git a/app/src/main/jniLibs/armeabi/libBaiduMapSDK_base_v3_7_3.so b/app/src/main/jniLibs/armeabi/libBaiduMapSDK_base_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..f93ef7e[m
Binary files /dev/null and b/app/src/main/jniLibs/armeabi/libBaiduMapSDK_base_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/armeabi/libBaiduMapSDK_cloud_v3_7_3.so b/app/src/main/jniLibs/armeabi/libBaiduMapSDK_cloud_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..884f6ca[m
Binary files /dev/null and b/app/src/main/jniLibs/armeabi/libBaiduMapSDK_cloud_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/armeabi/libBaiduMapSDK_map_v3_7_3.so b/app/src/main/jniLibs/armeabi/libBaiduMapSDK_map_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..f286844[m
Binary files /dev/null and b/app/src/main/jniLibs/armeabi/libBaiduMapSDK_map_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/armeabi/libBaiduMapSDK_radar_v3_7_3.so b/app/src/main/jniLibs/armeabi/libBaiduMapSDK_radar_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..834480b[m
Binary files /dev/null and b/app/src/main/jniLibs/armeabi/libBaiduMapSDK_radar_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/armeabi/libBaiduMapSDK_search_v3_7_3.so b/app/src/main/jniLibs/armeabi/libBaiduMapSDK_search_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..883cafa[m
Binary files /dev/null and b/app/src/main/jniLibs/armeabi/libBaiduMapSDK_search_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/armeabi/libBaiduMapSDK_util_v3_7_3.so b/app/src/main/jniLibs/armeabi/libBaiduMapSDK_util_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..d0df43e[m
Binary files /dev/null and b/app/src/main/jniLibs/armeabi/libBaiduMapSDK_util_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/armeabi/liblocSDK6a.so b/app/src/main/jniLibs/armeabi/liblocSDK6a.so[m
[1mnew file mode 100644[m
[1mindex 0000000..83f7f12[m
Binary files /dev/null and b/app/src/main/jniLibs/armeabi/liblocSDK6a.so differ
[1mdiff --git a/app/src/main/jniLibs/x86/libBaiduMapSDK_base_v3_7_3.so b/app/src/main/jniLibs/x86/libBaiduMapSDK_base_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..e6b8818[m
Binary files /dev/null and b/app/src/main/jniLibs/x86/libBaiduMapSDK_base_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/x86/libBaiduMapSDK_cloud_v3_7_3.so b/app/src/main/jniLibs/x86/libBaiduMapSDK_cloud_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..5a58df2[m
Binary files /dev/null and b/app/src/main/jniLibs/x86/libBaiduMapSDK_cloud_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/x86/libBaiduMapSDK_map_v3_7_3.so b/app/src/main/jniLibs/x86/libBaiduMapSDK_map_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..22f269f[m
Binary files /dev/null and b/app/src/main/jniLibs/x86/libBaiduMapSDK_map_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/x86/libBaiduMapSDK_radar_v3_7_3.so b/app/src/main/jniLibs/x86/libBaiduMapSDK_radar_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..23a2dc9[m
Binary files /dev/null and b/app/src/main/jniLibs/x86/libBaiduMapSDK_radar_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/x86/libBaiduMapSDK_search_v3_7_3.so b/app/src/main/jniLibs/x86/libBaiduMapSDK_search_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..1cdf0bf[m
Binary files /dev/null and b/app/src/main/jniLibs/x86/libBaiduMapSDK_search_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/x86/libBaiduMapSDK_util_v3_7_3.so b/app/src/main/jniLibs/x86/libBaiduMapSDK_util_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..f2df4aa[m
Binary files /dev/null and b/app/src/main/jniLibs/x86/libBaiduMapSDK_util_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/x86/liblocSDK6a.so b/app/src/main/jniLibs/x86/liblocSDK6a.so[m
[1mnew file mode 100644[m
[1mindex 0000000..2809bc1[m
Binary files /dev/null and b/app/src/main/jniLibs/x86/liblocSDK6a.so differ
[1mdiff --git a/app/src/main/jniLibs/x86_64/libBaiduMapSDK_base_v3_7_3.so b/app/src/main/jniLibs/x86_64/libBaiduMapSDK_base_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..cd2837d[m
Binary files /dev/null and b/app/src/main/jniLibs/x86_64/libBaiduMapSDK_base_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/x86_64/libBaiduMapSDK_cloud_v3_7_3.so b/app/src/main/jniLibs/x86_64/libBaiduMapSDK_cloud_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..0b700b9[m
Binary files /dev/null and b/app/src/main/jniLibs/x86_64/libBaiduMapSDK_cloud_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/x86_64/libBaiduMapSDK_map_v3_7_3.so b/app/src/main/jniLibs/x86_64/libBaiduMapSDK_map_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..a7be1ff[m
Binary files /dev/null and b/app/src/main/jniLibs/x86_64/libBaiduMapSDK_map_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/x86_64/libBaiduMapSDK_radar_v3_7_3.so b/app/src/main/jniLibs/x86_64/libBaiduMapSDK_radar_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..36909ff[m
Binary files /dev/null and b/app/src/main/jniLibs/x86_64/libBaiduMapSDK_radar_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/x86_64/libBaiduMapSDK_search_v3_7_3.so b/app/src/main/jniLibs/x86_64/libBaiduMapSDK_search_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..9ec180b[m
Binary files /dev/null and b/app/src/main/jniLibs/x86_64/libBaiduMapSDK_search_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/x86_64/libBaiduMapSDK_util_v3_7_3.so b/app/src/main/jniLibs/x86_64/libBaiduMapSDK_util_v3_7_3.so[m
[1mnew file mode 100644[m
[1mindex 0000000..f423c49[m
Binary files /dev/null and b/app/src/main/jniLibs/x86_64/libBaiduMapSDK_util_v3_7_3.so differ
[1mdiff --git a/app/src/main/jniLibs/x86_64/liblocSDK6a.so b/app/src/main/jniLibs/x86_64/liblocSDK6a.so[m
[1mnew file mode 100644[m
[1mindex 0000000..ec3175e[m
Binary files /dev/null and b/app/src/main/jniLibs/x86_64/liblocSDK6a.so differ
[1mdiff --git a/app/src/main/res/drawable-hdpi/advanced.png b/app/src/main/res/drawable-hdpi/advanced.png[m
[1mnew file mode 100644[m
[1mindex 0000000..d4873af[m
Binary files /dev/null and b/app/src/main/res/drawable-hdpi/advanced.png differ
[1mdiff --git a/app/src/main/res/drawable-hdpi/btn_keyboard_key_dark_normal_holo.9.png b/app/src/main/res/drawable-hdpi/btn_keyboard_key_dark_normal_holo.9.png[m
[1mnew file mode 100644[m
[1mindex 0000000..19bde28[m
Binary files /dev/null and b/app/src/main/res/drawable-hdpi/btn_keyboard_key_dark_normal_holo.9.png differ
[1mdiff --git a/app/src/main/res/drawable-hdpi/btn_keyboard_key_dark_pressed_holo.9.png b/app/src/main/res/drawable-hdpi/btn_keyboard_key_dark_pressed_holo.9.png[m
[1mnew file mode 100644[m
[1mindex 0000000..90abe39[m
Binary files /dev/null and b/app/src/main/res/drawable-hdpi/btn_keyboard_key_dark_pressed_holo.9.png differ
[1mdiff --git a/app/src/main/res/drawable-hdpi/btn_keyboard_key_light_normal_holo.9.png b/app/src/main/res/drawable-hdpi/btn_keyboard_key_light_normal_holo.9.png[m
[1mnew file mode 100644[m
[1mindex 0000000..713bfc1[m
Binary files /dev/null and b/app/src/main/res/drawable-hdpi/btn_keyboard_key_light_normal_holo.9.png differ
[1mdiff --git a/app/src/main/res/drawable-hdpi/btn_keyboard_key_light_pressed_holo.9.png b/app/src/main/res/drawable-hdpi/btn_keyboard_key_light_pressed_holo.9.png[m
[1mnew file mode 100644[m
[1mindex 0000000..6768241[m
Binary files /dev/null and b/app/src/main/res/drawable-hdpi/btn_keyboard_key_light_pressed_holo.9.png differ
[1mdiff --git a/app/src/main/res/drawable-hdpi/calc_clear_symbol.png b/app/src/main/res/drawable-hdpi/calc_clear_symbol.png[m
[1mnew file mode 100644[m
[1mindex 0000000..3ce9dda[m
Binary files /dev/null and b/app/src/main/res/drawable-hdpi/calc_clear_symbol.png differ
[1mdiff --git a/app/src/main/res/drawable-hdpi/calculator_input_field.9.png b/app/src/main/res/drawable-hdpi/calculator_input_field.9.png[m
[1mnew file mode 100644[m
[1mindex 0000000..49770cd[m
Binary files /dev/null and b/app/src/main/res/drawable-hdpi/calculator_input_field.9.png differ
[1mdiff --git a/app/src/main/res/drawable-hdpi/clear_history.png b/app/src/main/res/drawable-hdpi/clear_history.png[m
[1mnew file mode 100644[m
[1mindex 0000000..14c2ef0[m
Binary files /dev/null and b/app/src/main/res/drawable-hdpi/clear_history.png differ
[1mdiff --git a/app/src/main/res/drawable-hdpi/ic_menu_overflow.png b/app/src/main/res/drawable-hdpi/ic_menu_overflow.png[m
[1mnew file mode 100644[m
[1mindex 0000000..a12aedf[m
Binary files /dev/null and b/app/src/main/res/drawable-hdpi/ic_menu_overflow.png differ
[1mdiff --git a/app/src/main/res/drawable-hdpi/simple.png b/app/src/main/res/drawable-hdpi/simple.png[m
[1mnew file mode 100644[m
[1mindex 0000000..d0e55fc[m
Binary files /dev/null and b/app/src/main/res/drawable-hdpi/simple.png differ
[1mdiff --git a/app/src/main/res/drawable-mdpi/advanced.png b/app/src/main/res/drawable-mdpi/advanced.png[m
[1mnew file mode 100644[m
[1mindex 0000000..925d3b4[m
Binary files /dev/null and b/app/src/main/res/drawable-mdpi/advanced.png differ
[1mdiff --git a/app/src/main/res/drawable-mdpi/btn_keyboard_key_dark_normal_holo.9.png b/app/src/main/res/drawable-mdpi/btn_keyboard_key_dark_normal_holo.9.png[m
[1mnew file mode 100644[m
[1mindex 0000000..4f27350[m
Binary files /dev/null and b/app/src/main/res/drawable-mdpi/btn_keyboard_key_dark_normal_holo.9.png differ
[1mdiff --git a/app/src/main/res/drawable-mdpi/btn_keyboard_key_dark_pressed_holo.9.png b/app/src/main/res/drawable-mdpi/btn_keyboard_key_dark_pressed_holo.9.png[m
[1mnew file mode 100644[m
[1mindex 0000000..4a92b80[m
Binary files /dev/null and b/app/src/main/res/drawable-mdpi/btn_keyboard_key_dark_pressed_holo.9.png differ
[1mdiff --git a/app/src/main/res/drawable-mdpi/btn_keyboard_key_light_normal_holo.9.png b/app/src/main/res/drawable-mdpi/btn_keyboard_key_light_normal_holo.9.png[m
[1mnew file mode 100644[m
[1mindex 0000000..37966f5[m
Binary files /dev/null and b/app/src/main/res/drawable-mdpi/btn_keyboard_key_light_normal_holo.9.png differ
[1mdiff --git a/app/src/main/res/drawable-mdpi/btn_keyboard_key_light_pressed_holo.9.png b/app/src/main/res/drawable-mdpi/btn_keyboard_key_light_pressed_holo.9.png[m
[1mnew file mode 100644[m
[1mindex 0000000..0493859[m
Binary files /dev/null and b/app/src/main/res/drawable-mdpi/btn_keyboard_key_light_pressed_holo.9.png differ
[1mdiff --git a/app/src/main/res/drawable-mdpi/calc_clear_symbol.png b/app/src/main/res/drawable-mdpi/calc_clear_symbol.png[m
[1mnew file mode 100644[m
[1mindex 0000000..ac301e2[m
Binary files /dev/null and b/app/src/main/res/drawable-mdpi/calc_clear_symbol.png differ
[1mdiff --git a/app/src/main/res/drawable-mdpi/calculator_input_field.9.png b/app/src/main/res/drawable-mdpi/calculator_input_field.9.png[m
[1mnew file mode 100644[m
[1mindex 0000000..6146973[m
Binary files /dev/null and b/app/src/main/res/drawable-mdpi/calculator_input_field.9.png differ
[1mdiff --git a/app/src/main/res/drawable-mdpi/clear_history.png b/app/src/main/res/drawable-mdpi/clear_history.png[m
[1mnew file mode 100644[m
[1mindex 0000000..b31e821[m
Binary files /dev/null and b/app/src/main/res/drawable-mdpi/clear_history.png differ
[1mdiff --git a/app/src/main/res/drawable-mdpi/ic_menu_overflow.png b/app/src/main/res/drawable-mdpi/ic_menu_overflow.png[m
[1mnew file mode 100644[m
[1mindex 0000000..4a3bde3[m
Binary files /dev/null and b/app/src/main/res/drawable-mdpi/ic_menu_overflow.png differ
[1mdiff --git a/app/src/main/res/drawable-mdpi/simple.png b/app/src/main/res/drawable-mdpi/simple.png[m
[1mnew file mode 100644[m
[1mindex 0000000..2a015c5[m
Binary files /dev/null and b/app/src/main/res/drawable-mdpi/simple.png differ
[1mdiff --git a/app/src/main/res/drawable-sw600dp-hdpi/calc_clear_symbol.png b/app/src/main/res/drawable-sw600dp-hdpi/calc_clear_symbol.png[m
[1mnew file mode 100644[m
[1mindex 0000000..8ffc30e[m
Binary files /dev/null and b/app/src/main/res/drawable-sw600dp-hdpi/calc_clear_symbol.png differ
[1mdiff --git a/app/src/main/res/drawable-sw600dp-hdpi/calculator_input_field.9.png b/app/src/main/res/drawable-sw600dp-hdpi/calculator_input_field.9.png[m
[1mnew file mode 100644[m
[1mindex 0000000..555873c[m
Binary files /dev/null and b/app/src/main/res/drawable-sw600dp-hdpi/calculator_input_field.9.png differ
[1mdiff --git a/app/src/main/res/drawable-sw600dp-mdpi/calc_clear_symbol.png b/app/src/main/res/drawable-sw600dp-mdpi/calc_clear_symbol.png[m
[1mnew file mode 100644[m
[1mindex 0000000..60dfecc[m
Binary files /dev/null and b/app/src/main/res/drawable-sw600dp-mdpi/calc_clear_symbol.png differ
[1mdiff --git a/app/src/main/res/drawable-sw600dp-mdpi/calculator_input_field.9.png b/app/src/main/res/drawable-sw600dp-mdpi/calculator_input_field.9.png[m
[1mnew file mode 100644[m
[1mindex 0000000..679d4c8[m
Binary files /dev/null and b/app/src/main/res/drawable-sw600dp-mdpi/calculator_input_field.9.png differ
[1mdiff --git a/app/src/main/res/drawable-xhdpi/btn_keyboard_key_dark_normal_holo.9.png b/app/src/main/res/drawable-xhdpi/btn_keyboard_key_dark_normal_holo.9.png[m
[1mnew file mode 100644[m
[1mindex 0000000..1db8b6f[m
Binary files /dev/null and b/app/src/main/res/drawable-xhdpi/btn_keyboard_key_dark_normal_holo.9.png differ
[1mdiff --git a/app/src/main/res/drawable-xhdpi/btn_keyboard_key_dark_pressed_holo.9.png b/app/src/main/res/drawable-xhdpi/btn_keyboard_key_dark_pressed_holo.9.png[m
[1mnew file mode 100644[m
[1mindex 0000000..84d1739[m
Binary files /dev/null and b/app/src/main/res/drawable-xhdpi/btn_keyboard_key_dark_pressed_holo.9.png differ
[1mdiff --git a/app/src/main/res/drawable-xhdpi/btn_keyboard_key_light_normal_holo.9.png b/app/src/main/res/drawable-xhdpi/btn_keyboard_key_light_normal_holo.9.png[m
[1mnew file mode 100644[m
[1mindex 0000000..1c3293d[m
Binary files /dev/null and b/app/src/main/res/drawable-xhdpi/btn_keyboard_key_light_normal_holo.9.png differ
[1mdiff --git a/app/src/main/res/drawable-xhdpi/btn_keyboard_key_light_pressed_holo.9.png b/app/src/main/res/drawable-xhdpi/btn_keyboard_key_light_pressed_holo.9.png[m
[1mnew file mode 100644[m
[1mindex 0000000..f770962[m
Binary files /dev/null and b/app/src/main/res/drawable-xhdpi/btn_keyboard_key_light_pressed_holo.9.png differ
[1mdiff --git a/app/src/main/res/drawable-xhdpi/calc_clear_symbol.png b/app/src/main/res/drawable-xhdpi/calc_clear_symbol.png[m
[1mnew file mode 100644[m
[1mindex 0000000..570ff39[m
Binary files /dev/null and b/app/src/main/res/drawable-xhdpi/calc_clear_symbol.png differ
[1mdiff --git a/app/src/main/res/drawable-xhdpi/calculator_input_field.9.png b/app/src/main/res/drawable-xhdpi/calculator_input_field.9.png[m
[1mnew file mode 100644[m
[1mindex 0000000..b6adbbf[m
Binary files /dev/null and b/app/src/main/res/drawable-xhdpi/calculator_input_field.9.png differ
[1mdiff --git a/app/src/main/res/drawable-xhdpi/ic_menu_overflow.png b/app/src/main/res/drawable-xhdpi/ic_menu_overflow.png[m
[1mnew file mode 100644[m
[1mindex 0000000..715cff8[m
Binary files /dev/null and b/app/src/main/res/drawable-xhdpi/ic_menu_overflow.png differ
[1mdiff --git a/app/src/main/res/drawable/alarmclock_128.png b/app/src/main/res/drawable/alarmclock_128.png[m
[1mnew file mode 100644[m
[1mindex 0000000..e387190[m
Binary files /dev/null and b/app/src/main/res/drawable/alarmclock_128.png differ
[1mdiff --git a/app/src/main/res/drawable/background1.png b/app/src/main/res/drawable/background1.png[m
[1mnew file mode 100644[m
[1mindex 0000000..afe6caa[m
Binary files /dev/null and b/app/src/main/res/drawable/background1.png differ
[1mdiff --git a/app/src/main/res/drawable/bg_calculator.png b/app/src/main/res/drawable/bg_calculator.png[m
[1mnew file mode 100644[m
[1mindex 0000000..302f5b0[m
Binary files /dev/null and b/app/src/main/res/drawable/bg_calculator.png differ
[1mdiff --git a/app/src/main/res/drawable/btn_digit.xml b/app/src/main/res/drawable/btn_digit.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..e22d16e[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/drawable/btn_digit.xml[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<!-- Copyright (C) 2011 The Android Open Source Project[m
[32m+[m
[32m+[m[32m     Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m     you may not use this file except in compliance with the License.[m
[32m+[m[32m     You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m          http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m     Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m     distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m     See the License for the specific language governing permissions and[m
[32m+[m[32m     limitations under the License.[m
[32m+[m[32m-->[m
[32m+[m
[32m+[m[32m<selector[m
[32m+[m[32m    xmlns:android="http://schemas.android.com/apk/res/android">[m
[32m+[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:state_pressed="true"[m
[32m+[m[32m        android:drawable="@drawable/btn_digit_pressed" />[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:drawable="@drawable/btn_digit_normal" />[m
[32m+[m[32m</selector>[m
[1mdiff --git a/app/src/main/res/drawable/btn_digit_normal.png b/app/src/main/res/drawable/btn_digit_normal.png[m
[1mnew file mode 100644[m
[1mindex 0000000..84ffb96[m
Binary files /dev/null and b/app/src/main/res/drawable/btn_digit_normal.png differ
[1mdiff --git a/app/src/main/res/drawable/btn_digit_pressed.png b/app/src/main/res/drawable/btn_digit_pressed.png[m
[1mnew file mode 100644[m
[1mindex 0000000..4b07735[m
Binary files /dev/null and b/app/src/main/res/drawable/btn_digit_pressed.png differ
[1mdiff --git a/app/src/main/res/drawable/btn_function.xml b/app/src/main/res/drawable/btn_function.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..25a3e66[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/drawable/btn_function.xml[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<!-- Copyright (C) 2011 The Android Open Source Project[m
[32m+[m
[32m+[m[32m     Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m     you may not use this file except in compliance with the License.[m
[32m+[m[32m     You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m          http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m     Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m     distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m     See the License for the specific language governing permissions and[m
[32m+[m[32m     limitations under the License.[m
[32m+[m[32m-->[m
[32m+[m
[32m+[m[32m<selector[m
[32m+[m[32m    xmlns:android="http://schemas.android.com/apk/res/android">[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:state_pressed="true"[m
[32m+[m[32m        android:drawable="@drawable/btn_keyboard_key_dark_pressed_holo" />[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:drawable="@drawable/btn_keyboard_key_dark_normal_holo" />[m
[32m+[m[32m</selector>[m
[1mdiff --git a/app/src/main/res/drawable/bubble.png b/app/src/main/res/drawable/bubble.png[m
[1mnew file mode 100644[m
[1mindex 0000000..e0ec771[m
Binary files /dev/null and b/app/src/main/res/drawable/bubble.png differ
[1mdiff --git a/app/src/main/res/drawable/calculator_128.png b/app/src/main/res/drawable/calculator_128.png[m
[1mnew file mode 100644[m
[1mindex 0000000..6d187a0[m
Binary files /dev/null and b/app/src/main/res/drawable/calculator_128.png differ
[1mdiff --git a/app/src/main/res/drawable/calendar_128.png b/app/src/main/res/drawable/calendar_128.png[m
[1mnew file mode 100644[m
[1mindex 0000000..ece1afe[m
Binary files /dev/null and b/app/src/main/res/drawable/calendar_128.png differ
[1mdiff --git a/app/src/main/res/drawable/clock_128.png b/app/src/main/res/drawable/clock_128.png[m
[1mnew file mode 100644[m
[1mindex 0000000..d5eb35a[m
Binary files /dev/null and b/app/src/main/res/drawable/clock_128.png differ
[1mdiff --git a/app/src/main/res/drawable/closeflash.png b/app/src/main/res/drawable/closeflash.png[m
[1mnew file mode 100644[m
[1mindex 0000000..a6eaa4f[m
Binary files /dev/null and b/app/src/main/res/drawable/closeflash.png differ
[1mdiff --git a/app/src/main/res/drawable/compass_128.png b/app/src/main/res/drawable/compass_128.png[m
[1mnew file mode 100644[m
[1mindex 0000000..51990c1[m
Binary files /dev/null and b/app/src/main/res/drawable/compass_128.png differ
[1mdiff --git a/app/src/main/res/drawable/display.png b/app/src/main/res/drawable/display.png[m
[1mnew file mode 100644[m
[1mindex 0000000..32d3289[m
Binary files /dev/null and b/app/src/main/res/drawable/display.png differ
[1mdiff --git a/app/src/main/res/drawable/flag_24.png b/app/src/main/res/drawable/flag_24.png[m
[1mnew file mode 100644[m
[1mindex 0000000..187ae29[m
Binary files /dev/null and b/app/src/main/res/drawable/flag_24.png differ
[1mdiff --git a/app/src/main/res/drawable/flashlight_128.png b/app/src/main/res/drawable/flashlight_128.png[m
[1mnew file mode 100644[m
[1mindex 0000000..bdb3e8a[m
Binary files /dev/null and b/app/src/main/res/drawable/flashlight_128.png differ
[1mdiff --git a/app/src/main/res/drawable/glyphicons_016_bin.png b/app/src/main/res/drawable/glyphicons_016_bin.png[m
[1mnew file mode 100644[m
[1mindex 0000000..664ebf7[m
Binary files /dev/null and b/app/src/main/res/drawable/glyphicons_016_bin.png differ
[1mdiff --git a/app/src/main/res/drawable/glyphicons_049_star.png b/app/src/main/res/drawable/glyphicons_049_star.png[m
[1mnew file mode 100644[m
[1mindex 0000000..cf1ae44[m
Binary files /dev/null and b/app/src/main/res/drawable/glyphicons_049_star.png differ
[1mdiff --git a/app/src/main/res/drawable/glyphicons_340_globe.png b/app/src/main/res/drawable/glyphicons_340_globe.png[m
[1mnew file mode 100644[m
[1mindex 0000000..dbac8b1[m
Binary files /dev/null and b/app/src/main/res/drawable/glyphicons_340_globe.png differ
[1mdiff --git a/app/src/main/res/drawable/glyphicons_432_plus.png b/app/src/main/res/drawable/glyphicons_432_plus.png[m
[1mnew file mode 100644[m
[1mindex 0000000..96dd8f2[m
Binary files /dev/null and b/app/src/main/res/drawable/glyphicons_432_plus.png differ
[1mdiff --git a/app/src/main/res/drawable/glyphicons_443_floppy_disk.png b/app/src/main/res/drawable/glyphicons_443_floppy_disk.png[m
[1mnew file mode 100644[m
[1mindex 0000000..6e783b2[m
Binary files /dev/null and b/app/src/main/res/drawable/glyphicons_443_floppy_disk.png differ
[1mdiff --git a/app/src/main/res/drawable/gradienter_128.png b/app/src/main/res/drawable/gradienter_128.png[m
[1mnew file mode 100644[m
[1mindex 0000000..620d8b2[m
Binary files /dev/null and b/app/src/main/res/drawable/gradienter_128.png differ
[1mdiff --git a/app/src/main/res/drawable/map_128.png b/app/src/main/res/drawable/map_128.png[m
[1mnew file mode 100644[m
[1mindex 0000000..b08145f[m
Binary files /dev/null and b/app/src/main/res/drawable/map_128.png differ
[1mdiff --git a/app/src/main/res/drawable/mycompass.png b/app/src/main/res/drawable/mycompass.png[m
[1mnew file mode 100644[m
[1mindex 0000000..dab11fc[m
Binary files /dev/null and b/app/src/main/res/drawable/mycompass.png differ
[1mdiff --git a/app/src/main/res/drawable/note_128.png b/app/src/main/res/drawable/note_128.png[m
[1mnew file mode 100644[m
[1mindex 0000000..01ccbca[m
Binary files /dev/null and b/app/src/main/res/drawable/note_128.png differ
[1mdiff --git a/app/src/main/res/drawable/openflash.png b/app/src/main/res/drawable/openflash.png[m
[1mnew file mode 100644[m
[1mindex 0000000..a8cfa31[m
Binary files /dev/null and b/app/src/main/res/drawable/openflash.png differ
[1mdiff --git a/app/src/main/res/drawable/ruler_128.png b/app/src/main/res/drawable/ruler_128.png[m
[1mnew file mode 100644[m
[1mindex 0000000..2f85232[m
Binary files /dev/null and b/app/src/main/res/drawable/ruler_128.png differ
[1mdiff --git a/app/src/main/res/drawable/toolbox_72.png b/app/src/main/res/drawable/toolbox_72.png[m
[1mnew file mode 100644[m
[1mindex 0000000..5d39836[m
Binary files /dev/null and b/app/src/main/res/drawable/toolbox_72.png differ
[1mdiff --git a/app/src/main/res/drawable/weather_128.png b/app/src/main/res/drawable/weather_128.png[m
[1mnew file mode 100644[m
[1mindex 0000000..1cb36a1[m
Binary files /dev/null and b/app/src/main/res/drawable/weather_128.png differ
[1mdiff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..42ee62c[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/activity_main.xml[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:orientation="vertical"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    android:background="#ffffff">[m
[32m+[m[32m    <ImageView[m
[32m+[m[32m        android:layout_width="wrap_content"[m
[32m+[m[32m        android:layout_height="180dp"[m
[32m+[m[32m        android:scaleType="fitXY"[m
[32m+[m[32m        android:background="#fff"[m
[32m+[m[32m        android:src="@drawable/background1"[m
[32m+[m[32m        />[m
[32m+[m[32m    <GridView[m
[32m+[m[32m        android:layout_marginTop="10pt"[m
[32m+[m[32m        android:id="@+id/grid01"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="match_parent"[m
[32m+[m[32m        android:numColumns="3"[m
[32m+[m[32m        android:gravity="center"[m
[32m+[m[32m        android:horizontalSpacing="10pt"[m
[32m+[m[32m        android:verticalSpacing="10pt"></GridView>[m
[32m+[m
[32m+[m[32m</LinearLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/advanced_pad.xml b/app/src/main/res/layout/advanced_pad.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..76a0d6a[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/advanced_pad.xml[m
[36m@@ -0,0 +1,128 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m
[32m+[m[32m<!--[m
[32m+[m[32m/*[m
[32m+[m[32m* Copyright (C) 2011, The Android Open Source Project[m
[32m+[m[32m*[m
[32m+[m[32m* Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m* you may not use this file except in compliance with the License.[m
[32m+[m[32m* You may obtain a copy of the License at[m
[32m+[m[32m*[m
[32m+[m[32m*     http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m*[m
[32m+[m[32m* Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m* distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m* See the License for the specific language governing permissions and[m
[32m+[m[32m* limitations under the License.[m
[32m+[m[32m*/[m
[32m+[m[32m-->[m
[32m+[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m              android:id="@+id/advancedPad"[m
[32m+[m[32m              android:layout_width="match_parent"[m
[32m+[m[32m              android:layout_height="match_parent"[m
[32m+[m[32m              android:orientation="vertical"[m
[32m+[m[32m              android:layout_gravity="center"[m
[32m+[m[32m              >[m
[32m+[m
[32m+[m[32m    <LinearLayout[m
[32m+[m[32m        android:layout_weight="1"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="0dp"[m
[32m+[m[32m        >[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/sin"[m
[32m+[m[32m            android:text="@string/sin"[m
[32m+[m[32m            style="@style/button_small_style"[m
[32m+[m[32m            android:contentDescription="@string/sinDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/cos"[m
[32m+[m[32m            android:text="@string/cos"[m
[32m+[m[32m            style="@style/button_small_style"[m
[32m+[m[32m            android:contentDescription="@string/cosDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/tan"[m
[32m+[m[32m            android:text="@string/tan"[m
[32m+[m[32m            style="@style/button_small_style"[m
[32m+[m[32m            android:contentDescription="@string/tanDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m    </LinearLayout>[m
[32m+[m
[32m+[m[32m    <LinearLayout[m
[32m+[m[32m        android:layout_weight="1"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="0dp"[m
[32m+[m[32m        >[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/ln"[m
[32m+[m[32m            android:text="@string/ln"[m
[32m+[m[32m            style="@style/button_small_style"[m
[32m+[m[32m            android:contentDescription="@string/lnDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/lg"[m
[32m+[m[32m            android:text="@string/lg"[m
[32m+[m[32m            style="@style/button_small_style"[m
[32m+[m[32m            android:contentDescription="@string/lgDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/factorial"[m
[32m+[m[32m            android:text="@string/factorial"[m
[32m+[m[32m            style="@style/button_style"[m
[32m+[m[32m            android:contentDescription="@string/factorialDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m    </LinearLayout>[m
[32m+[m
[32m+[m[32m    <LinearLayout[m
[32m+[m[32m        android:layout_weight="1"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="0dp"[m
[32m+[m[32m        >[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/pi"[m
[32m+[m[32m            android:text="@string/pi"[m
[32m+[m[32m            style="@style/button_style"[m
[32m+[m[32m            android:contentDescription="@string/piDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/e"[m
[32m+[m[32m            android:text="@string/e"[m
[32m+[m[32m            style="@style/button_style"[m
[32m+[m[32m            android:contentDescription="@string/eDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/power"[m
[32m+[m[32m            android:text="@string/power"[m
[32m+[m[32m            style="@style/button_style"[m
[32m+[m[32m            android:contentDescription="@string/powerDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m    </LinearLayout>[m
[32m+[m
[32m+[m[32m    <LinearLayout[m
[32m+[m[32m        android:layout_weight="1"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="0dp"[m
[32m+[m[32m        >[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/leftParen"[m
[32m+[m[32m            android:text="@string/leftParen"[m
[32m+[m[32m            style="@style/button_style"[m
[32m+[m[32m            android:contentDescription="@string/leftParenDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/rightParen"[m
[32m+[m[32m            android:text="@string/rightParen"[m
[32m+[m[32m            style="@style/button_style"[m
[32m+[m[32m            android:contentDescription="@string/rightParenDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/sqrt"[m
[32m+[m[32m            android:text="@string/sqrt"[m
[32m+[m[32m            style="@style/button_style"[m
[32m+[m[32m            android:contentDescription="@string/sqrtDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m    </LinearLayout>[m
[32m+[m[32m</LinearLayout>[m
[1mdiff --git a/app/src/main/res/layout/alarm_activity.xml b/app/src/main/res/layout/alarm_activity.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..652473f[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/alarm_activity.xml[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<!--[m[41m [m
[32m+[m[32mCopyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m
[32m+[m[32mLicensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32myou may not use this file except in compliance with the License.[m
[32m+[m[32mYou may obtain a copy of the License at[m
[32m+[m
[32m+[m[32mhttp://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32mUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32mWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m-->[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    xmlns:tools="http://schemas.android.com/tools"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    android:orientation="vertical"[m
[32m+[m[32m    tools:context=".AlarmActivity" >[m
[32m+[m
[32m+[m[32m    <ListView[m
[32m+[m[32m        android:id="@android:id/list"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="wrap_content"[m
[32m+[m[32m        android:longClickable="true" >[m
[32m+[m[32m    </ListView>[m
[32m+[m
[32m+[m[32m    <TextView[m
[32m+[m[32m        android:id="@android:id/empty"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="wrap_content"[m
[32m+[m[32m        android:padding="10dp"[m
[32m+[m[32m        android:text="@string/no_alarms" />[m
[32m+[m
[32m+[m[32m</LinearLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/alarm_alert.xml b/app/src/main/res/layout/alarm_alert.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..c503057[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/alarm_alert.xml[m
[36m@@ -0,0 +1,191 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<!--[m[41m [m
[32m+[m[32mCopyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m
[32m+[m[32mLicensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32myou may not use this file except in compliance with the License.[m
[32m+[m[32mYou may obtain a copy of the License at[m
[32m+[m
[32m+[m[32mhttp://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32mUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32mWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m-->[m
[32m+[m[32m<TableLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent" >[m
[32m+[m
[32m+[m[32m    <TableRow[m
[32m+[m[32m        android:id="@+id/tableRow0"[m
[32m+[m[32m        android:layout_width="wrap_content"[m
[32m+[m[32m        android:layout_height="wrap_content" >[m
[32m+[m
[32m+[m[32m        <TextView[m
[32m+[m[32m            android:id="@+id/textView1"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="wrap_content"[m
[32m+[m[32m            android:layout_weight="1"[m
[32m+[m[32m            android:textAppearance="?android:attr/textAppearanceLarge"/>[m
[32m+[m
[32m+[m[32m    </TableRow>[m
[32m+[m
[32m+[m[32m    <TableRow[m
[32m+[m[32m        android:id="@+id/tableRow1"[m
[32m+[m[32m        android:layout_width="wrap_content"[m
[32m+[m[32m        android:layout_height="0dp"[m
[32m+[m[32m        android:layout_weight="1" >[m
[32m+[m
[32m+[m[32m        <TextView[m
[32m+[m[32m            android:id="@+id/textView2"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="wrap_content"[m
[32m+[m[32m            android:layout_weight="1"[m
[32m+[m[32m            android:textAppearance="?android:attr/textAppearanceLarge"[m
[32m+[m[32m            android:textColor="@android:color/black" />[m
[32m+[m
[32m+[m[32m    </TableRow>[m
[32m+[m
[32m+[m[32m    <TableRow[m
[32m+[m[32m        android:id="@+id/tableRow2"[m
[32m+[m[32m        android:layout_width="wrap_content"[m
[32m+[m[32m        android:layout_height="0dp"[m
[32m+[m[32m        android:layout_weight="1" >[m
[32m+[m
[32m+[m[32m        <Button[m
[32m+[m[32m            android:id="@+id/Button1"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="fill_parent"[m
[32m+[m[32m            android:layout_weight="1"[m
[32m+[m[32m            android:tag="1"[m
[32m+[m[32m            android:text="@string/_1" />[m
[32m+[m
[32m+[m[32m        <Button[m
[32m+[m[32m            android:id="@+id/Button2"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="fill_parent"[m
[32m+[m[32m            android:layout_weight="1"[m
[32m+[m[32m            android:tag="2"[m
[32m+[m[32m            android:text="@string/_2" />[m
[32m+[m
[32m+[m[32m        <Button[m
[32m+[m[32m            android:id="@+id/Button3"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="fill_parent"[m
[32m+[m[32m            android:layout_weight="1"[m
[32m+[m[32m            android:tag="3"[m
[32m+[m[32m            android:text="@string/_3" />[m
[32m+[m
[32m+[m[32m    </TableRow>[m
[32m+[m
[32m+[m[32m    <TableRow[m
[32m+[m[32m        android:id="@+id/TableRow3"[m
[32m+[m[32m        android:layout_width="wrap_content"[m
[32m+[m[32m        android:layout_height="0dp"[m
[32m+[m[32m        android:layout_weight="1" >[m
[32m+[m
[32m+[m[32m        <Button[m
[32m+[m[32m            android:id="@+id/Button4"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="fill_parent"[m
[32m+[m[32m            android:layout_weight="1"[m
[32m+[m[32m            android:tag="4"[m
[32m+[m[32m            android:text="@string/_4" />[m
[32m+[m
[32m+[m[32m        <Button[m
[32m+[m[32m            android:id="@+id/Button5"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="fill_parent"[m
[32m+[m[32m            android:layout_weight="1"[m
[32m+[m[32m            android:tag="5"[m
[32m+[m[32m            android:text="@string/_5" />[m
[32m+[m
[32m+[m[32m        <Button[m
[32m+[m[32m            android:id="@+id/Button6"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="fill_parent"[m
[32m+[m[32m            android:layout_weight="1"[m
[32m+[m[32m            android:tag="6"[m
[32m+[m[32m            android:text="@string/_6" />[m
[32m+[m
[32m+[m[32m    </TableRow>[m
[32m+[m
[32m+[m[32m    <TableRow[m
[32m+[m[32m        android:id="@+id/TableRow4"[m
[32m+[m[32m        android:layout_width="wrap_content"[m
[32m+[m[32m        android:layout_height="0dp"[m
[32m+[m[32m        android:layout_weight="1" >[m
[32m+[m
[32m+[m[32m        <Button[m
[32m+[m[32m            android:id="@+id/Button7"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="fill_parent"[m
[32m+[m[32m            android:layout_weight="1"[m
[32m+[m[32m            android:tag="7"[m
[32m+[m[32m            android:text="@string/_7" />[m
[32m+[m
[32m+[m[32m        <Button[m
[32m+[m[32m            android:id="@+id/Button8"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="fill_parent"[m
[32m+[m[32m            android:layout_weight="1"[m
[32m+[m[32m            android:tag="8"[m
[32m+[m[32m            android:text="@string/_8" />[m
[32m+[m
[32m+[m[32m        <Button[m
[32m+[m[32m            android:id="@+id/Button9"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="fill_parent"[m
[32m+[m[32m            android:layout_weight="1"[m
[32m+[m[32m            android:tag="9"[m
[32m+[m[32m            android:text="@string/_9" />[m
[32m+[m
[32m+[m[32m    </TableRow>[m
[32m+[m
[32m+[m[32m    <TableRow[m
[32m+[m[32m        android:id="@+id/tableRow5"[m
[32m+[m[32m        android:layout_width="wrap_content"[m
[32m+[m[32m        android:layout_height="0dp"[m
[32m+[m[32m        android:layout_weight="1" >[m
[32m+[m
[32m+[m[32m        <Button[m
[32m+[m[32m            android:id="@+id/Button_decimal"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="fill_parent"[m
[32m+[m[32m            android:layout_weight="1"[m
[32m+[m[32m            android:tag="."[m
[32m+[m[32m            android:text="@string/decimal_button_text" />[m
[32m+[m
[32m+[m[32m        <Button[m
[32m+[m[32m            android:id="@+id/Button0"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="fill_parent"[m
[32m+[m[32m            android:layout_weight="1"[m
[32m+[m[32m            android:tag="0"[m
[32m+[m[32m            android:text="@string/_0" />[m
[32m+[m
[32m+[m[32m        <Button[m
[32m+[m[32m            android:id="@+id/Button_minus"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="fill_parent"[m
[32m+[m[32m            android:layout_weight="1"[m
[32m+[m[32m            android:tag="-"[m
[32m+[m[32m            android:text="@string/minus_button_text" />[m
[32m+[m
[32m+[m[32m    </TableRow>[m
[32m+[m
[32m+[m[32m    <TableRow[m
[32m+[m[32m        android:id="@+id/tableRow6"[m
[32m+[m[32m        android:layout_width="wrap_content"[m
[32m+[m[32m        android:layout_height="wrap_content" >[m
[32m+[m
[32m+[m[32m        <Button[m
[32m+[m[32m            android:id="@+id/Button_clear"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="wrap_content"[m
[32m+[m[32m            android:layout_weight="1"[m
[32m+[m[32m            android:tag="clear"[m
[32m+[m[32m            android:text="@string/clear_button_text" />[m
[32m+[m
[32m+[m[32m    </TableRow>[m
[32m+[m
[32m+[m[32m</TableLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/alarm_list_element.xml b/app/src/main/res/layout/alarm_list_element.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..495ca46[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/alarm_list_element.xml[m
[36m@@ -0,0 +1,55 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<!--[m[41m [m
[32m+[m[32mCopyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m
[32m+[m[32mLicensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32myou may not use this file except in compliance with the License.[m
[32m+[m[32mYou may obtain a copy of the License at[m
[32m+[m
[32m+[m[32mhttp://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32mUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32mWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m-->[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    xmlns:tools="http://schemas.android.com/tools"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="wrap_content"[m
[32m+[m[32m    android:paddingLeft="5dp" >[m
[32m+[m
[32m+[m[32m    <CheckBox[m
[32m+[m[32m        android:id="@+id/checkBox_alarm_active"[m
[32m+[m[32m        android:layout_width="wrap_content"[m
[32m+[m[32m        android:layout_height="wrap_content"[m
[32m+[m[32m        android:focusable="false"[m
[32m+[m[32m        android:padding="5dp" />[m
[32m+[m
[32m+[m[32m    <View[m
[32m+[m[32m        android:id="@+id/view1"[m
[32m+[m[32m        android:layout_width="1dp"[m
[32m+[m[32m        android:layout_height="match_parent"[m
[32m+[m[32m        android:layout_marginRight="10dp"[m
[32m+[m[32m        android:background="#CCCCCC"[m
[32m+[m[32m        android:paddingRight="10dp" />[m
[32m+[m
[32m+[m[32m    <LinearLayout[m
[32m+[m[32m        android:layout_width="wrap_content"[m
[32m+[m[32m        android:layout_height="wrap_content"[m
[32m+[m[32m        android:orientation="vertical"[m
[32m+[m[32m        android:paddingBottom="5dp"[m
[32m+[m[32m        android:paddingTop="5dp" >[m
[32m+[m
[32m+[m[32m        <TextView[m
[32m+[m[32m            android:id="@+id/textView_alarm_time"[m
[32m+[m[32m            android:layout_width="wrap_content"[m
[32m+[m[32m            android:layout_height="wrap_content"[m
[32m+[m[32m            android:textAppearance="?android:attr/textAppearanceMedium" />[m
[32m+[m
[32m+[m[32m        <TextView[m
[32m+[m[32m            android:id="@+id/textView_alarm_days"[m
[32m+[m[32m            android:layout_width="wrap_content"[m
[32m+[m[32m            android:layout_height="wrap_content"[m
[32m+[m[32m            android:textAppearance="?android:attr/textAppearanceSmall" />[m
[32m+[m[32m    </LinearLayout>[m
[32m+[m
[32m+[m[32m</LinearLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/alarm_preferences.xml b/app/src/main/res/layout/alarm_preferences.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..ea5866f[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/alarm_preferences.xml[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m[41m[m
[32m+[m[32m<!--[m[41m[m
[32m+[m[32mCopyright 2014 Sheldon Neilson www.neilson.co.za[m[41m[m
[32m+[m[41m[m
[32m+[m[32mLicensed under the Apache License, Version 2.0 (the "License");[m[41m[m
[32m+[m[32myou may not use this file except in compliance with the License.[m[41m[m
[32m+[m[32mYou may obtain a copy of the License at[m[41m[m
[32m+[m[41m[m
[32m+[m[32mhttp://www.apache.org/licenses/LICENSE-2.0[m[41m[m
[32m+[m[41m[m
[32m+[m[32mUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m[41m [m
[32m+[m[32mWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.-->[m[41m[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m[41m[m
[32m+[m[32m    android:layout_width="match_parent"[m[41m[m
[32m+[m[32m    android:layout_height="match_parent"[m[41m[m
[32m+[m[32m    android:orientation="vertical" >[m[41m[m
[32m+[m[41m[m
[32m+[m[32m    <ListView[m[41m[m
[32m+[m[32m        android:id="@android:id/list"[m[41m[m
[32m+[m[32m        android:layout_width="match_parent"[m[41m[m
[32m+[m[32m        android:layout_height="0dp"[m[41m[m
[32m+[m[32m        android:layout_weight="1"[m[41m[m
[32m+[m[32m        android:drawSelectorOnTop="false" />[m[41m[m
[32m+[m[41m[m
[32m+[m[32m</LinearLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/calculator_main.xml b/app/src/main/res/layout/calculator_main.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..f92e4f7[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/calculator_main.xml[m
[36m@@ -0,0 +1,109 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m
[32m+[m[32m<!--[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright (C) 2008, The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *     http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m[32m-->[m
[32m+[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m              android:orientation="vertical"[m
[32m+[m[32m              android:layout_width="match_parent"[m
[32m+[m[32m              android:layout_height="match_parent">[m
[32m+[m
[32m+[m[32m    <LinearLayout[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="0dip"[m
[32m+[m[32m        android:layout_weight="3"[m
[32m+[m[32m        android:orientation="horizontal"[m
[32m+[m[32m        android:layout_gravity="center_vertical"[m
[32m+[m[32m        android:gravity="center_vertical"[m
[32m+[m[32m        android:background="@drawable/display">[m
[32m+[m
[32m+[m[32m        <com.z.blast.workbox.CalculatorDisplay[m
[32m+[m[32m             android:id="@+id/display"[m
[32m+[m[32m             android:layout_width="0dip"[m
[32m+[m[32m             android:layout_height="match_parent"[m
[32m+[m[32m             android:layout_weight="1"[m
[32m+[m[32m             maxDigits="@integer/max_digits">[m
[32m+[m
[32m+[m[32m            <com.z.blast.workbox.CalculatorEditText[m
[32m+[m[32m                style="@style/display_style" />[m
[32m+[m[32m            <com.z.blast.workbox.CalculatorEditText[m
[32m+[m[32m                style="@style/display_style" />[m
[32m+[m
[32m+[m[32m        </com.z.blast.workbox.CalculatorDisplay>[m
[32m+[m[32m        <ImageButton android:id="@+id/overflow_menu"[m
[32m+[m[32m            android:layout_width="48dip"[m
[32m+[m[32m            android:layout_height="match_parent"[m
[32m+[m[32m            android:src="@drawable/ic_menu_overflow"[m
[32m+[m[32m            android:background="@android:color/transparent"[m
[32m+[m[32m            android:layout_marginLeft="8dip"[m
[32m+[m[32m            android:visibility="gone"/>[m
[32m+[m[32m    </LinearLayout>[m
[32m+[m[32m    <LinearLayout[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="0dp"[m
[32m+[m[32m        android:layout_weight="1.5"[m
[32m+[m[32m        android:background="@android:color/holo_blue_light"[m
[32m+[m[32m        >[m
[32m+[m
[32m+[m[32m        <View[m
[32m+[m[32m            android:background="@android:color/transparent"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="match_parent"[m
[32m+[m[32m            android:layout_weight="1"[m
[32m+[m[32m            />[m
[32m+[m
[32m+[m[32m        <FrameLayout[m
[32m+[m[32m            android:layout_width="wrap_content"[m
[32m+[m[32m            android:layout_height="match_parent">[m
[32m+[m[32m            <!-- marginRight has to be 0 to catch border-touch -->[m
[32m+[m[32m            <com.z.blast.workbox.ColorButton[m
[32m+[m[32m                android:id="@+id/clear"[m
[32m+[m[32m                android:text="@string/clear"[m
[32m+[m[32m                android:layout_width="match_parent"[m
[32m+[m[32m                android:layout_height="match_parent"[m
[32m+[m[32m                android:layout_marginRight="0dp"[m
[32m+[m[32m                android:textSize="15dp"[m
[32m+[m[32m                style="@style/button_style"[m
[32m+[m[32m                android:minWidth="89dip"[m
[32m+[m[32m                android:background="@android:color/transparent"[m
[32m+[m[32m                />[m
[32m+[m[32m            <!-- marginRight has to be 0 to catch border-touch -->[m
[32m+[m[32m            <com.z.blast.workbox.ColorButton[m
[32m+[m[32m                android:id="@+id/del"[m
[32m+[m[32m                android:text="@string/del"[m
[32m+[m[32m                android:layout_width="match_parent"[m
[32m+[m[32m                android:layout_height="match_parent"[m
[32m+[m[32m                android:layout_marginRight="0dp"[m
[32m+[m[32m                android:textSize="15dp"[m
[32m+[m[32m                style="@style/button_style"[m
[32m+[m[32m                android:contentDescription="@string/delDesc"[m
[32m+[m[32m                android:ellipsize="end"[m
[32m+[m[32m                android:minWidth="89dip"[m
[32m+[m[32m                android:background="@android:color/transparent"[m
[32m+[m[32m                />[m
[32m+[m[32m        </FrameLayout>[m
[32m+[m
[32m+[m[32m    </LinearLayout>[m
[32m+[m[32m    <com.z.blast.workbox.CalculatorViewPager[m
[32m+[m[32m         android:id="@+id/panelswitch"[m
[32m+[m[32m         android:layout_width="match_parent"[m
[32m+[m[32m         android:layout_height="0dp"[m
[32m+[m[32m         android:layout_weight="10"[m
[32m+[m[32m         android:background="@drawable/display"[m
[32m+[m[32m         />[m
[32m+[m[32m</LinearLayout>[m
[1mdiff --git a/app/src/main/res/layout/calendar_main.xml b/app/src/main/res/layout/calendar_main.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..f3fc16e[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/calendar_main.xml[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    android:orientation="vertical"[m
[32m+[m[32m    android:background="#ffffff">[m
[32m+[m[32m    <TextView[m
[32m+[m[32m        android:id="@+id/dayText_calendar"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="0dp"[m
[32m+[m[32m        android:layout_weight="1"[m
[32m+[m[32m        android:gravity="center"[m
[32m+[m[32m        android:textColor="#ff7f00"/>[m
[32m+[m[32m    <CalendarView[m
[32m+[m[32m        android:id="@+id/calendar"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="0dp"[m
[32m+[m[32m        android:showWeekNumber="false"[m
[32m+[m[32m        android:firstDayOfWeek="2"[m
[32m+[m[32m        android:shownWeekCount="5"[m
[32m+[m[32m        android:focusedMonthDateColor="#ff7f00"[m
[32m+[m[32m        android:selectedWeekBackgroundColor="#ffffff"[m
[32m+[m[32m        android:weekSeparatorLineColor="#ffffff"[m
[32m+[m[32m        android:unfocusedMonthDateColor="#bfb7b7"[m
[32m+[m[32m        android:layout_weight="4">[m
[32m+[m[32m    </CalendarView>[m
[32m+[m[32m    <TextView[m
[32m+[m[32m        android:id="@+id/chooseDay_calendar"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="0dp"[m
[32m+[m[32m        android:layout_weight="1"[m
[32m+[m[32m        android:gravity="center"[m
[32m+[m[32m        android:textColor="#6cdad7"/>[m
[32m+[m[32m</LinearLayout>[m
[1mdiff --git a/app/src/main/res/layout/compass_main.xml b/app/src/main/res/layout/compass_main.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..42f9670[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/compass_main.xml[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:orientation="vertical"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    android:background="#ffffff">[m
[32m+[m[32m    <TextView[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="wrap_content"[m
[32m+[m[32m        android:id="@+id/text_compass"[m
[32m+[m[32m        android:text=""[m
[32m+[m[32m        android:textColor="#ffffff"[m
[32m+[m[32m        android:gravity="center"[m
[32m+[m[32m        android:textSize="20sp"[m
[32m+[m[32m        android:layout_marginTop="15pt"[m
[32m+[m[32m        android:background="#000000"/>[m
[32m+[m[32m    <ImageView[m
[32m+[m[32m        android:id="@+id/image_compass"[m
[32m+[m[32m        android:layout_width="wrap_content"[m
[32m+[m[32m        android:layout_height="wrap_content"[m
[32m+[m[32m        android:src="@drawable/mycompass"/>[m
[32m+[m
[32m+[m[32m</LinearLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/flashlight_main.xml b/app/src/main/res/layout/flashlight_main.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..43b7656[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/flashlight_main.xml[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:orientation="vertical"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    android:background="#2d2d2d">[m
[32m+[m[32m    <ImageView[m
[32m+[m[32m        android:id="@+id/openFlash"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="match_parent"[m
[32m+[m[32m        android:src="@drawable/closeflash"[m
[32m+[m[32m        android:scaleType="fitCenter" />[m
[32m+[m
[32m+[m[32m</LinearLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/gradienter_main.xml b/app/src/main/res/layout/gradienter_main.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..a308827[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/gradienter_main.xml[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    android:background="#fff">[m
[32m+[m[32m    <com.z.blast.workbox.GradienterView[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="match_parent"[m
[32m+[m[32m        android:layout_gravity="center_vertical"[m
[32m+[m[32m        android:id="@+id/show"/>[m
[32m+[m
[32m+[m[32m</LinearLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/history_item.xml b/app/src/main/res/layout/history_item.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..2147da7[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/history_item.xml[m
[36m@@ -0,0 +1,26 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<LinearLayout[m
[32m+[m[32m     xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m     android:layout_width="match_parent"[m
[32m+[m[32m     android:layout_height="wrap_content"[m
[32m+[m[32m     >[m
[32m+[m
[32m+[m[32m    <TextView[m[41m [m
[32m+[m[32m         android:id="@+id/historyExpr"[m
[32m+[m[32m         android:layout_width="0px"[m
[32m+[m[32m         android:layout_height="wrap_content"[m
[32m+[m[32m         android:layout_weight="1"[m
[32m+[m[32m         android:textSize="23dp"[m
[32m+[m[32m         android:singleLine="true"[m
[32m+[m[32m         />[m[41m        [m
[32m+[m
[32m+[m[32m    <TextView[m
[32m+[m[32m         android:id="@+id/historyResult"[m
[32m+[m[32m         android:layout_width="180px"[m
[32m+[m[32m         android:layout_height="wrap_content"[m
[32m+[m[32m         android:layout_weight="0"[m
[32m+[m[32m         android:textSize="23dp"[m
[32m+[m[32m         android:singleLine="true"[m
[32m+[m[32m         />[m
[32m+[m
[32m+[m[32m</LinearLayout>[m
[1mdiff --git a/app/src/main/res/layout/map_main.xml b/app/src/main/res/layout/map_main.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..60b2ffa[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/map_main.xml[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:orientation="vertical"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent">[m
[32m+[m[32m    <com.baidu.mapapi.map.MapView[m
[32m+[m[32m        android:id="@+id/bmapView"[m
[32m+[m[32m        android:layout_width="fill_parent"[m
[32m+[m[32m        android:layout_height="fill_parent"[m
[32m+[m[32m        android:clickable="true" />[m
[32m+[m
[32m+[m[32m</LinearLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/note_main.xml b/app/src/main/res/layout/note_main.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..e9aed3d[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/note_main.xml[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:orientation="vertical"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    android:background="#ffffff">[m
[32m+[m[32m    <LinearLayout[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="wrap_content"[m
[32m+[m[32m        android:orientation="horizontal">[m
[32m+[m[32m        <Button[m
[32m+[m[32m            android:id="@+id/editButton_edittext"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="wrap_content"[m
[32m+[m[32m            android:text="Edit"[m
[32m+[m[32m            android:paddingLeft="20dp"[m
[32m+[m[32m            android:paddingRight="20dp"[m
[32m+[m[32m            android:layout_weight="1"/>[m
[32m+[m[32m        <TextView[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="wrap_content"[m
[32m+[m[32m            android:text="WorkBox-Note"[m
[32m+[m[32m            android:textAlignment="center"[m
[32m+[m[32m            android:textSize="20sp"[m
[32m+[m[32m            android:gravity="center"[m
[32m+[m[32m            android:layout_weight="2"/>[m
[32m+[m[32m        <Button[m
[32m+[m[32m            android:id="@+id/saveButton_edittext"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_height="wrap_content"[m
[32m+[m[32m            android:text="Save"[m
[32m+[m[32m            android:paddingLeft="20dp"[m
[32m+[m[32m            android:paddingRight="20dp"[m
[32m+[m[32m            android:layout_weight="1"/>[m
[32m+[m[32m    </LinearLayout>[m
[32m+[m[32m    <com.z.blast.workbox.MyEditText[m
[32m+[m[32m        android:id="@+id/editText_edittext"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="wrap_content" />[m
[32m+[m
[32m+[m[32m</LinearLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/ruler_main.xml b/app/src/main/res/layout/ruler_main.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..90aba34[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/ruler_main.xml[m
[36m@@ -0,0 +1,254 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    android:background="#fff">[m
[32m+[m[32m    <HorizontalScrollView[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="wrap_content">[m
[32m+[m[32m    <LinearLayout[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="wrap_content">[m
[32m+[m[32m    <com.z.blast.workbox.RulerText[m
[32m+[m[32m        android:layout_width="10mm"[m
[32m+[m[32m        android:layout_height="128px"[m
[32m+[m[32m        android:text="1cm"[m
[32m+[m[32m        android:layout_gravity="center_vertical"[m
[32m+[m[32m        android:background="#000"[m
[32m+[m[32m        android:textSize="10pt"[m
[32m+[m[32m        android:textColor="#fdc33a" />[m
[32m+[m[32m    <com.z.blast.workbox.RulerText[m
[32m+[m[32m        android:layout_width="10mm"[m
[32m+[m[32m        android:layout_height="128px"[m
[32m+[m[32m        android:text="2cm"[m
[32m+[m[32m        android:layout_gravity="center_vertical"[m
[32m+[m[32m        android:textSize="10pt"[m
[32m+[m[32m        android:textColor="#fdc33a"[m
[32m+[m[32m        android:background="#000"/>[m
[32m+[m[32m    <com.z.blast.workbox.RulerText[m
[32m+[m[32m        android:layout_width="10mm"[m
[32m+[m[32m        android:layout_height="128px"[m
[32m+[m[32m        android:text="3cm"[m
[32m+[m[32m        android:layout_gravity="center_vertical"[m
[32m+[m[32m        android:background="#000"[m
[32m+[m[32m        android:textSize="10pt"[m
[32m+[m[32m        android:textColor="#fdc33a"/>[m
[32m+[m[32m    <com.z.blast.workbox.RulerText[m
[32m+[m[32m        android:layout_width="10mm"[m
[32m+[m[32m        android:layout_height="128px"[m
[32m+[m[32m        android:text="4cm"[m
[32m+[m[32m        android:layout_gravity="center_vertical"[m
[32m+[m[32m        android:textSize="10pt"[m
[32m+[m[32m        android:textColor="#fdc33a"[m
[32m+[m[32m        android:background="#000"/>[m
[32m+[m[32m    <com.z.blast.workbox.RulerText[m
[32m+[m[32m        android:layout_width="10mm"[m
[32m+[m[32m        android:layout_height="128px"[m
[32m+[m[32m        android:text="5cm"[m
[32m+[m[32m        android:layout_gravity="center_vertical"[m
[32m+[m[32m        android:background="#000"[m
[32m+[m[32m        android:textSize="10pt"[m
[32m+[m[32m        android:textColor="#fdc33a"/>[m
[32m+[m[32m    <com.z.blast.workbox.RulerText[m
[32m+[m[32m        android:layout_width="10mm"[m
[32m+[m[32m        android:layout_height="128px"[m
[32m+[m[32m        android:text="6cm"[m
[32m+[m[32m        android:layout_gravity="center_vertical"[m
[32m+[m[32m        android:textSize="10pt"[m
[32m+[m[32m        android:background="#000"[m
[32m+[m[32m        android:textColor="#fdc33a"/>[m
[32m+[m[32m    <com.z.blast.workbox.RulerText[m
[32m+[m[32m        android:layout_width="10mm"[m
[32m+[m[32m        android:layout_height="128px"[m
[32m+[m[32m        android:text="7cm"[m
[32m+[m[32m        android:layout_gravity="center_vertical"[m
[32m+[m[32m        android:background="#000"[m
[32m+[m[32m        android:textSize="10pt"[m
[32m+[m[32m        android:textColor="#fdc33a"/>[m
[32m+[m[32m    <com.z.blast.workbox.RulerText[m
[32m+[m[32m        android:layout_width="10mm"[m
[32m+[m[32m        android:layout_height="128px"[m
[32m+[m[32m        android:background="#000"[m
[32m+[m[32m        android:text="8cm"[m
[32m+[m[32m        android:layout_gravity="center_vertical"[m
[32m+[m[32m        android:textSize="10pt"[m
[32m+[m[32m        android:textColor="#fdc33a"/>[m
[32m+[m[32m    <com.z.blast.workbox.RulerText[m
[32m+[m[32m        android:layout_width="10mm"[m
[32m+[m[32m        android:layout_height="128px"[m
[32m+[m[32m        android:text="9cm"[m
[32m+[m[32m        android:layout_gravity="center_vertical"[m
[32m+[m[32m        android:background="#000"[m
[32m+[m[32m        android:textSize="10pt"[m
[32m+[m[32m        android:textColor="#fdc33a"/>[m
[32m+[m[32m    <com.z.blast.workbox.RulerText[m
[32m+[m[32m        android:layout_width="10mm"[m
[32m+[m[32m        android:layout_height="128px"[m
[32m+[m[32m        android:text="10cm"[m
[32m+[m[32m        android:layout_gravity="center_vertical"[m
[32m+[m[32m        android:textSize="10pt"[m
[32m+[m[32m        android:background="#000"[m
[32m+[m[32m        android:textColor="#fdc33a"/>[m
[32m+[m[32m    <com.z.blast.workbox.RulerText[m
[32m+[m[32m        android:layout_width="11mm"[m
[32m+[m[32m        android:layout_height="128px"[m
[32m+[m[32m        android:text="11cm"[m
[32m+[m[32m        android:layout_gravity="center_vertical"[m
[32m+[m[32m        android:textSize="10pt"[m
[32m+[m[32m        android:background="#000"[m
[32m+[m[32m        android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="12cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="13cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="14cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="15cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="16cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="17cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="18cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="19cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="20cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="21cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="22cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="23cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="24cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="25cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="26cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="27cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="28cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="29cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m        <com.z.blast.workbox.RulerText[m
[32m+[m[32m            android:layout_width="11mm"[m
[32m+[m[32m            android:layout_height="128px"[m
[32m+[m[32m            android:text="30cm"[m
[32m+[m[32m            android:layout_gravity="center_vertical"[m
[32m+[m[32m            android:textSize="10pt"[m
[32m+[m[32m            android:background="#000"[m
[32m+[m[32m            android:textColor="#fdc33a"/>[m
[32m+[m[32m    </LinearLayout>[m
[32m+[m[32m    </HorizontalScrollView>[m
[32m+[m[32m    </RelativeLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/simple_pad.xml b/app/src/main/res/layout/simple_pad.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..c2b066c[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/simple_pad.xml[m
[36m@@ -0,0 +1,141 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m
[32m+[m[32m<!--[m
[32m+[m[32m/*[m
[32m+[m[32m* Copyright (C) 2011, The Android Open Source Project[m
[32m+[m[32m*[m
[32m+[m[32m* Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m* you may not use this file except in compliance with the License.[m
[32m+[m[32m* You may obtain a copy of the License at[m
[32m+[m[32m*[m
[32m+[m[32m*     http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m*[m
[32m+[m[32m* Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m* distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m* See the License for the specific language governing permissions and[m
[32m+[m[32m* limitations under the License.[m
[32m+[m[32m*/[m
[32m+[m[32m-->[m
[32m+[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m              android:id="@+id/simplePad"[m
[32m+[m[32m              android:layout_width="match_parent"[m
[32m+[m[32m              android:layout_height="match_parent"[m
[32m+[m[32m              android:orientation="vertical"[m
[32m+[m[32m              android:layout_gravity="center"[m
[32m+[m[32m              >[m
[32m+[m
[32m+[m[32m    <LinearLayout[m
[32m+[m[32m        android:layout_weight="3"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="0dp">[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/digit7"[m
[32m+[m[32m            android:text="@string/digit7"[m
[32m+[m[32m            style="@style/digit_button_style"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/digit8"[m
[32m+[m[32m            android:text="@string/digit8"[m
[32m+[m[32m            style="@style/digit_button_style"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/digit9"[m
[32m+[m[32m            android:text="@string/digit9"[m
[32m+[m[32m            style="@style/digit_button_style"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/div"[m
[32m+[m[32m            android:text="@string/div"[m
[32m+[m[32m            style="@style/button_style"[m
[32m+[m[32m            android:contentDescription="@string/divDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m    </LinearLayout>[m
[32m+[m
[32m+[m[32m    <LinearLayout[m
[32m+[m[32m        android:layout_weight="3"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="0dp"[m
[32m+[m[32m        >[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/digit4"[m
[32m+[m[32m            android:text="@string/digit4"[m
[32m+[m[32m            style="@style/digit_button_style"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/digit5"[m
[32m+[m[32m            android:text="@string/digit5"[m
[32m+[m[32m            style="@style/digit_button_style"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/digit6"[m
[32m+[m[32m            android:text="@string/digit6"[m
[32m+[m[32m            style="@style/digit_button_style"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/mul"[m
[32m+[m[32m            android:text="@string/mul"[m
[32m+[m[32m            style="@style/button_style"[m
[32m+[m[32m            android:contentDescription="@string/mulDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m    </LinearLayout>[m
[32m+[m
[32m+[m[32m    <LinearLayout[m
[32m+[m[32m        android:layout_weight="3"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="0dp"[m
[32m+[m[32m        >[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/digit1"[m
[32m+[m[32m            android:text="@string/digit1"[m
[32m+[m[32m            style="@style/digit_button_style"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/digit2"[m
[32m+[m[32m            android:text="@string/digit2"[m
[32m+[m[32m            style="@style/digit_button_style"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/digit3"[m
[32m+[m[32m            android:text="@string/digit3"[m
[32m+[m[32m            style="@style/digit_button_style"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/minus"[m
[32m+[m[32m            android:text="@string/minus"[m
[32m+[m[32m            style="@style/button_style"[m
[32m+[m[32m            android:contentDescription="@string/minusDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m    </LinearLayout>[m
[32m+[m
[32m+[m[32m    <LinearLayout[m
[32m+[m[32m        android:layout_weight="3"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="0dp"[m
[32m+[m[32m        >[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/dot"[m
[32m+[m[32m            android:text="@string/dot"[m
[32m+[m[32m            style="@style/digit_button_style"[m
[32m+[m[32m            android:contentDescription="@string/dotDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/digit0"[m
[32m+[m[32m            android:text="@string/digit0"[m
[32m+[m[32m            style="@style/digit_button_style"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/equal"[m
[32m+[m[32m            android:text="@string/equal"[m
[32m+[m[32m            style="@style/button_style"[m
[32m+[m[32m            android:contentDescription="@string/equalDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m        <com.z.blast.workbox.ColorButton[m
[32m+[m[32m            android:id="@+id/plus"[m
[32m+[m[32m            android:text="@string/plus"[m
[32m+[m[32m            style="@style/button_style"[m
[32m+[m[32m            android:contentDescription="@string/plusDesc"[m
[32m+[m[32m            />[m
[32m+[m[32m    </LinearLayout>[m
[32m+[m[32m</LinearLayout>[m
[1mdiff --git a/app/src/main/res/layout/weather_main.xml b/app/src/main/res/layout/weather_main.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..58326aa[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/weather_main.xml[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:orientation="vertical"[m
[32m+[m[32m    android:gravity="center_horizontal"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    >[m
[32m+[m[32m    <WebView android:id="@+id/webView1"[m
[32m+[m[32m        android:layout_width="wrap_content"[m
[32m+[m[32m        android:layout_height="0dip"[m
[32m+[m[32m        android:focusable="false"[m
[32m+[m[32m        android:layout_weight="1"[m
[32m+[m[32m        />[m
[32m+[m[32m</LinearLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/menu/alarmmenu.xml b/app/src/main/res/menu/alarmmenu.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..04ae282[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/menu/alarmmenu.xml[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<!--[m[41m [m
[32m+[m[32mCopyright 2014 Sheldon Neilson www.neilson.co.za[m
[32m+[m
[32m+[m[32mLicensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32myou may not use this file except in compliance with the License.[m
[32m+[m[32mYou may obtain a copy of the License at[m
[32m+[m
[32m+[m[32mhttp://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32mUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32mWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.[m
[32m+[m[32m-->[m
[32m+[m[32m<menu xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    xmlns:appcompat="http://schemas.android.com/apk/res-auto" >[m
[32m+[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/menu_item_new"[m
[32m+[m[32m        android:title="@string/menu_item_new"[m
[32m+[m[32m        android:icon="@drawable/glyphicons_432_plus"[m
[32m+[m[32m        appcompat:showAsAction="always">[m
[32m+[m[32m    </item>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/menu_item_save"[m
[32m+[m[32m        android:title="@string/menu_item_save"[m
[32m+[m[32m        android:icon="@drawable/glyphicons_443_floppy_disk"[m
[32m+[m[32m        appcompat:showAsAction="always">[m
[32m+[m[32m    </item>[m
[32m+[m[32m    <item[m
[32m+[m[32m        android:id="@+id/menu_item_delete"[m
[32m+[m[32m        android:title="@string/menu_item_delete"[m
[32m+[m[32m        android:icon="@drawable/glyphicons_016_bin"[m
[32m+[m[32m        appcompat:showAsAction="always">[m
[32m+[m[32m    </item>[m[41m    [m
[32m+[m
[32m+[m
[32m+[m[32m</menu>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/menu/menu.xml b/app/src/main/res/menu/menu.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..21eb71a[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/menu/menu.xml[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<!--[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright (C) 2011, The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *     http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m[32m-->[m
[32m+[m
[32m+[m[32m<menu xmlns:android="http://schemas.android.com/apk/res/android">[m
[32m+[m
[32m+[m[32m    <item android:id="@+id/clear_history"[m
[32m+[m[32m        android:showAsAction="ifRoom|withText"[m
[32m+[m[32m        android:icon="@drawable/clear_history"[m
[32m+[m[32m        android:title="@string/clear_history"/>[m
[32m+[m
[32m+[m[32m    <item android:id="@+id/advanced"[m
[32m+[m[32m        android:showAsAction="ifRoom|withText"[m
[32m+[m[32m        android:icon="@drawable/advanced"[m
[32m+[m[32m        android:title="@string/advanced"/>[m
[32m+[m
[32m+[m[32m    <item android:id="@+id/basic"[m
[32m+[m[32m        android:showAsAction="ifRoom|withText"[m
[32m+[m[32m        android:icon="@drawable/simple"[m
[32m+[m[32m        android:title="@string/basic"/>[m
[32m+[m
[32m+[m[32m</menu>[m
[1mdiff --git a/app/src/main/res/mipmap-hdpi/ic_launcher.png b/app/src/main/res/mipmap-hdpi/ic_launcher.png[m
[1mnew file mode 100644[m
[1mindex 0000000..cde69bc[m
Binary files /dev/null and b/app/src/main/res/mipmap-hdpi/ic_launcher.png differ
[1mdiff --git a/app/src/main/res/mipmap-mdpi/ic_launcher.png b/app/src/main/res/mipmap-mdpi/ic_launcher.png[m
[1mnew file mode 100644[m
[1mindex 0000000..c133a0c[m
Binary files /dev/null and b/app/src/main/res/mipmap-mdpi/ic_launcher.png differ
[1mdiff --git a/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/app/src/main/res/mipmap-xhdpi/ic_launcher.png[m
[1mnew file mode 100644[m
[1mindex 0000000..bfa42f0[m
Binary files /dev/null and b/app/src/main/res/mipmap-xhdpi/ic_launcher.png differ
[1mdiff --git a/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/app/src/main/res/mipmap-xxhdpi/ic_launcher.png[m
[1mnew file mode 100644[m
[1mindex 0000000..324e72c[m
Binary files /dev/null and b/app/src/main/res/mipmap-xxhdpi/ic_launcher.png differ
[1mdiff --git a/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png[m
[1mnew file mode 100644[m
[1mindex 0000000..aee44e1[m
Binary files /dev/null and b/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ
[1mdiff --git a/app/src/main/res/values-en-rGB/strings.xml b/app/src/main/res/values-en-rGB/strings.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..d944932[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values-en-rGB/strings.xml[m
[36m@@ -0,0 +1,84 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<!--  Copyright (C) 2007 The Android Open Source Project[m
[32m+[m
[32m+[m[32m     Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m     you may not use this file except in compliance with the License.[m
[32m+[m[32m     You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m          http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m     Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m     distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m     See the License for the specific language governing permissions and[m
[32m+[m[32m     limitations under the License.[m
[32m+[m[32m -->[m
[32m+[m
[32m+[m[32m<resources xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">[m
[32m+[m[32m    <string name="app_name" msgid="8095131950334945205">"Calculator"</string>[m
[32m+[m[32m    <string name="error" msgid="9197457880925804499">"Error"</string>[m
[32m+[m[32m    <string name="digit0" msgid="8069590963464434135">"0"</string>[m
[32m+[m[32m    <string name="digit1" msgid="8535041374797804029">"1"</string>[m
[32m+[m[32m    <string name="digit2" msgid="8977354203154316247">"2"</string>[m
[32m+[m[32m    <string name="digit3" msgid="148544090755132760">"3"</string>[m
[32m+[m[32m    <string name="digit4" msgid="2199490603838247678">"4"</string>[m
[32m+[m[32m    <string name="digit5" msgid="7568514524384173087">"5"</string>[m
[32m+[m[32m    <string name="digit6" msgid="6705952561049362551">"6"</string>[m
[32m+[m[32m    <string name="digit7" msgid="658125644218958447">"7"</string>[m
[32m+[m[32m    <string name="digit8" msgid="3134686906411558886">"8"</string>[m
[32m+[m[32m    <string name="digit9" msgid="765379157698748031">"9"</string>[m
[32m+[m[32m    <string name="del" msgid="6248896117422989693">"DELETE"</string>[m
[32m+[m[32m    <string name="clear" msgid="8103610981407459768">"CLR"</string>[m
[32m+[m[32m    <string name="sin" msgid="6793866152659175277">"sin"</string>[m
[32m+[m[32m    <string name="cos" msgid="6901841853098114414">"cos"</string>[m
[32m+[m[32m    <string name="tan" msgid="7957459816738554960">"tan"</string>[m
[32m+[m[32m    <string name="e" msgid="1377847800971731483">"e"</string>[m
[32m+[m[32m    <string name="ln" msgid="6888500680285403344">"ln"</string>[m
[32m+[m[32m    <string name="lg" msgid="873623857385418182">"log"</string>[m
[32m+[m[32m    <string name="leftParen" msgid="4850643713953092099">"("</string>[m
[32m+[m[32m    <string name="rightParen" msgid="3177971166159324016">")"</string>[m
[32m+[m[32m    <string name="basic" msgid="7691469861698059753">"Basic panel"</string>[m
[32m+[m[32m    <string name="advanced" msgid="7122495413742976492">"Advanced panel"</string>[m
[32m+[m[32m    <string name="clear_history" msgid="8458043980601165012">"Clear history"</string>[m
[32m+[m[32m    <string name="text_copied_toast" msgid="5801480710472541833">"Text copied."</string>[m
[32m+[m[32m    <string name="leftParenDesc" msgid="8446428211982811379">"left parenthesis"</string>[m
[32m+[m[32m    <string name="rightParenDesc" msgid="9133691645148976523">"right parenthesis"</string>[m
[32m+[m[32m    <string name="factorialDesc" msgid="9217024218012761574">"factorial"</string>[m
[32m+[m[32m    <string name="lnDesc" msgid="1052579286300842270">"natural logarithm"</string>[m
[32m+[m[32m    <string name="lgDesc" msgid="6490920451513731160">"logarithm"</string>[m
[32m+[m[32m    <string name="sqrtDesc" msgid="2247252128762219267">"square root"</string>[m
[32m+[m[32m    <string name="divDesc" msgid="7442623079124315427">"divide"</string>[m
[32m+[m[32m    <string name="mulDesc" msgid="9003016819648670694">"multiply"</string>[m
[32m+[m[32m    <string name="plusDesc" msgid="3145322700823848264">"plus"</string>[m
[32m+[m[32m    <string name="minusDesc" msgid="5033462008907390900">"minus"</string>[m
[32m+[m[32m    <string name="dotDesc" msgid="5253752241630161722">"point"</string>[m
[32m+[m[32m    <string name="powerDesc" msgid="9034898318444176910">"power"</string>[m
[32m+[m[32m    <string name="delDesc" msgid="8211175878012032240">"delete"</string>[m
[32m+[m[32m    <string name="clearDesc" msgid="8015748901120751476">"clear"</string>[m
[32m+[m[32m    <string name="tanDesc" msgid="2055554933130702423">"tangent"</string>[m
[32m+[m[32m    <string name="sinDesc" msgid="6563285042235077204">"sine"</string>[m
[32m+[m[32m    <string name="cosDesc" msgid="4048942450207926538">"cosine"</string>[m
[32m+[m[32m    <string name="eDesc" msgid="6709583372168924068">"Euler\'s number"</string>[m
[32m+[m[32m    <string name="piDesc" msgid="8838151606775021517">"pi"</string>[m
[32m+[m[32m    <string name="equalDesc" msgid="4164435100263313101">"equals"</string>[m
[32m+[m[32m  <string-array name="operatorDescs">[m
[32m+[m[32m    <item msgid="7903565108986789641">"left parenthesis"</item>[m
[32m+[m[32m    <item msgid="1688156211934459752">"right parenthesis"</item>[m
[32m+[m[32m    <item msgid="6664829080840305856">"factorial"</item>[m
[32m+[m[32m    <item msgid="2880199289575144121">"natural logarithm"</item>[m
[32m+[m[32m    <item msgid="4398774906998694599">"logarithm"</item>[m
[32m+[m[32m    <item msgid="1791869359785943266">"square root"</item>[m
[32m+[m[32m    <item msgid="6833720171974254459">"divided by"</item>[m
[32m+[m[32m    <item msgid="2646574635189709515">"multiplied by"</item>[m
[32m+[m[32m    <item msgid="3487936384379753697">"plus"</item>[m
[32m+[m[32m    <item msgid="8608534484562258856">"minus"</item>[m
[32m+[m[32m    <item msgid="3456824579675198186">" point "</item>[m
[32m+[m[32m    <item msgid="4528629783180278651">"power"</item>[m
[32m+[m[32m    <item msgid="4050948027333760159">"tangent"</item>[m
[32m+[m[32m    <item msgid="8716478860618683850">"sine"</item>[m
[32m+[m[32m    <item msgid="3203211483560707480">"cosine"</item>[m
[32m+[m[32m    <item msgid="8587490959348493065">"pi"</item>[m
[32m+[m[32m    <item msgid="8134315487552198394">"equals"</item>[m
[32m+[m[32m  </string-array>[m
[32m+[m[32m</resources>[m
[1mdiff --git a/app/src/main/res/values-es-rUS/strings.xml b/app/src/main/res/values-es-rUS/strings.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..979e8b6[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values-es-rUS/strings.xml[m
[36m@@ -0,0 +1,84 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<!--  Copyright (C) 2007 The Android Open Source Project[m
[32m+[m
[32m+[m[32m     Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m     you may not use this file except in compliance with the License.[m
[32m+[m[32m     You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m          http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m     Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m     distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m     See the License for the specific language governing permissions and[m
[32m+[m[32m     limitations under the License.[m
[32m+[m[32m -->[m
[32m+[m
[32m+[m[32m<resources xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">[m
[32m+[m[32m    <string name="app_name" msgid="8095131950334945205">"Calculadora"</string>[m
[32m+[m[32m    <string name="error" msgid="9197457880925804499">"Error"</string>[m
[32m+[m[32m    <string name="digit0" msgid="8069590963464434135">"0"</string>[m
[32m+[m[32m    <string name="digit1" msgid="8535041374797804029">"1"</string>[m
[32m+[m[32m    <string name="digit2" msgid="8977354203154316247">"2"</string>[m
[32m+[m[32m    <string name="digit3" msgid="148544090755132760">"3"</string>[m
[32m+[m[32m    <string name="digit4" msgid="2199490603838247678">"4"</string>[m
[32m+[m[32m    <string name="digit5" msgid="7568514524384173087">"5"</string>[m
[32m+[m[32m    <string name="digit6" msgid="6705952561049362551">"6"</string>[m
[32m+[m[32m    <string name="digit7" msgid="658125644218958447">"7"</string>[m
[32m+[m[32m    <string name="digit8" msgid="3134686906411558886">"8"</string>[m
[32m+[m[32m    <string name="digit9" msgid="765379157698748031">"9"</string>[m
[32m+[m[32m    <string name="del" msgid="6248896117422989693">"ELIMINAR"</string>[m
[32m+[m[32m    <string name="clear" msgid="8103610981407459768">"CLR"</string>[m
[32m+[m[32m    <string name="sin" msgid="6793866152659175277">"sen"</string>[m
[32m+[m[32m    <string name="cos" msgid="6901841853098114414">"cos"</string>[m
[32m+[m[32m    <string name="tan" msgid="7957459816738554960">"tan"</string>[m
[32m+[m[32m    <string name="e" msgid="1377847800971731483">"e"</string>[m
[32m+[m[32m    <string name="ln" msgid="6888500680285403344">"ln"</string>[m
[32m+[m[32m    <string name="lg" msgid="873623857385418182">"log"</string>[m
[32m+[m[32m    <string name="leftParen" msgid="4850643713953092099">"("</string>[m
[32m+[m[32m    <string name="rightParen" msgid="3177971166159324016">")"</string>[m
[32m+[m[32m    <string name="basic" msgid="7691469861698059753">"Panel básico"</string>[m
[32m+[m[32m    <string name="advanced" msgid="7122495413742976492">"Panel avanzado"</string>[m
[32m+[m[32m    <string name="clear_history" msgid="8458043980601165012">"Eliminar historial"</string>[m
[32m+[m[32m    <string name="text_copied_toast" msgid="5801480710472541833">"Se ha copiado el texto."</string>[m
[32m+[m[32m    <string name="leftParenDesc" msgid="8446428211982811379">"paréntesis de apertura"</string>[m
[32m+[m[32m    <string name="rightParenDesc" msgid="9133691645148976523">"paréntesis de cierre"</string>[m
[32m+[m[32m    <string name="factorialDesc" msgid="9217024218012761574">"factorial"</string>[m
[32m+[m[32m    <string name="lnDesc" msgid="1052579286300842270">"logaritmo natural"</string>[m
[32m+[m[32m    <string name="lgDesc" msgid="6490920451513731160">"logaritmo"</string>[m
[32m+[m[32m    <string name="sqrtDesc" msgid="2247252128762219267">"raíz cuadrada"</string>[m
[32m+[m[32m    <string name="divDesc" msgid="7442623079124315427">"dividir"</string>[m
[32m+[m[32m    <string name="mulDesc" msgid="9003016819648670694">"multiplicar"</string>[m
[32m+[m[32m    <string name="plusDesc" msgid="3145322700823848264">"más"</string>[m
[32m+[m[32m    <string name="minusDesc" msgid="5033462008907390900">"menos"</string>[m
[32m+[m[32m    <string name="dotDesc" msgid="5253752241630161722">"punto"</string>[m
[32m+[m[32m    <string name="powerDesc" msgid="9034898318444176910">"potencia"</string>[m
[32m+[m[32m    <string name="delDesc" msgid="8211175878012032240">"eliminar"</string>[m
[32m+[m[32m    <string name="clearDesc" msgid="8015748901120751476">"borrar"</string>[m
[32m+[m[32m    <string name="tanDesc" msgid="2055554933130702423">"tangente"</string>[m
[32m+[m[32m    <string name="sinDesc" msgid="6563285042235077204">"seno"</string>[m
[32m+[m[32m    <string name="cosDesc" msgid="4048942450207926538">"coseno"</string>[m
[32m+[m[32m    <string name="eDesc" msgid="6709583372168924068">"número de Euler"</string>[m
[32m+[m[32m    <string name="piDesc" msgid="8838151606775021517">"pi"</string>[m
[32m+[m[32m    <string name="equalDesc" msgid="4164435100263313101">"igual a"</string>[m
[32m+[m[32m  <string-array name="operatorDescs">[m
[32m+[m[32m    <item msgid="7903565108986789641">"paréntesis de apertura"</item>[m
[32m+[m[32m    <item msgid="1688156211934459752">"paréntesis de cierre"</item>[m
[32m+[m[32m    <item msgid="6664829080840305856">"factorial"</item>[m
[32m+[m[32m    <item msgid="2880199289575144121">"logaritmo natural"</item>[m
[32m+[m[32m    <item msgid="4398774906998694599">"logaritmo"</item>[m
[32m+[m[32m    <item msgid="1791869359785943266">"raíz cuadrada"</item>[m
[32m+[m[32m    <item msgid="6833720171974254459">"dividido por"</item>[m
[32m+[m[32m    <item msgid="2646574635189709515">"multiplicado por"</item>[m
[32m+[m[32m    <item msgid="3487936384379753697">"más"</item>[m
[32m+[m[32m    <item msgid="8608534484562258856">"menos"</item>[m
[32m+[m[32m    <item msgid="3456824579675198186">" Punto "</item>[m
[32m+[m[32m    <item msgid="4528629783180278651">"potencia"</item>[m
[32m+[m[32m    <item msgid="4050948027333760159">"tangente"</item>[m
[32m+[m[32m    <item msgid="8716478860618683850">"seno"</item>[m
[32m+[m[32m    <item msgid="3203211483560707480">"coseno"</item>[m
[32m+[m[32m    <item msgid="8587490959348493065">"pi"</item>[m
[32m+[m[32m    <item msgid="8134315487552198394">"igual a"</item>[m
[32m+[m[32m  </string-array>[m
[32m+[m[32m</resources>[m
[1mdiff --git a/app/src/main/res/values-ja/strings.xml b/app/src/main/res/values-ja/strings.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..b69735c[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values-ja/strings.xml[m
[36m@@ -0,0 +1,84 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<!--  Copyright (C) 2007 The Android Open Source Project[m
[32m+[m
[32m+[m[32m     Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m     you may not use this file except in compliance with the License.[m
[32m+[m[32m     You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m          http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m     Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m     distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m     See the License for the specific language governing permissions and[m
[32m+[m[32m     limitations under the License.[m
[32m+[m[32m -->[m
[32m+[m
[32m+[m[32m<resources xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">[m
[32m+[m[32m    <string name="app_name" msgid="8095131950334945205">"電卓"</string>[m
[32m+[m[32m    <string name="error" msgid="9197457880925804499">"エラー"</string>[m
[32m+[m[32m    <string name="digit0" msgid="8069590963464434135">"0"</string>[m
[32m+[m[32m    <string name="digit1" msgid="8535041374797804029">"1"</string>[m
[32m+[m[32m    <string name="digit2" msgid="8977354203154316247">"2"</string>[m
[32m+[m[32m    <string name="digit3" msgid="148544090755132760">"3"</string>[m
[32m+[m[32m    <string name="digit4" msgid="2199490603838247678">"4"</string>[m
[32m+[m[32m    <string name="digit5" msgid="7568514524384173087">"5"</string>[m
[32m+[m[32m    <string name="digit6" msgid="6705952561049362551">"6"</string>[m
[32m+[m[32m    <string name="digit7" msgid="658125644218958447">"7"</string>[m
[32m+[m[32m    <string name="digit8" msgid="3134686906411558886">"8"</string>[m
[32m+[m[32m    <string name="digit9" msgid="765379157698748031">"9"</string>[m
[32m+[m[32m    <string name="del" msgid="6248896117422989693">"削除"</string>[m
[32m+[m[32m    <string name="clear" msgid="8103610981407459768">"消去"</string>[m
[32m+[m[32m    <string name="sin" msgid="6793866152659175277">"sin"</string>[m
[32m+[m[32m    <string name="cos" msgid="6901841853098114414">"cos"</string>[m
[32m+[m[32m    <string name="tan" msgid="7957459816738554960">"tan"</string>[m
[32m+[m[32m    <string name="e" msgid="1377847800971731483">"e"</string>[m
[32m+[m[32m    <string name="ln" msgid="6888500680285403344">"ln"</string>[m
[32m+[m[32m    <string name="lg" msgid="873623857385418182">"log"</string>[m
[32m+[m[32m    <string name="leftParen" msgid="4850643713953092099">"("</string>[m
[32m+[m[32m    <string name="rightParen" msgid="3177971166159324016">")"</string>[m
[32m+[m[32m    <string name="basic" msgid="7691469861698059753">"標準機能"</string>[m
[32m+[m[32m    <string name="advanced" msgid="7122495413742976492">"関数機能"</string>[m
[32m+[m[32m    <string name="clear_history" msgid="8458043980601165012">"履歴消去"</string>[m
[32m+[m[32m    <string name="text_copied_toast" msgid="5801480710472541833">"テキストをコピーしました。"</string>[m
[32m+[m[32m    <string name="leftParenDesc" msgid="8446428211982811379">"左かっこ"</string>[m
[32m+[m[32m    <string name="rightParenDesc" msgid="9133691645148976523">"右かっこ"</string>[m
[32m+[m[32m    <string name="factorialDesc" msgid="9217024218012761574">"階乗"</string>[m
[32m+[m[32m    <string name="lnDesc" msgid="1052579286300842270">"自然対数"</string>[m
[32m+[m[32m    <string name="lgDesc" msgid="6490920451513731160">"対数"</string>[m
[32m+[m[32m    <string name="sqrtDesc" msgid="2247252128762219267">"平方根"</string>[m
[32m+[m[32m    <string name="divDesc" msgid="7442623079124315427">"除算"</string>[m
[32m+[m[32m    <string name="mulDesc" msgid="9003016819648670694">"乗算"</string>[m
[32m+[m[32m    <string name="plusDesc" msgid="3145322700823848264">"足す"</string>[m
[32m+[m[32m    <string name="minusDesc" msgid="5033462008907390900">"引く"</string>[m
[32m+[m[32m    <string name="dotDesc" msgid="5253752241630161722">"小数点"</string>[m
[32m+[m[32m    <string name="powerDesc" msgid="9034898318444176910">"累乗"</string>[m
[32m+[m[32m    <string name="delDesc" msgid="8211175878012032240">"削除"</string>[m
[32m+[m[32m    <string name="clearDesc" msgid="8015748901120751476">"クリア"</string>[m
[32m+[m[32m    <string name="tanDesc" msgid="2055554933130702423">"タンジェント"</string>[m
[32m+[m[32m    <string name="sinDesc" msgid="6563285042235077204">"サイン"</string>[m
[32m+[m[32m    <string name="cosDesc" msgid="4048942450207926538">"コサイン"</string>[m
[32m+[m[32m    <string name="eDesc" msgid="6709583372168924068">"自然対数の底"</string>[m
[32m+[m[32m    <string name="piDesc" msgid="8838151606775021517">"パイ"</string>[m
[32m+[m[32m    <string name="equalDesc" msgid="4164435100263313101">"イコール"</string>[m
[32m+[m[32m  <string-array name="operatorDescs">[m
[32m+[m[32m    <item msgid="7903565108986789641">"左かっこ"</item>[m
[32m+[m[32m    <item msgid="1688156211934459752">"右かっこ"</item>[m
[32m+[m[32m    <item msgid="6664829080840305856">"階乗"</item>[m
[32m+[m[32m    <item msgid="2880199289575144121">"自然対数"</item>[m
[32m+[m[32m    <item msgid="4398774906998694599">"対数"</item>[m
[32m+[m[32m    <item msgid="1791869359785943266">"平方根"</item>[m
[32m+[m[32m    <item msgid="6833720171974254459">"割る"</item>[m
[32m+[m[32m    <item msgid="2646574635189709515">"掛ける"</item>[m
[32m+[m[32m    <item msgid="3487936384379753697">"足す"</item>[m
[32m+[m[32m    <item msgid="8608534484562258856">"引く"</item>[m
[32m+[m[32m    <item msgid="3456824579675198186">"ポイント"</item>[m
[32m+[m[32m    <item msgid="4528629783180278651">"累乗"</item>[m
[32m+[m[32m    <item msgid="4050948027333760159">"タンジェント"</item>[m
[32m+[m[32m    <item msgid="8716478860618683850">"サイン"</item>[m
[32m+[m[32m    <item msgid="3203211483560707480">"コサイン"</item>[m
[32m+[m[32m    <item msgid="8587490959348493065">"パイ"</item>[m
[32m+[m[32m    <item msgid="8134315487552198394">"イコール"</item>[m
[32m+[m[32m  </string-array>[m
[32m+[m[32m</resources>[m
[1mdiff --git a/app/src/main/res/values-ko/strings.xml b/app/src/main/res/values-ko/strings.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..a817855[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values-ko/strings.xml[m
[36m@@ -0,0 +1,84 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<!--  Copyright (C) 2007 The Android Open Source Project[m
[32m+[m
[32m+[m[32m     Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m     you may not use this file except in compliance with the License.[m
[32m+[m[32m     You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m          http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m     Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m     distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m     See the License for the specific language governing permissions and[m
[32m+[m[32m     limitations under the License.[m
[32m+[m[32m -->[m
[32m+[m
[32m+[m[32m<resources xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">[m
[32m+[m[32m    <string name="app_name" msgid="8095131950334945205">"계산기"</string>[m
[32m+[m[32m    <string name="error" msgid="9197457880925804499">"오류"</string>[m
[32m+[m[32m    <string name="digit0" msgid="8069590963464434135">"0"</string>[m
[32m+[m[32m    <string name="digit1" msgid="8535041374797804029">"1"</string>[m
[32m+[m[32m    <string name="digit2" msgid="8977354203154316247">"2"</string>[m
[32m+[m[32m    <string name="digit3" msgid="148544090755132760">"3"</string>[m
[32m+[m[32m    <string name="digit4" msgid="2199490603838247678">"4"</string>[m
[32m+[m[32m    <string name="digit5" msgid="7568514524384173087">"5"</string>[m
[32m+[m[32m    <string name="digit6" msgid="6705952561049362551">"6"</string>[m
[32m+[m[32m    <string name="digit7" msgid="658125644218958447">"7"</string>[m
[32m+[m[32m    <string name="digit8" msgid="3134686906411558886">"8"</string>[m
[32m+[m[32m    <string name="digit9" msgid="765379157698748031">"9"</string>[m
[32m+[m[32m    <string name="del" msgid="6248896117422989693">"DEL"</string>[m
[32m+[m[32m    <string name="clear" msgid="8103610981407459768">"CLR"</string>[m
[32m+[m[32m    <string name="sin" msgid="6793866152659175277">"sin"</string>[m
[32m+[m[32m    <string name="cos" msgid="6901841853098114414">"cos"</string>[m
[32m+[m[32m    <string name="tan" msgid="7957459816738554960">"tan"</string>[m
[32m+[m[32m    <string name="e" msgid="1377847800971731483">"e"</string>[m
[32m+[m[32m    <string name="ln" msgid="6888500680285403344">"ln"</string>[m
[32m+[m[32m    <string name="lg" msgid="873623857385418182">"log"</string>[m
[32m+[m[32m    <string name="leftParen" msgid="4850643713953092099">"("</string>[m
[32m+[m[32m    <string name="rightParen" msgid="3177971166159324016">")"</string>[m
[32m+[m[32m    <string name="basic" msgid="7691469861698059753">"기본 패널"</string>[m
[32m+[m[32m    <string name="advanced" msgid="7122495413742976492">"고급 패널"</string>[m
[32m+[m[32m    <string name="clear_history" msgid="8458043980601165012">"기록 지우기"</string>[m
[32m+[m[32m    <string name="text_copied_toast" msgid="5801480710472541833">"텍스트를 복사했습니다."</string>[m
[32m+[m[32m    <string name="leftParenDesc" msgid="8446428211982811379">"왼쪽 괄호"</string>[m
[32m+[m[32m    <string name="rightParenDesc" msgid="9133691645148976523">"오른쪽 괄호"</string>[m
[32m+[m[32m    <string name="factorialDesc" msgid="9217024218012761574">"계승"</string>[m
[32m+[m[32m    <string name="lnDesc" msgid="1052579286300842270">"자연 대수"</string>[m
[32m+[m[32m    <string name="lgDesc" msgid="6490920451513731160">"대수"</string>[m
[32m+[m[32m    <string name="sqrtDesc" msgid="2247252128762219267">"제곱근"</string>[m
[32m+[m[32m    <string name="divDesc" msgid="7442623079124315427">"나누다"</string>[m
[32m+[m[32m    <string name="mulDesc" msgid="9003016819648670694">"곱하다"</string>[m
[32m+[m[32m    <string name="plusDesc" msgid="3145322700823848264">"더하기"</string>[m
[32m+[m[32m    <string name="minusDesc" msgid="5033462008907390900">"빼기"</string>[m
[32m+[m[32m    <string name="dotDesc" msgid="5253752241630161722">"점"</string>[m
[32m+[m[32m    <string name="powerDesc" msgid="9034898318444176910">"거듭제곱"</string>[m
[32m+[m[32m    <string name="delDesc" msgid="8211175878012032240">"삭제"</string>[m
[32m+[m[32m    <string name="clearDesc" msgid="8015748901120751476">"지우기"</string>[m
[32m+[m[32m    <string name="tanDesc" msgid="2055554933130702423">"탄젠트(Tangent)"</string>[m
[32m+[m[32m    <string name="sinDesc" msgid="6563285042235077204">"사인(sine)"</string>[m
[32m+[m[32m    <string name="cosDesc" msgid="4048942450207926538">"코사인(cosine)"</string>[m
[32m+[m[32m    <string name="eDesc" msgid="6709583372168924068">"오일러의 수(Euler\'s number)"</string>[m
[32m+[m[32m    <string name="piDesc" msgid="8838151606775021517">"파이"</string>[m
[32m+[m[32m    <string name="equalDesc" msgid="4164435100263313101">"같음"</string>[m
[32m+[m[32m  <string-array name="operatorDescs">[m
[32m+[m[32m    <item msgid="7903565108986789641">"왼쪽 괄호"</item>[m
[32m+[m[32m    <item msgid="1688156211934459752">"오른쪽 괄호"</item>[m
[32m+[m[32m    <item msgid="6664829080840305856">"계승"</item>[m
[32m+[m[32m    <item msgid="2880199289575144121">"자연 대수"</item>[m
[32m+[m[32m    <item msgid="4398774906998694599">"대수"</item>[m
[32m+[m[32m    <item msgid="1791869359785943266">"제곱근"</item>[m
[32m+[m[32m    <item msgid="6833720171974254459">"나누기"</item>[m
[32m+[m[32m    <item msgid="2646574635189709515">"곱하기"</item>[m
[32m+[m[32m    <item msgid="3487936384379753697">"더하기"</item>[m
[32m+[m[32m    <item msgid="8608534484562258856">"빼기"</item>[m
[32m+[m[32m    <item msgid="3456824579675198186">" 점 "</item>[m
[32m+[m[32m    <item msgid="4528629783180278651">"거듭제곱"</item>[m
[32m+[m[32m    <item msgid="4050948027333760159">"탄젠트(Tangent)"</item>[m
[32m+[m[32m    <item msgid="8716478860618683850">"사인(sine)"</item>[m
[32m+[m[32m    <item msgid="3203211483560707480">"코사인(cosine)"</item>[m
[32m+[m[32m    <item msgid="8587490959348493065">"파이"</item>[m
[32m+[m[32m    <item msgid="8134315487552198394">"같음"</item>[m
[32m+[m[32m  </string-array>[m
[32m+[m[32m</resources>[m
[1mdiff --git a/app/src/main/res/values-land/arrays.xml b/app/src/main/res/values-land/arrays.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..8c518d1[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values-land/arrays.xml[m
[36m@@ -0,0 +1,54 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<!--[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright 2011, The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *     http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m[32m-->[m
[32m+[m[32m<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">[m
[32m+[m[32m    <array name="simple_buttons">[m
[32m+[m[32m        <item>@+id/digit0</item>[m
[32m+[m[32m        <item>@+id/digit1</item>[m
[32m+[m[32m        <item>@+id/digit2</item>[m
[32m+[m[32m        <item>@+id/digit3</item>[m
[32m+[m[32m        <item>@+id/digit4</item>[m
[32m+[m[32m        <item>@+id/digit5</item>[m
[32m+[m[32m        <item>@+id/digit6</item>[m
[32m+[m[32m        <item>@+id/digit7</item>[m
[32m+[m[32m        <item>@+id/digit8</item>[m
[32m+[m[32m        <item>@+id/digit9</item>[m
[32m+[m[32m        <item>@+id/dot</item>[m
[32m+[m[32m        <item>@+id/plus</item>[m
[32m+[m[32m        <item>@+id/minus</item>[m
[32m+[m[32m        <item>@+id/div</item>[m
[32m+[m[32m        <item>@+id/mul</item>[m
[32m+[m[32m        <item>@+id/equal</item>[m
[32m+[m[32m        <item>@+id/leftParen</item>[m
[32m+[m[32m        <item>@+id/rightParen</item>[m
[32m+[m[32m    </array>[m
[32m+[m
[32m+[m[32m    <array name="advanced_buttons">[m
[32m+[m[32m        <item>@+id/sin</item>[m
[32m+[m[32m        <item>@+id/cos</item>[m
[32m+[m[32m        <item>@+id/tan</item>[m
[32m+[m[32m        <item>@+id/ln</item>[m
[32m+[m[32m        <item>@+id/lg</item>[m
[32m+[m[32m        <item>@+id/e</item>[m
[32m+[m[32m        <item>@+id/pi</item>[m
[32m+[m[32m        <item>@+id/power</item>[m
[32m+[m[32m        <item>@+id/factorial</item>[m
[32m+[m[32m        <item>@+id/sqrt</item>[m
[32m+[m[32m    </array>[m
[32m+[m
[32m+[m[32m</resources>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/values-port/arrays.xml b/app/src/main/res/values-port/arrays.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..8bc888c[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values-port/arrays.xml[m
[36m@@ -0,0 +1,54 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<!--[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright 2011, The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *     http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m[32m-->[m
[32m+[m[32m<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">[m
[32m+[m[32m    <array name="simple_buttons">[m
[32m+[m[32m        <item>@+id/digit0</item>[m
[32m+[m[32m        <item>@+id/digit1</item>[m
[32m+[m[32m        <item>@+id/digit2</item>[m
[32m+[m[32m        <item>@+id/digit3</item>[m
[32m+[m[32m        <item>@+id/digit4</item>[m
[32m+[m[32m        <item>@+id/digit5</item>[m
[32m+[m[32m        <item>@+id/digit6</item>[m
[32m+[m[32m        <item>@+id/digit7</item>[m
[32m+[m[32m        <item>@+id/digit8</item>[m
[32m+[m[32m        <item>@+id/digit9</item>[m
[32m+[m[32m        <item>@+id/dot</item>[m
[32m+[m[32m        <item>@+id/plus</item>[m
[32m+[m[32m        <item>@+id/minus</item>[m
[32m+[m[32m        <item>@+id/div</item>[m
[32m+[m[32m        <item>@+id/mul</item>[m
[32m+[m[32m        <item>@+id/equal</item>[m
[32m+[m[32m    </array>[m
[32m+[m
[32m+[m[32m    <array name="advanced_buttons">[m
[32m+[m[32m        <item>@+id/leftParen</item>[m
[32m+[m[32m        <item>@+id/rightParen</item>[m
[32m+[m[32m        <item>@+id/sin</item>[m
[32m+[m[32m        <item>@+id/cos</item>[m
[32m+[m[32m        <item>@+id/tan</item>[m
[32m+[m[32m        <item>@+id/ln</item>[m
[32m+[m[32m        <item>@+id/lg</item>[m
[32m+[m[32m        <item>@+id/e</item>[m
[32m+[m[32m        <item>@+id/pi</item>[m
[32m+[m[32m        <item>@+id/power</item>[m
[32m+[m[32m        <item>@+id/factorial</item>[m
[32m+[m[32m        <item>@+id/sqrt</item>[m
[32m+[m[32m    </array>[m
[32m+[m
[32m+[m[32m</resources>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/values-sw600dp-port/styles.xml b/app/src/main/res/values-sw600dp-port/styles.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..799f6fe[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values-sw600dp-port/styles.xml[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<!-- Copyright (C) 2011 The Android Open Source Project[m
[32m+[m
[32m+[m[32m     Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m     you may not use this file except in compliance with the License.[m
[32m+[m[32m     You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m          http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m     Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m     distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m     See the License for the specific language governing permissions and[m
[32m+[m[32m     limitations under the License.[m
[32m+[m[32m-->[m
[32m+[m[32m<resources>[m
[32m+[m[32m    <dimen name="group_padding">48sp</dimen>[m
[32m+[m[32m</resources>[m
[1mdiff --git a/app/src/main/res/values-sw600dp/arrays.xml b/app/src/main/res/values-sw600dp/arrays.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..219b3e5[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values-sw600dp/arrays.xml[m
[36m@@ -0,0 +1,51 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<!--[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright 2011, The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *     http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m[32m-->[m
[32m+[m[32m<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">[m
[32m+[m[32m    <array name="buttons">[m
[32m+[m[32m        <item>@+id/digit0</item>[m
[32m+[m[32m        <item>@+id/digit1</item>[m
[32m+[m[32m        <item>@+id/digit2</item>[m
[32m+[m[32m        <item>@+id/digit3</item>[m
[32m+[m[32m        <item>@+id/digit4</item>[m
[32m+[m[32m        <item>@+id/digit5</item>[m
[32m+[m[32m        <item>@+id/digit6</item>[m
[32m+[m[32m        <item>@+id/digit7</item>[m
[32m+[m[32m        <item>@+id/digit8</item>[m
[32m+[m[32m        <item>@+id/digit9</item>[m
[32m+[m[32m        <item>@+id/dot</item>[m
[32m+[m[32m        <item>@+id/plus</item>[m
[32m+[m[32m        <item>@+id/minus</item>[m
[32m+[m[32m        <item>@+id/div</item>[m
[32m+[m[32m        <item>@+id/mul</item>[m
[32m+[m[32m        <item>@+id/equal</item>[m
[32m+[m[32m        <item>@+id/leftParen</item>[m
[32m+[m[32m        <item>@+id/rightParen</item>[m
[32m+[m[32m        <item>@+id/sin</item>[m
[32m+[m[32m        <item>@+id/cos</item>[m
[32m+[m[32m        <item>@+id/tan</item>[m
[32m+[m[32m        <item>@+id/ln</item>[m
[32m+[m[32m        <item>@+id/lg</item>[m
[32m+[m[32m        <item>@+id/e</item>[m
[32m+[m[32m        <item>@+id/pi</item>[m
[32m+[m[32m        <item>@+id/power</item>[m
[32m+[m[32m        <item>@+id/factorial</item>[m
[32m+[m[32m        <item>@+id/sqrt</item>[m
[32m+[m[32m    </array>[m
[32m+[m
[32m+[m[32m</resources>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/values-sw600dp/styles.xml b/app/src/main/res/values-sw600dp/styles.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..8676d59[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values-sw600dp/styles.xml[m
[36m@@ -0,0 +1,43 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<!-- Copyright (C) 2011 The Android Open Source Project[m
[32m+[m
[32m+[m[32m     Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m     you may not use this file except in compliance with the License.[m
[32m+[m[32m     You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m          http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m     Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m     distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m     See the License for the specific language governing permissions and[m
[32m+[m[32m     limitations under the License.[m
[32m+[m[32m-->[m
[32m+[m[32m<resources>[m
[32m+[m[32m    <dimen name="btn_digit_text_size">50sp</dimen>[m
[32m+[m[32m    <dimen name="btn_operation_text_size">50sp</dimen>[m
[32m+[m[32m    <dimen name="btn_function_text_size">25sp</dimen>[m
[32m+[m[32m    <dimen name="btn_clear_text_size">40sp</dimen>[m
[32m+[m[32m    <dimen name="display_text_size">60sp</dimen>[m
[32m+[m
[32m+[m[32m    <dimen name="left_right_padding">16sp</dimen>[m
[32m+[m[32m    <dimen name="top_bottom_padding">16sp</dimen>[m
[32m+[m[32m    <dimen name="group_padding">16sp</dimen>[m
[32m+[m
[32m+[m[32m    <style name="display_style">[m
[32m+[m[32m       <item name="android:textSize">@dimen/display_text_size</item>[m
[32m+[m[32m       <item name="android:inputType">text|textNoSuggestions</item>[m
[32m+[m[32m       <item name="android:gravity">right|bottom</item>[m
[32m+[m[32m       <item name="android:layout_gravity">right|bottom</item>[m
[32m+[m[32m       <item name="android:textColor">#ffffff</item>[m
[32m+[m[32m       <item name="android:maxLines">1</item>[m
[32m+[m[32m       <item name="android:scrollbars">none</item>[m
[32m+[m[32m       <item name="android:scrollHorizontally">true</item>[m
[32m+[m[32m       <item name="android:layout_width">match_parent</item>[m
[32m+[m[32m       <item name="android:layout_height">wrap_content</item>[m
[32m+[m[32m       <item name="android:paddingTop">8dp</item>[m
[32m+[m[32m       <item name="android:paddingLeft">8dp</item>[m
[32m+[m[32m       <item name="android:paddingRight">8dp</item>[m
[32m+[m[32m       <item name="android:paddingBottom">0dp</item>[m
[32m+[m[32m    </style>[m
[32m+[m[32m</resources>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/values-sw800dp-land/styles.xml b/app/src/main/res/values-sw800dp-land/styles.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..9d1c26c[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values-sw800dp-land/styles.xml[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<!-- Copyright (C) 2011 The Android Open Source Project[m
[32m+[m
[32m+[m[32m     Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m     you may not use this file except in compliance with the License.[m
[32m+[m[32m     You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m          http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m     Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m     distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m     See the License for the specific language governing permissions and[m
[32m+[m[32m     limitations under the License.[m
[32m+[m[32m-->[m
[32m+[m[32m<resources>[m
[32m+[m[32m    <dimen name="left_right_padding">48sp</dimen>[m
[32m+[m[32m    <dimen name="top_bottom_padding">48sp</dimen>[m
[32m+[m[32m    <dimen name="group_padding">48sp</dimen>[m
[32m+[m[32m</resources>[m
[1mdiff --git a/app/src/main/res/values-sw800dp-port/styles.xml b/app/src/main/res/values-sw800dp-port/styles.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..a6b181e[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values-sw800dp-port/styles.xml[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<!-- Copyright (C) 2011 The Android Open Source Project[m
[32m+[m
[32m+[m[32m     Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m     you may not use this file except in compliance with the License.[m
[32m+[m[32m     You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m          http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m     Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m     distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m     See the License for the specific language governing permissions and[m
[32m+[m[32m     limitations under the License.[m
[32m+[m[32m-->[m
[32m+[m[32m<resources>[m
[32m+[m[32m    <dimen name="left_right_padding">32sp</dimen>[m
[32m+[m[32m    <dimen name="top_bottom_padding">64sp</dimen>[m
[32m+[m[32m    <dimen name="group_padding">72sp</dimen>[m
[32m+[m[32m</resources>[m
[1mdiff --git a/app/src/main/res/values-sw800dp/styles.xml b/app/src/main/res/values-sw800dp/styles.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..9dd6b4e[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values-sw800dp/styles.xml[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<!-- Copyright (C) 2011 The Android Open Source Project[m
[32m+[m
[32m+[m[32m     Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m     you may not use this file except in compliance with the License.[m
[32m+[m[32m     You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m          http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m     Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m     distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m     See the License for the specific language governing permissions and[m
[32m+[m[32m     limitations under the License.[m
[32m+[m[32m-->[m
[32m+[m[32m<resources>[m
[32m+[m[32m    <dimen name="btn_digit_text_size">64sp</dimen>[m
[32m+[m[32m    <dimen name="btn_operation_text_size">64sp</dimen>[m
[32m+[m[32m    <dimen name="btn_function_text_size">32sp</dimen>[m
[32m+[m[32m    <dimen name="btn_clear_text_size">48sp</dimen>[m
[32m+[m[32m    <dimen name="display_text_size">72sp</dimen>[m
[32m+[m[32m</resources>[m
[1mdiff --git a/app/src/main/res/values-vi/strings.xml b/app/src/main/res/values-vi/strings.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..31527ee[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values-vi/strings.xml[m
[36m@@ -0,0 +1,84 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<!--  Copyright (C) 2007 The Android Open Source Project[m
[32m+[m
[32m+[m[32m     Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m     you may not use this file except in compliance with the License.[m
[32m+[m[32m     You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m          http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m     Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m     distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m     See the License for the specific language governing permissions and[m
[32m+[m[32m     limitations under the License.[m
[32m+[m[32m -->[m
[32m+[m
[32m+[m[32m<resources xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">[m
[32m+[m[32m    <string name="app_name" msgid="8095131950334945205">"Máy tính"</string>[m
[32m+[m[32m    <string name="error" msgid="9197457880925804499">"Lỗi"</string>[m
[32m+[m[32m    <string name="digit0" msgid="8069590963464434135">"0"</string>[m
[32m+[m[32m    <string name="digit1" msgid="8535041374797804029">"1"</string>[m
[32m+[m[32m    <string name="digit2" msgid="8977354203154316247">"2"</string>[m
[32m+[m[32m    <string name="digit3" msgid="148544090755132760">"3"</string>[m
[32m+[m[32m    <string name="digit4" msgid="2199490603838247678">"4"</string>[m
[32m+[m[32m    <string name="digit5" msgid="7568514524384173087">"5"</string>[m
[32m+[m[32m    <string name="digit6" msgid="6705952561049362551">"6"</string>[m
[32m+[m[32m    <string name="digit7" msgid="658125644218958447">"7"</string>[m
[32m+[m[32m    <string name="digit8" msgid="3134686906411558886">"8"</string>[m
[32m+[m[32m    <string name="digit9" msgid="765379157698748031">"9"</string>[m
[32m+[m[32m    <string name="del" msgid="6248896117422989693">"XOÁ"</string>[m
[32m+[m[32m    <string name="clear" msgid="8103610981407459768">"CLR"</string>[m
[32m+[m[32m    <string name="sin" msgid="6793866152659175277">"sin"</string>[m
[32m+[m[32m    <string name="cos" msgid="6901841853098114414">"cos"</string>[m
[32m+[m[32m    <string name="tan" msgid="7957459816738554960">"tan"</string>[m
[32m+[m[32m    <string name="e" msgid="1377847800971731483">"e"</string>[m
[32m+[m[32m    <string name="ln" msgid="6888500680285403344">"ln"</string>[m
[32m+[m[32m    <string name="lg" msgid="873623857385418182">"ghi"</string>[m
[32m+[m[32m    <string name="leftParen" msgid="4850643713953092099">"("</string>[m
[32m+[m[32m    <string name="rightParen" msgid="3177971166159324016">")"</string>[m
[32m+[m[32m    <string name="basic" msgid="7691469861698059753">"Bảng điều khiển cơ bản"</string>[m
[32m+[m[32m    <string name="advanced" msgid="7122495413742976492">"Bảng điều khiển nâng cao"</string>[m
[32m+[m[32m    <string name="clear_history" msgid="8458043980601165012">"Xóa lịch sử"</string>[m
[32m+[m[32m    <string name="text_copied_toast" msgid="5801480710472541833">"Đã sao chép văn bản."</string>[m
[32m+[m[32m    <string name="leftParenDesc" msgid="8446428211982811379">"dấu ngoặc trái"</string>[m
[32m+[m[32m    <string name="rightParenDesc" msgid="9133691645148976523">"dấu ngoặc phải"</string>[m
[32m+[m[32m    <string name="factorialDesc" msgid="9217024218012761574">"giai thừa"</string>[m
[32m+[m[32m    <string name="lnDesc" msgid="1052579286300842270">"logarit tự nhiên"</string>[m
[32m+[m[32m    <string name="lgDesc" msgid="6490920451513731160">"logarit"</string>[m
[32m+[m[32m    <string name="sqrtDesc" msgid="2247252128762219267">"dấu khai căn"</string>[m
[32m+[m[32m    <string name="divDesc" msgid="7442623079124315427">"chia"</string>[m
[32m+[m[32m    <string name="mulDesc" msgid="9003016819648670694">"nhân"</string>[m
[32m+[m[32m    <string name="plusDesc" msgid="3145322700823848264">"cộng"</string>[m
[32m+[m[32m    <string name="minusDesc" msgid="5033462008907390900">"trừ"</string>[m
[32m+[m[32m    <string name="dotDesc" msgid="5253752241630161722">"điểm"</string>[m
[32m+[m[32m    <string name="powerDesc" msgid="9034898318444176910">"lũy thừa"</string>[m
[32m+[m[32m    <string name="delDesc" msgid="8211175878012032240">"xóa"</string>[m
[32m+[m[32m    <string name="clearDesc" msgid="8015748901120751476">"xóa"</string>[m
[32m+[m[32m    <string name="tanDesc" msgid="2055554933130702423">"tiếp tuyến"</string>[m
[32m+[m[32m    <string name="sinDesc" msgid="6563285042235077204">"sin"</string>[m
[32m+[m[32m    <string name="cosDesc" msgid="4048942450207926538">"cosin"</string>[m
[32m+[m[32m    <string name="eDesc" msgid="6709583372168924068">"Số Euler"</string>[m
[32m+[m[32m    <string name="piDesc" msgid="8838151606775021517">"pi"</string>[m
[32m+[m[32m    <string name="equalDesc" msgid="4164435100263313101">"bằng"</string>[m
[32m+[m[32m  <string-array name="operatorDescs">[m
[32m+[m[32m    <item msgid="7903565108986789641">"dấu ngoặc trái"</item>[m
[32m+[m[32m    <item msgid="1688156211934459752">"dấu ngoặc phải"</item>[m
[32m+[m[32m    <item msgid="6664829080840305856">"giai thừa"</item>[m
[32m+[m[32m    <item msgid="2880199289575144121">"logarit tự nhiên"</item>[m
[32m+[m[32m    <item msgid="4398774906998694599">"logarit"</item>[m
[32m+[m[32m    <item msgid="1791869359785943266">"dấu khai căn"</item>[m
[32m+[m[32m    <item msgid="6833720171974254459">"chia cho"</item>[m
[32m+[m[32m    <item msgid="2646574635189709515">"nhân với"</item>[m
[32m+[m[32m    <item msgid="3487936384379753697">"cộng"</item>[m
[32m+[m[32m    <item msgid="8608534484562258856">"trừ"</item>[m
[32m+[m[32m    <item msgid="3456824579675198186">" điểm "</item>[m
[32m+[m[32m    <item msgid="4528629783180278651">"lũy thừa"</item>[m
[32m+[m[32m    <item msgid="4050948027333760159">"tiếp tuyến"</item>[m
[32m+[m[32m    <item msgid="8716478860618683850">"sin"</item>[m
[32m+[m[32m    <item msgid="3203211483560707480">"cosin"</item>[m
[32m+[m[32m    <item msgid="8587490959348493065">"pi"</item>[m
[32m+[m[32m    <item msgid="8134315487552198394">"bằng"</item>[m
[32m+[m[32m  </string-array>[m
[32m+[m[32m</resources>[m
[1mdiff --git a/app/src/main/res/values-zh-rCN/strings.xml b/app/src/main/res/values-zh-rCN/strings.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..a762c7b[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values-zh-rCN/strings.xml[m
[36m@@ -0,0 +1,84 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<!--  Copyright (C) 2007 The Android Open Source Project[m
[32m+[m
[32m+[m[32m     Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m     you may not use this file except in compliance with the License.[m
[32m+[m[32m     You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m          http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m     Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m     distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m     See the License for the specific language governing permissions and[m
[32m+[m[32m     limitations under the License.[m
[32m+[m[32m -->[m
[32m+[m
[32m+[m[32m<resources xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">[m
[32m+[m[32m    <string name="app_name" msgid="8095131950334945205">"WorkBox"</string>[m
[32m+[m[32m    <string name="error" msgid="9197457880925804499">"出错"</string>[m
[32m+[m[32m    <string name="digit0" msgid="8069590963464434135">"0"</string>[m
[32m+[m[32m    <string name="digit1" msgid="8535041374797804029">"1"</string>[m
[32m+[m[32m    <string name="digit2" msgid="8977354203154316247">"2"</string>[m
[32m+[m[32m    <string name="digit3" msgid="148544090755132760">"3"</string>[m
[32m+[m[32m    <string name="digit4" msgid="2199490603838247678">"4"</string>[m
[32m+[m[32m    <string name="digit5" msgid="7568514524384173087">"5"</string>[m
[32m+[m[32m    <string name="digit6" msgid="6705952561049362551">"6"</string>[m
[32m+[m[32m    <string name="digit7" msgid="658125644218958447">"7"</string>[m
[32m+[m[32m    <string name="digit8" msgid="3134686906411558886">"8"</string>[m
[32m+[m[32m    <string name="digit9" msgid="765379157698748031">"9"</string>[m
[32m+[m[32m    <string name="del" msgid="6248896117422989693">"删除"</string>[m
[32m+[m[32m    <string name="clear" msgid="8103610981407459768">"清除"</string>[m
[32m+[m[32m    <string name="sin" msgid="6793866152659175277">"sin"</string>[m
[32m+[m[32m    <string name="cos" msgid="6901841853098114414">"cos"</string>[m
[32m+[m[32m    <string name="tan" msgid="7957459816738554960">"tan"</string>[m
[32m+[m[32m    <string name="e" msgid="1377847800971731483">"e"</string>[m
[32m+[m[32m    <string name="ln" msgid="6888500680285403344">"ln"</string>[m
[32m+[m[32m    <string name="lg" msgid="873623857385418182">"log"</string>[m
[32m+[m[32m    <string name="leftParen" msgid="4850643713953092099">"("</string>[m
[32m+[m[32m    <string name="rightParen" msgid="3177971166159324016">")"</string>[m
[32m+[m[32m    <string name="basic" msgid="7691469861698059753">"基本面板"</string>[m
[32m+[m[32m    <string name="advanced" msgid="7122495413742976492">"高级面板"</string>[m
[32m+[m[32m    <string name="clear_history" msgid="8458043980601165012">"清除历史记录"</string>[m
[32m+[m[32m    <string name="text_copied_toast" msgid="5801480710472541833">"文本已复制。"</string>[m
[32m+[m[32m    <string name="leftParenDesc" msgid="8446428211982811379">"左括号"</string>[m
[32m+[m[32m    <string name="rightParenDesc" msgid="9133691645148976523">"右括号"</string>[m
[32m+[m[32m    <string name="factorialDesc" msgid="9217024218012761574">"阶乘"</string>[m
[32m+[m[32m    <string name="lnDesc" msgid="1052579286300842270">"自然对数"</string>[m
[32m+[m[32m    <string name="lgDesc" msgid="6490920451513731160">"对数"</string>[m
[32m+[m[32m    <string name="sqrtDesc" msgid="2247252128762219267">"平方根"</string>[m
[32m+[m[32m    <string name="divDesc" msgid="7442623079124315427">"除"</string>[m
[32m+[m[32m    <string name="mulDesc" msgid="9003016819648670694">"乘"</string>[m
[32m+[m[32m    <string name="plusDesc" msgid="3145322700823848264">"加"</string>[m
[32m+[m[32m    <string name="minusDesc" msgid="5033462008907390900">"减"</string>[m
[32m+[m[32m    <string name="dotDesc" msgid="5253752241630161722">"小数点"</string>[m
[32m+[m[32m    <string name="powerDesc" msgid="9034898318444176910">"幂"</string>[m
[32m+[m[32m    <string name="delDesc" msgid="8211175878012032240">"删除"</string>[m
[32m+[m[32m    <string name="clearDesc" msgid="8015748901120751476">"清除"</string>[m
[32m+[m[32m    <string name="tanDesc" msgid="2055554933130702423">"正切"</string>[m
[32m+[m[32m    <string name="sinDesc" msgid="6563285042235077204">"正弦"</string>[m
[32m+[m[32m    <string name="cosDesc" msgid="4048942450207926538">"余弦"</string>[m
[32m+[m[32m    <string name="eDesc" msgid="6709583372168924068">"欧拉数"</string>[m
[32m+[m[32m    <string name="piDesc" msgid="8838151606775021517">"圆周率"</string>[m
[32m+[m[32m    <string name="equalDesc" msgid="4164435100263313101">"等于"</string>[m
[32m+[m[32m  <string-array name="operatorDescs">[m
[32m+[m[32m    <item msgid="7903565108986789641">"左括号"</item>[m
[32m+[m[32m    <item msgid="1688156211934459752">"右括号"</item>[m
[32m+[m[32m    <item msgid="6664829080840305856">"阶乘"</item>[m
[32m+[m[32m    <item msgid="2880199289575144121">"自然对数"</item>[m
[32m+[m[32m    <item msgid="4398774906998694599">"对数"</item>[m
[32m+[m[32m    <item msgid="1791869359785943266">"平方根"</item>[m
[32m+[m[32m    <item msgid="6833720171974254459">"除以"</item>[m
[32m+[m[32m    <item msgid="2646574635189709515">"乘"</item>[m
[32m+[m[32m    <item msgid="3487936384379753697">"加"</item>[m
[32m+[m[32m    <item msgid="8608534484562258856">"减"</item>[m
[32m+[m[32m    <item msgid="3456824579675198186">"点"</item>[m
[32m+[m[32m    <item msgid="4528629783180278651">"幂"</item>[m
[32m+[m[32m    <item msgid="4050948027333760159">"正切"</item>[m
[32m+[m[32m    <item msgid="8716478860618683850">"正弦"</item>[m
[32m+[m[32m    <item msgid="3203211483560707480">"余弦"</item>[m
[32m+[m[32m    <item msgid="8587490959348493065">"圆周率"</item>[m
[32m+[m[32m    <item msgid="8134315487552198394">"等于"</item>[m
[32m+[m[32m  </string-array>[m
[32m+[m[32m</resources>[m
[1mdiff --git a/app/src/main/res/values-zh-rHK/strings.xml b/app/src/main/res/values-zh-rHK/strings.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..b3a8473[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values-zh-rHK/strings.xml[m
[36m@@ -0,0 +1,84 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<!--  Copyright (C) 2007 The Android Open Source Project[m
[32m+[m
[32m+[m[32m     Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m     you may not use this file except in compliance with the License.[m
[32m+[m[32m     You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m          http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m     Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m     distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m     See the License for the specific language governing permissions and[m
[32m+[m[32m     limitations under the License.[m
[32m+[m[32m -->[m
[32m+[m
[32m+[m[32m<resources xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">[m
[32m+[m[32m    <string name="app_name" msgid="8095131950334945205">"計算機"</string>[m
[32m+[m[32m    <string name="error" msgid="9197457880925804499">"發生錯誤"</string>[m
[32m+[m[32m    <string name="digit0" msgid="8069590963464434135">"0"</string>[m
[32m+[m[32m    <string name="digit1" msgid="8535041374797804029">"1"</string>[m
[32m+[m[32m    <string name="digit2" msgid="8977354203154316247">"2"</string>[m
[32m+[m[32m    <string name="digit3" msgid="148544090755132760">"3"</string>[m
[32m+[m[32m    <string name="digit4" msgid="2199490603838247678">"4"</string>[m
[32m+[m[32m    <string name="digit5" msgid="7568514524384173087">"5"</string>[m
[32m+[m[32m    <string name="digit6" msgid="6705952561049362551">"6"</string>[m
[32m+[m[32m    <string name="digit7" msgid="658125644218958447">"7"</string>[m
[32m+[m[32m    <string name="digit8" msgid="3134686906411558886">"8"</string>[m
[32m+[m[32m    <string name="digit9" msgid="765379157698748031">"9"</string>[m
[32m+[m[32m    <string name="del" msgid="6248896117422989693">"刪除"</string>[m
[32m+[m[32m    <string name="clear" msgid="8103610981407459768">"清除"</string>[m
[32m+[m[32m    <string name="sin" msgid="6793866152659175277">"sin"</string>[m
[32m+[m[32m    <string name="cos" msgid="6901841853098114414">"cos"</string>[m
[32m+[m[32m    <string name="tan" msgid="7957459816738554960">"Tan"</string>[m
[32m+[m[32m    <string name="e" msgid="1377847800971731483">"e"</string>[m
[32m+[m[32m    <string name="ln" msgid="6888500680285403344">"LN"</string>[m
[32m+[m[32m    <string name="lg" msgid="873623857385418182">"記錄"</string>[m
[32m+[m[32m    <string name="leftParen" msgid="4850643713953092099">"("</string>[m
[32m+[m[32m    <string name="rightParen" msgid="3177971166159324016">")"</string>[m
[32m+[m[32m    <string name="basic" msgid="7691469861698059753">"基本面板"</string>[m
[32m+[m[32m    <string name="advanced" msgid="7122495413742976492">"進階面板"</string>[m
[32m+[m[32m    <string name="clear_history" msgid="8458043980601165012">"清除記錄"</string>[m
[32m+[m[32m    <string name="text_copied_toast" msgid="5801480710472541833">"文字已複製。"</string>[m
[32m+[m[32m    <string name="leftParenDesc" msgid="8446428211982811379">"左括弧"</string>[m
[32m+[m[32m    <string name="rightParenDesc" msgid="9133691645148976523">"右括弧"</string>[m
[32m+[m[32m    <string name="factorialDesc" msgid="9217024218012761574">"階乘"</string>[m
[32m+[m[32m    <string name="lnDesc" msgid="1052579286300842270">"自然對數"</string>[m
[32m+[m[32m    <string name="lgDesc" msgid="6490920451513731160">"對數"</string>[m
[32m+[m[32m    <string name="sqrtDesc" msgid="2247252128762219267">"平方根"</string>[m
[32m+[m[32m    <string name="divDesc" msgid="7442623079124315427">"除"</string>[m
[32m+[m[32m    <string name="mulDesc" msgid="9003016819648670694">"乘"</string>[m
[32m+[m[32m    <string name="plusDesc" msgid="3145322700823848264">"加"</string>[m
[32m+[m[32m    <string name="minusDesc" msgid="5033462008907390900">"減"</string>[m
[32m+[m[32m    <string name="dotDesc" msgid="5253752241630161722">"點"</string>[m
[32m+[m[32m    <string name="powerDesc" msgid="9034898318444176910">"指數"</string>[m
[32m+[m[32m    <string name="delDesc" msgid="8211175878012032240">"刪除"</string>[m
[32m+[m[32m    <string name="clearDesc" msgid="8015748901120751476">"清除"</string>[m
[32m+[m[32m    <string name="tanDesc" msgid="2055554933130702423">"正切"</string>[m
[32m+[m[32m    <string name="sinDesc" msgid="6563285042235077204">"正弦"</string>[m
[32m+[m[32m    <string name="cosDesc" msgid="4048942450207926538">"餘弦"</string>[m
[32m+[m[32m    <string name="eDesc" msgid="6709583372168924068">"歐拉數"</string>[m
[32m+[m[32m    <string name="piDesc" msgid="8838151606775021517">"圓周率"</string>[m
[32m+[m[32m    <string name="equalDesc" msgid="4164435100263313101">"等於"</string>[m
[32m+[m[32m  <string-array name="operatorDescs">[m
[32m+[m[32m    <item msgid="7903565108986789641">"左括弧"</item>[m
[32m+[m[32m    <item msgid="1688156211934459752">"右括弧"</item>[m
[32m+[m[32m    <item msgid="6664829080840305856">"階乘"</item>[m
[32m+[m[32m    <item msgid="2880199289575144121">"自然對數"</item>[m
[32m+[m[32m    <item msgid="4398774906998694599">"對數"</item>[m
[32m+[m[32m    <item msgid="1791869359785943266">"平方根"</item>[m
[32m+[m[32m    <item msgid="6833720171974254459">"除以"</item>[m
[32m+[m[32m    <item msgid="2646574635189709515">"乘以"</item>[m
[32m+[m[32m    <item msgid="3487936384379753697">"加"</item>[m
[32m+[m[32m    <item msgid="8608534484562258856">"減"</item>[m
[32m+[m[32m    <item msgid="3456824579675198186">"點"</item>[m
[32m+[m[32m    <item msgid="4528629783180278651">"指數"</item>[m
[32m+[m[32m    <item msgid="4050948027333760159">"正切"</item>[m
[32m+[m[32m    <item msgid="8716478860618683850">"正弦"</item>[m
[32m+[m[32m    <item msgid="3203211483560707480">"餘弦"</item>[m
[32m+[m[32m    <item msgid="8587490959348493065">"圓周率"</item>[m
[32m+[m[32m    <item msgid="8134315487552198394">"等於"</item>[m
[32m+[m[32m  </string-array>[m
[32m+[m[32m</resources>[m
[1mdiff --git a/app/src/main/res/values-zh-rTW/strings.xml b/app/src/main/res/values-zh-rTW/strings.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..67f590c[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values-zh-rTW/strings.xml[m
[36m@@ -0,0 +1,84 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<!--  Copyright (C) 2007 The Android Open Source Project[m
[32m+[m
[32m+[m[32m     Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m     you may not use this file except in compliance with the License.[m
[32m+[m[32m     You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m          http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m     Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m     distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m     See the License for the specific language governing permissions and[m
[32m+[m[32m     limitations under the License.[m
[32m+[m[32m -->[m
[32m+[m
[32m+[m[32m<resources xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">[m
[32m+[m[32m    <string name="app_name" msgid="8095131950334945205">"計算機"</string>[m
[32m+[m[32m    <string name="error" msgid="9197457880925804499">"錯誤"</string>[m
[32m+[m[32m    <string name="digit0" msgid="8069590963464434135">"0"</string>[m
[32m+[m[32m    <string name="digit1" msgid="8535041374797804029">"1"</string>[m
[32m+[m[32m    <string name="digit2" msgid="8977354203154316247">"2"</string>[m
[32m+[m[32m    <string name="digit3" msgid="148544090755132760">"3"</string>[m
[32m+[m[32m    <string name="digit4" msgid="2199490603838247678">"4"</string>[m
[32m+[m[32m    <string name="digit5" msgid="7568514524384173087">"5"</string>[m
[32m+[m[32m    <string name="digit6" msgid="6705952561049362551">"6"</string>[m
[32m+[m[32m    <string name="digit7" msgid="658125644218958447">"7"</string>[m
[32m+[m[32m    <string name="digit8" msgid="3134686906411558886">"8"</string>[m
[32m+[m[32m    <string name="digit9" msgid="765379157698748031">"9"</string>[m
[32m+[m[32m    <string name="del" msgid="6248896117422989693">"刪除"</string>[m
[32m+[m[32m    <string name="clear" msgid="8103610981407459768">"清除"</string>[m
[32m+[m[32m    <string name="sin" msgid="6793866152659175277">"sin"</string>[m
[32m+[m[32m    <string name="cos" msgid="6901841853098114414">"cos"</string>[m
[32m+[m[32m    <string name="tan" msgid="7957459816738554960">"tan"</string>[m
[32m+[m[32m    <string name="e" msgid="1377847800971731483">"e"</string>[m
[32m+[m[32m    <string name="ln" msgid="6888500680285403344">"ln"</string>[m
[32m+[m[32m    <string name="lg" msgid="873623857385418182">"log"</string>[m
[32m+[m[32m    <string name="leftParen" msgid="4850643713953092099">"("</string>[m
[32m+[m[32m    <string name="rightParen" msgid="3177971166159324016">")"</string>[m
[32m+[m[32m    <string name="basic" msgid="7691469861698059753">"基本面板"</string>[m
[32m+[m[32m    <string name="advanced" msgid="7122495413742976492">"進階面板"</string>[m
[32m+[m[32m    <string name="clear_history" msgid="8458043980601165012">"清除紀錄"</string>[m
[32m+[m[32m    <string name="text_copied_toast" msgid="5801480710472541833">"文字已複製。"</string>[m
[32m+[m[32m    <string name="leftParenDesc" msgid="8446428211982811379">"左括弧"</string>[m
[32m+[m[32m    <string name="rightParenDesc" msgid="9133691645148976523">"右括弧"</string>[m
[32m+[m[32m    <string name="factorialDesc" msgid="9217024218012761574">"階乘"</string>[m
[32m+[m[32m    <string name="lnDesc" msgid="1052579286300842270">"自然對數"</string>[m
[32m+[m[32m    <string name="lgDesc" msgid="6490920451513731160">"對數"</string>[m
[32m+[m[32m    <string name="sqrtDesc" msgid="2247252128762219267">"平方根號"</string>[m
[32m+[m[32m    <string name="divDesc" msgid="7442623079124315427">"除號"</string>[m
[32m+[m[32m    <string name="mulDesc" msgid="9003016819648670694">"乘號"</string>[m
[32m+[m[32m    <string name="plusDesc" msgid="3145322700823848264">"加號"</string>[m
[32m+[m[32m    <string name="minusDesc" msgid="5033462008907390900">"減號"</string>[m
[32m+[m[32m    <string name="dotDesc" msgid="5253752241630161722">"點"</string>[m
[32m+[m[32m    <string name="powerDesc" msgid="9034898318444176910">"指數"</string>[m
[32m+[m[32m    <string name="delDesc" msgid="8211175878012032240">"刪除"</string>[m
[32m+[m[32m    <string name="clearDesc" msgid="8015748901120751476">"清除"</string>[m
[32m+[m[32m    <string name="tanDesc" msgid="2055554933130702423">"正切函數"</string>[m
[32m+[m[32m    <string name="sinDesc" msgid="6563285042235077204">"正弦函數"</string>[m
[32m+[m[32m    <string name="cosDesc" msgid="4048942450207926538">"餘弦函數"</string>[m
[32m+[m[32m    <string name="eDesc" msgid="6709583372168924068">"尤拉數"</string>[m
[32m+[m[32m    <string name="piDesc" msgid="8838151606775021517">"圓周率符號"</string>[m
[32m+[m[32m    <string name="equalDesc" msgid="4164435100263313101">"等於"</string>[m
[32m+[m[32m  <string-array name="operatorDescs">[m
[32m+[m[32m    <item msgid="7903565108986789641">"左括弧"</item>[m
[32m+[m[32m    <item msgid="1688156211934459752">"右括弧"</item>[m
[32m+[m[32m    <item msgid="6664829080840305856">"階乘"</item>[m
[32m+[m[32m    <item msgid="2880199289575144121">"自然對數"</item>[m
[32m+[m[32m    <item msgid="4398774906998694599">"對數"</item>[m
[32m+[m[32m    <item msgid="1791869359785943266">"平方根號"</item>[m
[32m+[m[32m    <item msgid="6833720171974254459">"除以"</item>[m
[32m+[m[32m    <item msgid="2646574635189709515">"乘以"</item>[m
[32m+[m[32m    <item msgid="3487936384379753697">"加"</item>[m
[32m+[m[32m    <item msgid="8608534484562258856">"減"</item>[m
[32m+[m[32m    <item msgid="3456824579675198186">" 點 "</item>[m
[32m+[m[32m    <item msgid="4528629783180278651">"指數"</item>[m
[32m+[m[32m    <item msgid="4050948027333760159">"正切函數"</item>[m
[32m+[m[32m    <item msgid="8716478860618683850">"正弦函數"</item>[m
[32m+[m[32m    <item msgid="3203211483560707480">"餘弦函數"</item>[m
[32m+[m[32m    <item msgid="8587490959348493065">"圓周率"</item>[m
[32m+[m[32m    <item msgid="8134315487552198394">"等於"</item>[m
[32m+[m[32m  </string-array>[m
[32m+[m[32m</resources>[m
[1mdiff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..37e9fd2[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values/colors.xml[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<resources>[m
[32m+[m[32m    <color name="colorPrimary">#3F51B5</color>[m
[32m+[m[32m    <color name="colorPrimaryDark">#303F9F</color>[m
[32m+[m[32m    <color name="colorAccent">#FF4081</color>[m
[32m+[m[32m    <color name="magic_flame">#00ffffff</color>[m
[32m+[m[32m    <color name="button_text">#ffffffff</color>[m
[32m+[m[32m</resources>[m
[1mdiff --git a/app/src/main/res/values/constants.xml b/app/src/main/res/values/constants.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..98c14ec[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values/constants.xml[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<!-- Copyright (C) 2011 The Android Open Source Project[m
[32m+[m
[32m+[m[32m     Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m     you may not use this file except in compliance with the License.[m
[32m+[m[32m     You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m          http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m     Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m     distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m     See the License for the specific language governing permissions and[m
[32m+[m[32m     limitations under the License.[m
[32m+[m[32m-->[m
[32m+[m
[32m+[m[32m<resources>[m
[32m+[m[32m    <integer name="max_digits">14</integer>[m
[32m+[m[32m</resources>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..3446cbe[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values/strings.xml[m
[36m@@ -0,0 +1,229 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<!-- Copyright (C) 2007 The Android Open Source Project[m
[32m+[m
[32m+[m[32m     Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m     you may not use this file except in compliance with the License.[m
[32m+[m[32m     You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m          http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m     Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m     distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m     See the License for the specific language governing permissions and[m
[32m+[m[32m     limitations under the License.[m
[32m+[m[32m-->[m
[32m+[m
[32m+[m[32m<resources>[m
[32m+[m[32m    <color name="holo_blue_light">#ff33b5e5</color>[m
[32m+[m[32m    <!-- Application name -->[m
[32m+[m[32m    <string name="app_name">WorkBox</string>[m
[32m+[m[32m    <!-- If there is a syntax error in the user entered calculation, an error dialog will appear.  This is the title. -->[m
[32m+[m[32m    <string name="error">Error</string>[m
[32m+[m[32m    <!-- Displayed numbers for the digit buttons -->[m
[32m+[m[32m    <string name="digit0">0</string>[m
[32m+[m[32m    <!-- Displayed numbers for the digit buttons -->[m
[32m+[m[32m    <string name="digit1">1</string>[m
[32m+[m[32m    <!-- Displayed numbers for the digit buttons -->[m
[32m+[m[32m    <string name="digit2">2</string>[m
[32m+[m[32m    <!-- Displayed numbers for the digit buttons -->[m
[32m+[m[32m    <string name="digit3">3</string>[m
[32m+[m[32m    <!-- Displayed numbers for the digit buttons -->[m
[32m+[m[32m    <string name="digit4">4</string>[m
[32m+[m[32m    <!-- Displayed numbers for the digit buttons -->[m
[32m+[m[32m    <string name="digit5">5</string>[m
[32m+[m[32m    <!-- Displayed numbers for the digit buttons -->[m
[32m+[m[32m    <string name="digit6">6</string>[m
[32m+[m[32m    <!-- Displayed numbers for the digit buttons -->[m
[32m+[m[32m    <string name="digit7">7</string>[m
[32m+[m[32m    <!-- Displayed numbers for the digit buttons -->[m
[32m+[m[32m    <string name="digit8">8</string>[m
[32m+[m[32m    <!-- Displayed numbers for the digit buttons -->[m
[32m+[m[32m    <string name="digit9">9</string>[m
[32m+[m[32m    <!-- Button name on screen to delete the last entered digit or operator -->[m
[32m+[m[32m    <string name="del">DELETE</string>[m
[32m+[m[32m    <!-- Button name on screen to clear the entire calculation field. [CHAR LIMIT=6] -->[m
[32m+[m[32m    <string name="clear">CLR</string>[m
[32m+[m[32m    <!-- Do not translate. Unicode division sign; don't translate. Displayed as button on screen. -->[m
[32m+[m[32m    <string name="div" translatable="false">\u00f7</string>[m
[32m+[m[32m    <!-- Do not translate. Unicode multiplication sign; don't translate. Displayed as button on screen. -->[m
[32m+[m[32m    <string name="mul" translatable="false">\u00d7</string>[m
[32m+[m[32m    <!-- Do not translate. Plus sign, displayed as button on screen -->[m
[32m+[m[32m    <string name="plus" translatable="false">+</string>[m
[32m+[m[32m    <!-- Do not translate. Unicode minus sign; don't translate. Displayed as button on screen. -->[m
[32m+[m[32m    <string name="minus" translatable="false">\u2212</string>[m
[32m+[m[32m    <!-- Do not translate. Decimal point; don't translate. Displayed as button on screen. -->[m
[32m+[m[32m    <string name="dot" translatable="false">.</string>[m
[32m+[m[32m    <!-- Do not translate. Equal sign; don't translate. Displayed as button on screen. -->[m
[32m+[m[32m    <string name="equal" translatable="false">=</string>[m
[32m+[m[32m    <!-- Do not translate. Down arrow; don't translate. Displayed as button on screen. -->[m
[32m+[m[32m    <string name="enter" translatable="false">\u2193</string>[m
[32m+[m[32m    <!-- Displayed on buttons on screen for the sin function. -->[m
[32m+[m[32m    <string name="sin">sin</string>[m
[32m+[m[32m    <!-- Do not translate. What we replace translated SIN with for calculating sin.-->[m
[32m+[m[32m    <string translate="false" name="sin_mathematical_value" translatable="false">sin</string>[m
[32m+[m[32m    <!-- Displayed on buttons on screen for the cos function. -->[m
[32m+[m[32m    <string name="cos">cos</string>[m
[32m+[m[32m    <!-- Do not translate. What we replace translated COS with for calculating cos. -->[m
[32m+[m[32m    <string translate="false" name="cos_mathematical_value" translatable="false">cos</string>[m
[32m+[m[32m    <!-- Displayed on buttons on screen for the tan function. -->[m
[32m+[m[32m    <string name="tan">tan</string>[m
[32m+[m[32m    <!-- Do not translate. What we replace translated TAN with for calculating tan. -->[m
[32m+[m[32m    <string translate="false" name="tan_mathematical_value" translatable="false">tan</string>[m
[32m+[m[32m    <!-- Do not translate. Unicode pi sign; don't translate. Displayed as button on screen. -->[m
[32m+[m[32m    <string name="pi" translatable="false">\u03c0</string>[m
[32m+[m[32m    <!-- Displayed on buttons on screen for the e function. -->[m
[32m+[m[32m    <string name="e">e</string>[m
[32m+[m[32m    <!-- Do not translate. What we replace translated e with for calculating e. -->[m
[32m+[m[32m    <string translate="false" name="e_mathematical_value" translatable="false">e</string>[m
[32m+[m[32m    <!-- Displayed on buttons on screen for the ln function. -->[m
[32m+[m[32m    <string name="ln">ln</string>[m
[32m+[m[32m    <!-- Do not translate. What we replace translated ln with for calculating ln. -->[m
[32m+[m[32m    <string translate="false" name="ln_mathematical_value" translatable="false">ln</string>[m
[32m+[m[32m    <!-- Displayed on buttons on screen for the log function. -->[m
[32m+[m[32m    <string name="lg">log</string>[m
[32m+[m[32m    <!-- Do not translate. What we replace translated lg with for calculating lg. -->[m
[32m+[m[32m    <string translate="false" name="lg_mathematical_value" translatable="false">lg</string>[m
[32m+[m[32m    <!-- Displayed on buttons on screen for a left parenthesis. -->[m
[32m+[m[32m    <string name="leftParen">(</string>[m
[32m+[m[32m    <!-- Displayed on buttons on screen for a right parenthesis. -->[m
[32m+[m[32m    <string name="rightParen">)</string>[m
[32m+[m[32m    <!-- Do not translate. Unicode square root sign; don't translate. Displayed on button on screen. -->[m
[32m+[m[32m    <string name="sqrt" translatable="false">\u221a</string>[m
[32m+[m[32m    <!-- Do not translate. Displayed on buttons on screen. -->[m
[32m+[m[32m    <string name="power" translatable="false">^</string>[m
[32m+[m[32m    <!-- Do not translate. -->[m
[32m+[m[32m    <string name="factorial" translatable="false">!</string>[m
[32m+[m[32m    <!-- Menu item text to take user to the screen with the basic digits and operators. -->[m
[32m+[m[32m    <string name="basic">Basic panel</string>[m
[32m+[m[32m    <!-- Menu item text to take user to the screen with the advanced functions, such as sin, cos, ln, log, etc. -->[m
[32m+[m[32m    <string name="advanced">Advanced panel</string>[m
[32m+[m[32m    <!-- Menu item text to clear the calculation history. -->[m
[32m+[m[32m    <string name="clear_history">Clear history</string>[m
[32m+[m[32m    <!-- Toast shown when text is copied to the clipboard. -->[m
[32m+[m[32m    <string name="text_copied_toast">Text copied.</string>[m
[32m+[m
[32m+[m
[32m+[m[32m    <string name="title_activity_set_alarms" translatable="false">Set Alarm</string>[m
[32m+[m[32m    <string name="no_alarms" translatable="false">No alarms have been set</string>[m
[32m+[m
[32m+[m[32m    <string name="button_new" translatable="false">New</string>[m
[32m+[m
[32m+[m[32m    <!-- Menu -->[m
[32m+[m[32m    <string name="menu_item_new" translatable="false">New</string>[m
[32m+[m[32m    <string name="menu_item_save" translatable="false">Save</string>[m
[32m+[m[32m    <string name="menu_item_delete" translatable="false">Cancel</string>[m
[32m+[m[32m    <string name="menu_item_rate" translatable="false">Rate on Google Play</string>[m
[32m+[m[32m    <string name="menu_item_website" translatable="false">Website</string>[m
[32m+[m[32m    <string name="menu_item_report" translatable="false">Report a Bug</string>[m
[32m+[m
[32m+[m[32m    <!-- Alert -->[m
[32m+[m[32m    <string name="_0" translatable="false">0</string>[m
[32m+[m[32m    <string name="_1" translatable="false">1</string>[m
[32m+[m[32m    <string name="_2" translatable="false">2</string>[m
[32m+[m[32m    <string name="_3" translatable="false">3</string>[m
[32m+[m[32m    <string name="_4" translatable="false">4</string>[m
[32m+[m[32m    <string name="_5" translatable="false">5</string>[m
[32m+[m[32m    <string name="_6" translatable="false">6</string>[m
[32m+[m[32m    <string name="_7" translatable="false">7</string>[m
[32m+[m[32m    <string name="_8" translatable="false">8</string>[m
[32m+[m[32m    <string name="_9" translatable="false">9</string>[m
[32m+[m[32m    <string name="decimal_button_text" translatable="false">,</string>[m
[32m+[m[32m    <string name="clear_button_text" translatable="false">Clear</string>[m
[32m+[m[32m    <string name="minus_button_text" translatable="false">-</string>[m
[32m+[m
[32m+[m
[32m+[m[32m    <color name="title_background_color">#000000</color>[m
[32m+[m
[32m+[m[32m    <string name="button_delete" translatable="false">Delete</string>[m
[32m+[m[32m    <string name="ok" translatable="false">OK</string>[m
[32m+[m[32m    <string name="cancel" translatable="false">Cancel</string>[m
[32m+[m
[32m+[m[32m    <!--Content descriptions for accessibility. These strings will be read aloud to users who are using the calculator with[m
[32m+[m[32m    accessibility features enabled and should reflect the mathematical concept instead of a direct representation of what is shown[m
[32m+[m[32m    on the button-->[m
[32m+[m[32m    <string name="leftParenDesc">left parenthesis</string>[m
[32m+[m[32m    <string name="rightParenDesc">right parenthesis</string>[m
[32m+[m[32m    <string name="factorialDesc">factorial</string>[m
[32m+[m[32m    <string name="lnDesc">natural logarithm</string>[m
[32m+[m[32m    <string name="lgDesc">logarithm</string>[m
[32m+[m[32m    <string name="sqrtDesc">square root</string>[m
[32m+[m[32m    <string name="divDesc">divide</string>[m
[32m+[m[32m    <string name="mulDesc">multiply</string>[m
[32m+[m[32m    <string name="plusDesc">plus</string>[m
[32m+[m[32m    <string name="minusDesc">minus</string>[m
[32m+[m[32m    <string name="dotDesc">point</string>[m
[32m+[m[32m    <string name="powerDesc">power</string>[m
[32m+[m[32m    <string name="delDesc">delete</string>[m
[32m+[m[32m    <string name="clearDesc">clear</string>[m
[32m+[m[32m    <string name="tanDesc">tangent</string>[m
[32m+[m[32m    <string name="sinDesc">sine</string>[m
[32m+[m[32m    <string name="cosDesc">cosine</string>[m
[32m+[m[32m    <string name="eDesc">Euler\'s number</string>[m
[32m+[m[32m    <string name="piDesc">pi</string>[m
[32m+[m[32m    <string name="equalDesc">equals</string>[m
[32m+[m
[32m+[m[32m    <!--Content descriptions for accessibility used as keys when determining which mathematical[m
[32m+[m[32m    concept description to speak when accessibility features are enabled. Order of the array is[m
[32m+[m[32m    important. -->[m
[32m+[m[32m    <string-array name="operators" translatable="false">[m
[32m+[m[32m        <item>(</item>[m
[32m+[m[32m        <item>)</item>[m
[32m+[m[32m        <item>!</item>[m
[32m+[m[32m        <item>ln</item>[m
[32m+[m[32m        <item>log</item>[m
[32m+[m[32m        <item>\u221a</item>[m
[32m+[m[32m        <item>\u00f7</item>[m
[32m+[m[32m        <item>\u00d7</item>[m
[32m+[m[32m        <item>+</item>[m
[32m+[m[32m        <item>\u2212</item>[m
[32m+[m[32m        <item>.</item>[m
[32m+[m[32m        <item>^</item>[m
[32m+[m[32m        <item>tan</item>[m
[32m+[m[32m        <item>sin</item>[m
[32m+[m[32m        <item>cos</item>[m
[32m+[m[32m        <item>\u03c0</item>[m
[32m+[m[32m        <item>=</item>[m
[32m+[m[32m    </string-array>[m
[32m+[m
[32m+[m[32m    <!--Content descriptions for accessibility. These strings will be read aloud to users who[m
[32m+[m[32m     are using the calculator with accessibility features enabled and hover over the edit text[m
[32m+[m[32m     field. These should reflect the mathematical concept instead of a direct representation of[m
[32m+[m[32m     what is shown in the text field. Order of the array is important.-->[m
[32m+[m[32m    <string-array name="operatorDescs">[m
[32m+[m[32m        <!-- Description for mathematical ( [CHAR LIMIT=200]-->[m
[32m+[m[32m        <item>left parenthesis</item>[m
[32m+[m[32m        <!-- Description for mathematical ) [CHAR LIMIT=200]-->[m
[32m+[m[32m        <item>right parenthesis</item>[m
[32m+[m[32m        <!-- Description for mathematical ! (factorial) function [CHAR LIMIT=200]-->[m
[32m+[m[32m        <item>factorial</item>[m
[32m+[m[32m        <!-- Description for mathematical ln [CHAR LIMIT=200]-->[m
[32m+[m[32m        <item>natural logarithm</item>[m
[32m+[m[32m        <!-- Description for mathematical log [CHAR LIMIT=200]-->[m
[32m+[m[32m        <item>logarithm</item>[m
[32m+[m[32m        <!-- Description for mathematical square root [CHAR LIMIT=200]-->[m
[32m+[m[32m        <item>square root</item>[m
[32m+[m[32m        <!-- Description for mathematical / [CHAR LIMIT=200]-->[m
[32m+[m[32m        <item>divided by</item>[m
[32m+[m[32m        <!-- Description for mathematical x [CHAR LIMIT=200]-->[m
[32m+[m[32m        <item>multiplied by</item>[m
[32m+[m[32m        <!-- Description for mathematical + [CHAR LIMIT=200]-->[m
[32m+[m[32m        <item>plus</item>[m
[32m+[m[32m        <!-- Description for mathematical - [CHAR LIMIT=200]-->[m
[32m+[m[32m        <item>minus</item>[m
[32m+[m[32m        <!-- Description for mathematical . [CHAR LIMIT=200]-->[m
[32m+[m[32m        <item>&#160;point&#160;</item>[m
[32m+[m[32m        <!-- Description for mathematical ^ [CHAR LIMIT=200]-->[m
[32m+[m[32m        <item>power</item>[m
[32m+[m[32m        <!-- Description for mathematical TAN [CHAR LIMIT=200]-->[m
[32m+[m[32m        <item>tangent</item>[m
[32m+[m[32m        <!-- Description for mathematical SIN [CHAR LIMIT=200]-->[m
[32m+[m[32m        <item>sine</item>[m
[32m+[m[32m        <!-- Description for mathematical COS [CHAR LIMIT=200]-->[m
[32m+[m[32m        <item>cosine</item>[m
[32m+[m[32m        <!-- Description for mathematical PI [CHAR LIMIT=200]-->[m
[32m+[m[32m        <item>pi</item>[m
[32m+[m[32m        <!-- Description for mathematical = [CHAR LIMIT=200]-->[m
[32m+[m[32m        <item>equals</item>[m
[32m+[m[32m    </string-array>[m
[32m+[m[32m</resources>[m
[1mdiff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..e1b4109[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/values/styles.xml[m
[36m@@ -0,0 +1,88 @@[m
[32m+[m[32m<resources>[m
[32m+[m
[32m+[m[32m    <!-- Base application theme. -->[m
[32m+[m[32m    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">[m
[32m+[m[32m        <!-- Customize your theme here. -->[m
[32m+[m[32m        <item name="colorPrimary">@color/colorPrimary</item>[m
[32m+[m[32m        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>[m
[32m+[m[32m        <item name="colorAccent">@color/colorAccent</item>[m
[32m+[m[32m    </style>[m
[32m+[m[32m    <dimen name="btn_digit_text_size">40sp</dimen>[m
[32m+[m[32m    <dimen name="btn_operation_text_size">40sp</dimen>[m
[32m+[m[32m    <dimen name="btn_function_text_size">30sp</dimen>[m
[32m+[m[32m    <dimen name="btn_clear_text_size">30sp</dimen>[m
[32m+[m[32m    <dimen name="display_text_size">30sp</dimen>[m
[32m+[m
[32m+[m[32m    <style name="button_style">[m
[32m+[m[32m        <item name="android:textSize">40dp</item>[m
[32m+[m[32m        <item name="android:layout_width">match_parent</item>[m
[32m+[m[32m        <item name="android:layout_height">match_parent</item>[m
[32m+[m[32m        <item name="android:layout_weight">1</item>[m
[32m+[m[32m        <item name="android:focusable">true</item>[m
[32m+[m[32m        <item name="android:background">@drawable/btn_digit</item>[m
[32m+[m[32m        <item name="android:layout_marginLeft">1dp</item>[m
[32m+[m[32m    </style>[m
[32m+[m
[32m+[m[32m    <style name="digit_button_style" parent="button_style">[m
[32m+[m[32m        <item name="android:background">@drawable/btn_digit</item>[m
[32m+[m[32m    </style>[m
[32m+[m
[32m+[m[32m    <style name="button_small_style" parent="button_style">[m
[32m+[m[32m        <item name="android:textSize">30dp</item>[m
[32m+[m[32m    </style>[m
[32m+[m
[32m+[m[32m    <style name="display_style">[m
[32m+[m[32m        <item name="android:textSize">@dimen/display_text_size</item>[m
[32m+[m[32m        <item name="android:inputType">text|textNoSuggestions</item>[m
[32m+[m[32m        <item name="android:gravity">right|center_vertical</item>[m
[32m+[m[32m        <item name="android:textColor">#ffffff</item>[m
[32m+[m[32m        <item name="android:maxLines">1</item>[m
[32m+[m[32m        <item name="android:scrollbars">none</item>[m
[32m+[m[32m        <item name="android:scrollHorizontally">true</item>[m
[32m+[m[32m        <item name="android:layout_width">match_parent</item>[m
[32m+[m[32m        <item name="android:layout_height">match_parent</item>[m
[32m+[m[32m        <item name="android:paddingTop">8dp</item>[m
[32m+[m[32m        <item name="android:paddingLeft">8dp</item>[m
[32m+[m[32m        <item name="android:paddingRight">8dp</item>[m
[32m+[m[32m        <item name="android:paddingBottom">0dp</item>[m
[32m+[m[32m        <item name="android:cursorVisible">false</item>[m
[32m+[m[32m    </style>[m
[32m+[m
[32m+[m[32m    <style name="btn_row_style">[m
[32m+[m[32m        <item name="android:layout_width">match_parent</item>[m
[32m+[m[32m        <item name="android:layout_height">0dip</item>[m
[32m+[m[32m        <item name="android:layout_weight">1</item>[m
[32m+[m[32m        <item name="android:orientation">horizontal</item>[m
[32m+[m[32m    </style>[m
[32m+[m
[32m+[m[32m    <style name="btn_function_cell_style">[m
[32m+[m[32m        <item name="android:layout_width">0dip</item>[m
[32m+[m[32m        <item name="android:layout_weight">1</item>[m
[32m+[m[32m        <item name="android:layout_height">match_parent</item>[m
[32m+[m[32m        <item name="android:background">@drawable/btn_function</item>[m
[32m+[m[32m        <item name="android:textSize">@dimen/btn_function_text_size</item>[m
[32m+[m[32m    </style>[m
[32m+[m
[32m+[m[32m    <style name="btn_operation_cell_style">[m
[32m+[m[32m        <item name="android:layout_width">0dip</item>[m
[32m+[m[32m        <item name="android:layout_weight">1</item>[m
[32m+[m[32m        <item name="android:layout_height">match_parent</item>[m
[32m+[m[32m        <item name="android:gravity">center</item>[m
[32m+[m[32m        <item name="android:background">@drawable/btn_function</item>[m
[32m+[m[32m        <item name="android:textSize">@dimen/btn_operation_text_size</item>[m
[32m+[m[32m    </style>[m
[32m+[m
[32m+[m[32m    <style name="btn_digit_cell_style">[m
[32m+[m[32m        <item name="android:layout_width">0dip</item>[m
[32m+[m[32m        <item name="android:layout_weight">1</item>[m
[32m+[m[32m        <item name="android:layout_height">match_parent</item>[m
[32m+[m[32m        <item name="android:gravity">center</item>[m
[32m+[m[32m        <item name="android:background">@drawable/btn_digit</item>[m
[32m+[m[32m        <item name="android:textSize">@dimen/btn_digit_text_size</item>[m
[32m+[m[32m    </style>[m
[32m+[m
[32m+[m[32m    <style name="btn_clear">[m
[32m+[m[32m        <item name="android:background">?android:attr/selectableItemBackground</item>[m
[32m+[m[32m        <item name="android:textSize">@dimen/btn_clear_text_size</item>[m
[32m+[m[32m    </style>[m
[32m+[m[32m</resources>[m
[1mdiff --git a/app/src/test/java/com/z/blast/workbox/ExampleUnitTest.java b/app/src/test/java/com/z/blast/workbox/ExampleUnitTest.java[m
[1mnew file mode 100644[m
[1mindex 0000000..63057e6[m
[1m--- /dev/null[m
[1m+++ b/app/src/test/java/com/z/blast/workbox/ExampleUnitTest.java[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mpackage com.z.blast.workbox;[m
[32m+[m
[32m+[m[32mimport org.junit.Test;[m
[32m+[m
[32m+[m[32mimport static org.junit.Assert.*;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * To work on unit tests, switch the Test Artifact in the Build Variants view.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class ExampleUnitTest {[m
[32m+[m[32m    @Test[m
[32m+[m[32m    public void addition_isCorrect() throws Exception {[m
[32m+[m[32m        assertEquals(4, 2 + 2);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/build.gradle b/build.gradle[m
[1mnew file mode 100644[m
[1mindex 0000000..e0b366a[m
[1m--- /dev/null[m
[1m+++ b/build.gradle[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m// Top-level build file where you can add configuration options common to all sub-projects/modules.[m
[32m+[m
[32m+[m[32mbuildscript {[m
[32m+[m[32m    repositories {[m
[32m+[m[32m        jcenter()[m
[32m+[m[32m    }[m
[32m+[m[32m    dependencies {[m
[32m+[m[32m        classpath 'com.android.tools.build:gradle:1.5.0'[m
[32m+[m
[32m+[m[32m        // NOTE: Do not place your application dependencies here; they belong[m
[32m+[m[32m        // in the individual module build.gradle files[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mallprojects {[m
[32m+[m[32m    repositories {[m
[32m+[m[32m        jcenter()[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtask clean(type: Delete) {[m
[32m+[m[32m    delete rootProject.buildDir[m
[32m+[m[32m}[m
[1mdiff --git a/gradle.properties b/gradle.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..1d3591c[m
[1m--- /dev/null[m
[1m+++ b/gradle.properties[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32m# Project-wide Gradle settings.[m
[32m+[m
[32m+[m[32m# IDE (e.g. Android Studio) users:[m
[32m+[m[32m# Gradle settings configured through the IDE *will override*[m
[32m+[m[32m# any settings specified in this file.[m
[32m+[m
[32m+[m[32m# For more details on how to configure your build environment visit[m
[32m+[m[32m# http://www.gradle.org/docs/current/userguide/build_environment.html[m
[32m+[m
[32m+[m[32m# Specifies the JVM arguments used for the daemon process.[m
[32m+[m[32m# The setting is particularly useful for tweaking memory settings.[m
[32m+[m[32m# Default value: -Xmx10248m -XX:MaxPermSize=256m[m
[32m+[m[32m# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8[m
[32m+[m
[32m+[m[32m# When configured, Gradle will run in incubating parallel mode.[m
[32m+[m[32m# This option should only be used with decoupled projects. More details, visit[m
[32m+[m[32m# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects[m
[32m+[m[32m# org.gradle.parallel=true[m
\ No newline at end of file[m
[1mdiff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar[m
[1mnew file mode 100644[m
[1mindex 0000000..05ef575[m
Binary files /dev/null and b/gradle/wrapper/gradle-wrapper.jar differ
[1mdiff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..f23df6e[m
[1m--- /dev/null[m
[1m+++ b/gradle/wrapper/gradle-wrapper.properties[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32m#Wed Oct 21 11:34:03 PDT 2015[m
[32m+[m[32mdistributionBase=GRADLE_USER_HOME[m
[32m+[m[32mdistributionPath=wrapper/dists[m
[32m+[m[32mzipStoreBase=GRADLE_USER_HOME[m
[32m+[m[32mzipStorePath=wrapper/dists[m
[32m+[m[32mdistributionUrl=https\://services.gradle.org/distributions/gradle-2.8-all.zip[m
[1mdiff --git a/gradlew b/gradlew[m
[1mnew file mode 100644[m
[1mindex 0000000..9d82f78[m
[1m--- /dev/null[m
[1m+++ b/gradlew[m
[36m@@ -0,0 +1,160 @@[m
[32m+[m[32m#!/usr/bin/env bash[m
[32m+[m
[32m+[m[32m##############################################################################[m
[32m+[m[32m##[m
[32m+[m[32m##  Gradle start up script for UN*X[m
[32m+[m[32m##[m
[32m+[m[32m##############################################################################[m
[32m+[m
[32m+[m[32m# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.[m
[32m+[m[32mDEFAULT_JVM_OPTS=""[m
[32m+[m
[32m+[m[32mAPP_NAME="Gradle"[m
[32m+[m[32mAPP_BASE_NAME=`basename "$0"`[m
[32m+[m
[32m+[m[32m# Use the maximum available, or set MAX_FD != -1 to use that value.[m
[32m+[m[32mMAX_FD="maximum"[m
[32m+[m
[32m+[m[32mwarn ( ) {[m
[32m+[m[32m    echo "$*"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mdie ( ) {[m
[32m+[m[32m    echo[m
[32m+[m[32m    echo "$*"[m
[32m+[m[32m    echo[m
[32m+[m[32m    exit 1[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# OS specific support (must be 'true' or 'false').[m
[32m+[m[32mcygwin=false[m
[32m+[m[32mmsys=false[m
[32m+[m[32mdarwin=false[m
[32m+[m[32mcase "`uname`" in[m
[32m+[m[32m  CYGWIN* )[m
[32m+[m[32m    cygwin=true[m
[32m+[m[32m    ;;[m
[32m+[m[32m  Darwin* )[m
[32m+[m[32m    darwin=true[m
[32m+[m[32m    ;;[m
[32m+[m[32m  MINGW* )[m
[32m+[m[32m    msys=true[m
[32m+[m[32m    ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# Attempt to set APP_HOME[m
[32m+[m[32m# Resolve links: $0 may be a link[m
[32m+[m[32mPRG="$0"[m
[32m+[m[32m# Need this for relative symlinks.[m
[32m+[m[32mwhile [ -h "$PRG" ] ; do[m
[32m+[m[32m    ls=`ls -ld "$PRG"`[m
[32m+[m[32m    link=`expr "$ls" : '.*-> \(.*\)$'`[m
[32m+[m[32m    if expr "$link" : '/.*' > /dev/null; then[m
[32m+[m[32m        PRG="$link"[m
[32m+[m[32m    else[m
[32m+[m[32m        PRG=`dirname "$PRG"`"/$link"[m
[32m+[m[32m    fi[m
[32m+[m[32mdone[m
[32m+[m[32mSAVED="`pwd`"[m
[32m+[m[32mcd "`dirname \"$PRG\"`/" >/dev/null[m
[32m+[m[32mAPP_HOME="`pwd -P`"[m
[32m+[m[32mcd "$SAVED" >/dev/null[m
[32m+[m
[32m+[m[32mCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar[m
[32m+[m
[32m+[m[32m# Determine the Java command to use to start the JVM.[m
[32m+[m[32mif [ -n "$JAVA_HOME" ] ; then[m
[32m+[m[32m    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then[m
[32m+[m[32m        # IBM's JDK on AIX uses strange locations for the executables[m
[32m+[m[32m        JAVACMD="$JAVA_HOME/jre/sh/java"[m
[32m+[m[32m    else[m
[32m+[m[32m        JAVACMD="$JAVA_HOME/bin/java"[m
[32m+[m[32m    fi[m
[32m+[m[32m    if [ ! -x "$JAVACMD" ] ; then[m
[32m+[m[32m        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME[m
[32m+[m
[32m+[m[32mPlease set the JAVA_HOME variable in your environment to match the[m
[32m+[m[32mlocation of your Java installation."[m
[32m+[m[32m    fi[m
[32m+[m[32melse[m
[32m+[m[32m    JAVACMD="java"[m
[32m+[m[32m    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.[m
[32m+[m
[32m+[m[32mPlease set the JAVA_HOME variable in your environment to match the[m
[32m+[m[32mlocation of your Java installation."[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# Increase the maximum file descriptors if we can.[m
[32m+[m[32mif [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then[m
[32m+[m[32m    MAX_FD_LIMIT=`ulimit -H -n`[m
[32m+[m[32m    if [ $? -eq 0 ] ; then[m
[32m+[m[32m        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then[m
[32m+[m[32m            MAX_FD="$MAX_FD_LIMIT"[m
[32m+[m[32m        fi[m
[32m+[m[32m        ulimit -n $MAX_FD[m
[32m+[m[32m        if [ $? -ne 0 ] ; then[m
[32m+[m[32m            warn "Could not set maximum file descriptor limit: $MAX_FD"[m
[32m+[m[32m        fi[m
[32m+[m[32m    else[m
[32m+[m[32m        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"[m
[32m+[m[32m    fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# For Darwin, add options to specify how the application appears in the dock[m
[32m+[m[32mif $darwin; then[m
[32m+[m[32m    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# For Cygwin, switch paths to Windows format before running java[m
[32m+[m[32mif $cygwin ; then[m
[32m+[m[32m    APP_HOME=`cygpath --path --mixed "$APP_HOME"`[m
[32m+[m[32m    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`[m
[32m+[m[32m    JAVACMD=`cygpath --unix "$JAVACMD"`[m
[32m+[m
[32m+[m[32m    # We build the pattern for arguments to be converted via cygpath[m
[32m+[m[32m    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`[m
[32m+[m[32m    SEP=""[m
[32m+[m[32m    for dir in $ROOTDIRSRAW ; do[m
[32m+[m[32m        ROOTDIRS="$ROOTDIRS$SEP$dir"[m
[32m+[m[32m        SEP="|"[m
[32m+[m[32m    done[m
[32m+[m[32m    OURCYGPATTERN="(^($ROOTDIRS))"[m
[32m+[m[32m    # Add a user-defined pattern to the cygpath arguments[m
[32m+[m[32m    if [ "$GRADLE_CYGPATTERN" != "" ] ; then[m
[32m+[m[32m        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"[m
[32m+[m[32m    fi[m
[32m+[m[32m    # Now convert the arguments - kludge to limit ourselves to /bin/sh[m
[32m+[m[32m    i=0[m
[32m+[m[32m    for arg in "$@" ; do[m
[32m+[m[32m        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`[m
[32m+[m[32m        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option[m
[32m+[m
[32m+[m[32m        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition[m
[32m+[m[32m            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`[m
[32m+[m[32m        else[m
[32m+[m[32m            eval `echo args$i`="\"$arg\""[m
[32m+[m[32m        fi[m
[32m+[m[32m        i=$((i+1))[m
[32m+[m[32m    done[m
[32m+[m[32m    case $i in[m
[32m+[m[32m        (0) set -- ;;[m
[32m+[m[32m        (1) set -- "$args0" ;;[m
[32m+[m[32m        (2) set -- "$args0" "$args1" ;;[m
[32m+[m[32m        (3) set -- "$args0" "$args1" "$args2" ;;[m
[32m+[m[32m        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;[m
[32m+[m[32m        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;[m
[32m+[m[32m        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;[m
[32m+[m[32m        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;[m
[32m+[m[32m        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;[m
[32m+[m[32m        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;[m
[32m+[m[32m    esac[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules[m
[32m+[m[32mfunction splitJvmOpts() {[m
[32m+[m[32m    JVM_OPTS=("$@")[m
[32m+[m[32m}[m
[32m+[m[32meval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS[m
[32m+[m[32mJVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"[m
[32m+[m
[32m+[m[32mexec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"[m
[1mdiff --git a/gradlew.bat b/gradlew.bat[m
[1mnew file mode 100644[m
[1mindex 0000000..8a0b282[m
[1m--- /dev/null[m
[1m+++ b/gradlew.bat[m
[36m@@ -0,0 +1,90 @@[m
[32m+[m[32m@if "%DEBUG%" == "" @echo off[m
[32m+[m[32m@rem ##########################################################################[m
[32m+[m[32m@rem[m
[32m+[m[32m@rem  Gradle startup script for Windows[m
[32m+[m[32m@rem[m
[32m+[m[32m@rem ##########################################################################[m
[32m+[m
[32m+[m[32m@rem Set local scope for the variables with windows NT shell[m
[32m+[m[32mif "%OS%"=="Windows_NT" setlocal[m
[32m+[m
[32m+[m[32m@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.[m
[32m+[m[32mset DEFAULT_JVM_OPTS=[m
[32m+[m
[32m+[m[32mset DIRNAME=%~dp0[m
[32m+[m[32mif "%DIRNAME%" == "" set DIRNAME=.[m
[32m+[m[32mset APP_BASE_NAME=%~n0[m
[32m+[m[32mset APP_HOME=%DIRNAME%[m
[32m+[m
[32m+[m[32m@rem Find java.exe[m
[32m+[m[32mif defined JAVA_HOME goto findJavaFromJavaHome[m
[32m+[m
[32m+[m[32mset JAVA_EXE=java.exe[m
[32m+[m[32m%JAVA_EXE% -version >NUL 2>&1[m
[32m+[m[32mif "%ERRORLEVEL%" == "0" goto init[m
[32m+[m
[32m+[m[32mecho.[m
[32m+[m[32mecho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.[m
[32m+[m[32mecho.[m
[32m+[m[32mecho Please set the JAVA_HOME variable in your environment to match the[m
[32m+[m[32mecho location of your Java installation.[m
[32m+[m
[32m+[m[32mgoto fail[m
[32m+[m
[32m+[m[32m:findJavaFromJavaHome[m
[32m+[m[32mset JAVA_HOME=%JAVA_HOME:"=%[m
[32m+[m[32mset JAVA_EXE=%JAVA_HOME%/bin/java.exe[m
[32m+[m
[32m+[m[32mif exist "%JAVA_EXE%" goto init[m
[32m+[m
[32m+[m[32mecho.[m
[32m+[m[32mecho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%[m
[32m+[m[32mecho.[m
[32m+[m[32mecho Please set the JAVA_HOME variable in your environment to match the[m
[32m+[m[32mecho location of your Java installation.[m
[32m+[m
[32m+[m[32mgoto fail[m
[32m+[m
[32m+[m[32m:init[m
[32m+[m[32m@rem Get command-line arguments, handling Windowz variants[m
[32m+[m
[32m+[m[32mif not "%OS%" == "Windows_NT" goto win9xME_args[m
[32m+[m[32mif "%@eval[2+2]" == "4" goto 4NT_args[m
[32m+[m
[32m+[m[32m:win9xME_args[m
[32m+[m[32m@rem Slurp the command line arguments.[m
[32m+[m[32mset CMD_LINE_ARGS=[m
[32m+[m[32mset _SKIP=2[m
[32m+[m
[32m+[m[32m:win9xME_args_slurp[m
[32m+[m[32mif "x%~1" == "x" goto execute[m
[32m+[m
[32m+[m[32mset CMD_LINE_ARGS=%*[m
[32m+[m[32mgoto execute[m
[32m+[m
[32m+[m[32m:4NT_args[m
[32m+[m[32m@rem Get arguments from the 4NT Shell from JP Software[m
[32m+[m[32mset CMD_LINE_ARGS=%$[m
[32m+[m
[32m+[m[32m:execute[m
[32m+[m[32m@rem Setup the command line[m
[32m+[m
[32m+[m[32mset CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar[m
[32m+[m
[32m+[m[32m@rem Execute Gradle[m
[32m+[m[32m"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%[m
[32m+[m
[32m+[m[32m:end[m
[32m+[m[32m@rem End local scope for the variables with windows NT shell[m
[32m+[m[32mif "%ERRORLEVEL%"=="0" goto mainEnd[m
[32m+[m
[32m+[m[32m:fail[m
[32m+[m[32mrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of[m
[32m+[m[32mrem the _cmd.exe /c_ return code![m
[32m+[m[32mif  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1[m
[32m+[m[32mexit /b 1[m
[32m+[m
[32m+[m[32m:mainEnd[m
[32m+[m[32mif "%OS%"=="Windows_NT" endlocal[m
[32m+[m
[32m+[m[32m:omega[m
[1mdiff --git a/settings.gradle b/settings.gradle[m
[1mnew file mode 100644[m
[1mindex 0000000..e7b4def[m
[1m--- /dev/null[m
[1m+++ b/settings.gradle[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32minclude ':app'[m
